[
  {
    "id": "306/A",
    "contestId": 306,
    "index": "A",
    "name": "Candies",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "285/C",
    "contestId": 285,
    "index": "C",
    "name": "Building Permutation",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "124/A",
    "contestId": 124,
    "index": "A",
    "name": "The number of positions",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "379/A",
    "contestId": 379,
    "index": "A",
    "name": "New Year Candles",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "386/A",
    "contestId": 386,
    "index": "A",
    "name": "Second-Price Auction",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "706/B",
    "contestId": 706,
    "index": "B",
    "name": "Interesting drink",
    "rating": 1100,
    "tags": [
      "binary search",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "602/A",
    "contestId": 602,
    "index": "A",
    "name": "Two Bases",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "462/A",
    "contestId": 462,
    "index": "A",
    "name": "Appleman and Easy Task",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1153/A",
    "contestId": 1153,
    "index": "A",
    "name": "Serval and Bus",
    "rating": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1607/A",
    "contestId": 1607,
    "index": "A",
    "name": "Linear Keyboard",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "384/A",
    "contestId": 384,
    "index": "A",
    "name": "Coder",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "489/B",
    "contestId": 489,
    "index": "B",
    "name": "BerSU Ball",
    "rating": 1200,
    "tags": [
      "dfs and similar",
      "dp",
      "graph matchings",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "388/A",
    "contestId": 388,
    "index": "A",
    "name": "Fox and Box Accumulation",
    "rating": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1996/A",
    "contestId": 1996,
    "index": "A",
    "name": "Legs",
    "rating": 800,
    "tags": [
      "binary search",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "1811/E",
    "contestId": 1811,
    "index": "E",
    "name": "Living Sequence",
    "rating": 1500,
    "tags": [
      "binary search",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "816/B",
    "contestId": 816,
    "index": "B",
    "name": "Karen and Coffee",
    "rating": 1400,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1931/A",
    "contestId": 1931,
    "index": "A",
    "name": "Recovering a Small String",
    "rating": 800,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "id": "350/A",
    "contestId": 350,
    "index": "A",
    "name": "TL",
    "rating": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "659/A",
    "contestId": 659,
    "index": "A",
    "name": "Round House",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1721/A",
    "contestId": 1721,
    "index": "A",
    "name": "Image",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1011/B",
    "contestId": 1011,
    "index": "B",
    "name": "Planning The Expedition",
    "rating": 1200,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1230/B",
    "contestId": 1230,
    "index": "B",
    "name": "Ania and Minimizing",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1023/A",
    "contestId": 1023,
    "index": "A",
    "name": "Single Wildcard Pattern Matching",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1201/A",
    "contestId": 1201,
    "index": "A",
    "name": "Important Exam",
    "rating": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "269/A",
    "contestId": 269,
    "index": "A",
    "name": "Magical Boxes",
    "rating": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "185/B",
    "contestId": 185,
    "index": "B",
    "name": "Mushroom Scientists",
    "rating": 1800,
    "tags": [
      "math",
      "ternary search"
    ]
  },
  {
    "id": "1389/A",
    "contestId": 1389,
    "index": "A",
    "name": "LCM Problem",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1013/A",
    "contestId": 1013,
    "index": "A",
    "name": "Piles With Stones",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1472/C",
    "contestId": 1472,
    "index": "C",
    "name": "Long Jumps",
    "rating": 1100,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1174/B",
    "contestId": 1174,
    "index": "B",
    "name": "Ehab Is an Odd Person",
    "rating": 1200,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "194/B",
    "contestId": 194,
    "index": "B",
    "name": "Square",
    "rating": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "id": "598/A",
    "contestId": 598,
    "index": "A",
    "name": "Tricky Sum",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1509/B",
    "contestId": 1509,
    "index": "B",
    "name": "TMT Document",
    "rating": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1203/E",
    "contestId": 1203,
    "index": "E",
    "name": "Boxers",
    "rating": 1500,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "899/C",
    "contestId": 899,
    "index": "C",
    "name": "Dividing the numbers",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1223/B",
    "contestId": 1223,
    "index": "B",
    "name": "Strings Equalization",
    "rating": 1000,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "143/A",
    "contestId": 143,
    "index": "A",
    "name": "Help Vasilisa the Wise 2",
    "rating": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "992/C",
    "contestId": 992,
    "index": "C",
    "name": "Nastya and a Wardrobe",
    "rating": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "id": "123/B",
    "contestId": 123,
    "index": "B",
    "name": "Squares",
    "rating": 1800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1265/B",
    "contestId": 1265,
    "index": "B",
    "name": "Beautiful Numbers",
    "rating": 1300,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1312/A",
    "contestId": 1312,
    "index": "A",
    "name": "Two Regular Polygons",
    "rating": 800,
    "tags": [
      "geometry",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1345/B",
    "contestId": 1345,
    "index": "B",
    "name": "Card Constructions",
    "rating": 1100,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "id": "1829/H",
    "contestId": 1829,
    "index": "H",
    "name": "Don't Blame Me",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1574/B",
    "contestId": 1574,
    "index": "B",
    "name": "Combinatorics Homework",
    "rating": 1100,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "id": "699/B",
    "contestId": 699,
    "index": "B",
    "name": "One Bomb",
    "rating": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1157/C1",
    "contestId": 1157,
    "index": "C1",
    "name": "Increasing Subsequence (easy version)",
    "rating": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1579/A",
    "contestId": 1579,
    "index": "A",
    "name": "Casimir's String Solitaire",
    "rating": 800,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "id": "1228/B",
    "contestId": 1228,
    "index": "B",
    "name": "Filling the Grid",
    "rating": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1180/A",
    "contestId": 1180,
    "index": "A",
    "name": "Alex and a Rhombus",
    "rating": 800,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "177/C1",
    "contestId": 177,
    "index": "C1",
    "name": "Party",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1119/A",
    "contestId": 1119,
    "index": "A",
    "name": "Ilya and a Colorful Walk",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "931/B",
    "contestId": 931,
    "index": "B",
    "name": "World Cup",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "50/C",
    "contestId": 50,
    "index": "C",
    "name": "Happy Farm 5",
    "rating": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "266/B",
    "contestId": 266,
    "index": "B",
    "name": "Queue at the School",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "graph matchings",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "1333/C",
    "contestId": 1333,
    "index": "C",
    "name": "Eugene and an array",
    "rating": 1700,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "637/C",
    "contestId": 637,
    "index": "C",
    "name": "Promocodes with Mistakes",
    "rating": 1400,
    "tags": [
      "*special",
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "122/B",
    "contestId": 122,
    "index": "B",
    "name": "Lucky Substring",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "371/D",
    "contestId": 371,
    "index": "D",
    "name": "Vessels",
    "rating": 1800,
    "tags": [
      "data structures",
      "dsu",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1433/G",
    "contestId": 1433,
    "index": "G",
    "name": "Reducing Delivery Cost",
    "rating": 2100,
    "tags": [
      "brute force",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1270/C",
    "contestId": 1270,
    "index": "C",
    "name": "Make Good",
    "rating": 1400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1776/M",
    "contestId": 1776,
    "index": "M",
    "name": "Parmigiana With Seafood",
    "rating": 3000,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1147/A",
    "contestId": 1147,
    "index": "A",
    "name": "Hide and Seek",
    "rating": 1500,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "1529/B",
    "contestId": 1529,
    "index": "B",
    "name": "Sifid and Strange Subsequences",
    "rating": 1100,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "215/A",
    "contestId": 215,
    "index": "A",
    "name": "Bicycle Chain",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "46/D",
    "contestId": 46,
    "index": "D",
    "name": "Parking Lot",
    "rating": 1800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1431/E",
    "contestId": 1431,
    "index": "E",
    "name": "Chess Match",
    "rating": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1379/A",
    "contestId": 1379,
    "index": "A",
    "name": "Acacius and String",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1216/C",
    "contestId": 1216,
    "index": "C",
    "name": "White Sheet",
    "rating": 1700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1154/F",
    "contestId": 1154,
    "index": "F",
    "name": "Shovels Shop",
    "rating": 2100,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1213/C",
    "contestId": 1213,
    "index": "C",
    "name": "Book Reading",
    "rating": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "id": "550/A",
    "contestId": 550,
    "index": "A",
    "name": "Two Substrings",
    "rating": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1754/B",
    "contestId": 1754,
    "index": "B",
    "name": "Kevin and Permutation",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1476/E",
    "contestId": 1476,
    "index": "E",
    "name": "Pattern Matching",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "graphs",
      "hashing",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "70/B",
    "contestId": 70,
    "index": "B",
    "name": "Text Messaging",
    "rating": 1600,
    "tags": [
      "expression parsing",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1679/B",
    "contestId": 1679,
    "index": "B",
    "name": "Stone Age Problem",
    "rating": 1200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "863/A",
    "contestId": 863,
    "index": "A",
    "name": "Quasi-palindrome",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1468/K",
    "contestId": 1468,
    "index": "K",
    "name": "The Robot",
    "rating": 1600,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1760/E",
    "contestId": 1760,
    "index": "E",
    "name": "Binary Inversions",
    "rating": 1100,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1257/E",
    "contestId": 1257,
    "index": "E",
    "name": "The Contest",
    "rating": 2000,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1036/C",
    "contestId": 1036,
    "index": "C",
    "name": "Classy Numbers",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "845/G",
    "contestId": 845,
    "index": "G",
    "name": "Shortest Path Problem?",
    "rating": 2300,
    "tags": [
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1012/A",
    "contestId": 1012,
    "index": "A",
    "name": "Photo of The Sky",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1984/A",
    "contestId": 1984,
    "index": "A",
    "name": "Strange Splitting",
    "rating": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "28/B",
    "contestId": 28,
    "index": "B",
    "name": "pSort",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1172/C2",
    "contestId": 1172,
    "index": "C2",
    "name": "Nauuo and Pictures (hard version)",
    "rating": 2600,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "665/D",
    "contestId": 665,
    "index": "D",
    "name": "Simple Subset",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1955/B",
    "contestId": 1955,
    "index": "B",
    "name": "Progressive Square",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1932/G",
    "contestId": 1932,
    "index": "G",
    "name": "Moving Platforms",
    "rating": 2300,
    "tags": [
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "id": "1504/B",
    "contestId": 1504,
    "index": "B",
    "name": "Flip the Bits",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1418/B",
    "contestId": 1418,
    "index": "B",
    "name": "Negative Prefixes",
    "rating": 1300,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "522/D",
    "contestId": 522,
    "index": "D",
    "name": "Closest Equals",
    "rating": 2000,
    "tags": [
      "*special",
      "data structures"
    ]
  },
  {
    "id": "741/A",
    "contestId": 741,
    "index": "A",
    "name": "Arpa's loud Owf and Mehrdad's evil plan",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "math"
    ]
  },
  {
    "id": "508/C",
    "contestId": 508,
    "index": "C",
    "name": "Anya and Ghosts",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1452/A",
    "contestId": 1452,
    "index": "A",
    "name": "Robot Program",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1823/C",
    "contestId": 1823,
    "index": "C",
    "name": "Strongly Composite",
    "rating": 1300,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1575/L",
    "contestId": 1575,
    "index": "L",
    "name": "Longest Array Deconstruction",
    "rating": 2100,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "sortings"
    ]
  },
  {
    "id": "1753/C",
    "contestId": 1753,
    "index": "C",
    "name": "Wish I Knew How to Sort",
    "rating": 2000,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1615/B",
    "contestId": 1615,
    "index": "B",
    "name": "And It's Non-Zero",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "id": "160/C",
    "contestId": 160,
    "index": "C",
    "name": "Find Pair",
    "rating": 1700,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1792/D",
    "contestId": 1792,
    "index": "D",
    "name": "Fixed Prefix Permutations",
    "rating": 1700,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "hashing",
      "math",
      "sortings"
    ]
  },
  {
    "id": "978/C",
    "contestId": 978,
    "index": "C",
    "name": "Letters",
    "rating": 1000,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1296/F",
    "contestId": 1296,
    "index": "F",
    "name": "Berland Beauty",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1101/D",
    "contestId": 1101,
    "index": "D",
    "name": "GCD Counting",
    "rating": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "1028/C",
    "contestId": 1028,
    "index": "C",
    "name": "Rectangles",
    "rating": 1600,
    "tags": [
      "geometry",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1131/D",
    "contestId": 1131,
    "index": "D",
    "name": "Gourmet choice",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1931/B",
    "contestId": 1931,
    "index": "B",
    "name": "Make Equal",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1638/F",
    "contestId": 1638,
    "index": "F",
    "name": "Two Posters",
    "rating": 3200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "45/J",
    "contestId": 45,
    "index": "J",
    "name": "Planting Trees",
    "rating": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "664/A",
    "contestId": 664,
    "index": "A",
    "name": "Complicated GCD",
    "rating": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1227/F1",
    "contestId": 1227,
    "index": "F1",
    "name": "Wrong Answer on test 233 (Easy Version)",
    "rating": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1176/F",
    "contestId": 1176,
    "index": "F",
    "name": "Destroy it!",
    "rating": 2100,
    "tags": [
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1942/C1",
    "contestId": 1942,
    "index": "C1",
    "name": "Bessie's Birthday Cake (Easy Version)",
    "rating": 1300,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "id": "993/A",
    "contestId": 993,
    "index": "A",
    "name": "Two Squares",
    "rating": 1600,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "1042/A",
    "contestId": 1042,
    "index": "A",
    "name": "Benches",
    "rating": 1100,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "id": "992/D",
    "contestId": 992,
    "index": "D",
    "name": "Nastya and a Game",
    "rating": 2100,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "131/F",
    "contestId": 131,
    "index": "F",
    "name": "Present to Mom",
    "rating": 2000,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "id": "1506/B",
    "contestId": 1506,
    "index": "B",
    "name": "Partial Replacement",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1413/C",
    "contestId": 1413,
    "index": "C",
    "name": "Perform Easily",
    "rating": 1900,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1107/C",
    "contestId": 1107,
    "index": "C",
    "name": "Brutality",
    "rating": 1300,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1697/F",
    "contestId": 1697,
    "index": "F",
    "name": "Too Many Constraints",
    "rating": 2800,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "54/A",
    "contestId": 54,
    "index": "A",
    "name": "Presents",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "549/D",
    "contestId": 549,
    "index": "D",
    "name": "Haar Features",
    "rating": 1900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1472/A",
    "contestId": 1472,
    "index": "A",
    "name": "Cards for Friends",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "317/E",
    "contestId": 317,
    "index": "E",
    "name": "Princess and Her Shadow",
    "rating": 3100,
    "tags": [
      "constructive algorithms",
      "shortest paths"
    ]
  },
  {
    "id": "961/G",
    "contestId": 961,
    "index": "G",
    "name": "Partitions",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "656/C",
    "contestId": 656,
    "index": "C",
    "name": "Without Text",
    "rating": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "223/B",
    "contestId": 223,
    "index": "B",
    "name": "Two Strings",
    "rating": 1900,
    "tags": [
      "data structures",
      "dp",
      "strings"
    ]
  },
  {
    "id": "1951/I",
    "contestId": 1951,
    "index": "I",
    "name": "Growing Trees",
    "rating": 3200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1730/F",
    "contestId": 1730,
    "index": "F",
    "name": "Almost Sorted",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "690/B3",
    "contestId": 690,
    "index": "B3",
    "name": "Recover Polygon (hard)",
    "rating": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1530/E",
    "contestId": 1530,
    "index": "E",
    "name": "Minimax",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1728/E",
    "contestId": 1728,
    "index": "E",
    "name": "Red-Black Pepper",
    "rating": 2300,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "514/B",
    "contestId": 514,
    "index": "B",
    "name": "Han Solo and Lazer Gun",
    "rating": 1400,
    "tags": [
      "brute force",
      "data structures",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1729/A",
    "contestId": 1729,
    "index": "A",
    "name": "Two Elevators",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "569/B",
    "contestId": 569,
    "index": "B",
    "name": "Inventory",
    "rating": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1469/B",
    "contestId": 1469,
    "index": "B",
    "name": "Red and Blue",
    "rating": 1000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1817/F",
    "contestId": 1817,
    "index": "F",
    "name": "Entangled Substrings",
    "rating": 3500,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1929/B",
    "contestId": 1929,
    "index": "B",
    "name": "Sasha and the Drawing",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "336/C",
    "contestId": 336,
    "index": "C",
    "name": "Vasily the Bear and Sequence",
    "rating": 1800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "1000/B",
    "contestId": 1000,
    "index": "B",
    "name": "Light It Up",
    "rating": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1196/A",
    "contestId": 1196,
    "index": "A",
    "name": "Three Piles of Candies",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "852/H",
    "contestId": 852,
    "index": "H",
    "name": "Bob and stages",
    "rating": 3000,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "id": "286/E",
    "contestId": 286,
    "index": "E",
    "name": "Ladies' Shop",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "fft",
      "math"
    ]
  },
  {
    "id": "1874/F",
    "contestId": 1874,
    "index": "F",
    "name": "Jellyfish and OEIS",
    "rating": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "609/B",
    "contestId": 609,
    "index": "B",
    "name": "The Best Gift",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "572/B",
    "contestId": 572,
    "index": "B",
    "name": "Order Book",
    "rating": 1300,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "474/E",
    "contestId": 474,
    "index": "E",
    "name": "Pillars",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1936/F",
    "contestId": 1936,
    "index": "F",
    "name": "Grand Finale: Circles",
    "rating": 3300,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "id": "1672/C",
    "contestId": 1672,
    "index": "C",
    "name": "Unequal Array",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1916/B",
    "contestId": 1916,
    "index": "B",
    "name": "Two Divisors",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "340/C",
    "contestId": 340,
    "index": "C",
    "name": "Tourist Problem",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1765/K",
    "contestId": 1765,
    "index": "K",
    "name": "Torus Path",
    "rating": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1708/B",
    "contestId": 1708,
    "index": "B",
    "name": "Difference of GCDs",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1902/C",
    "contestId": 1902,
    "index": "C",
    "name": "Insert and Equalize",
    "rating": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1741/E",
    "contestId": 1741,
    "index": "E",
    "name": "Sending a Sequence Over the Network",
    "rating": 1600,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1260/E",
    "contestId": 1260,
    "index": "E",
    "name": "Tournament",
    "rating": 2400,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1956/F",
    "contestId": 1956,
    "index": "F",
    "name": "Nene and the Passing Game",
    "rating": 3000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "graphs",
      "sortings"
    ]
  },
  {
    "id": "1902/D",
    "contestId": 1902,
    "index": "D",
    "name": "Robot Queries",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "429/C",
    "contestId": 429,
    "index": "C",
    "name": "Guess the Tree",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1334/D",
    "contestId": 1334,
    "index": "D",
    "name": "Minimum Euler Cycle",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "560/A",
    "contestId": 560,
    "index": "A",
    "name": "Currency System in Geraldion",
    "rating": 1000,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "495/A",
    "contestId": 495,
    "index": "A",
    "name": "Digital Counter",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "628/C",
    "contestId": 628,
    "index": "C",
    "name": "Bear and String Distance",
    "rating": 1300,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "660/F",
    "contestId": 660,
    "index": "F",
    "name": "Bear and Bowling 4",
    "rating": 2500,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "geometry",
      "ternary search"
    ]
  },
  {
    "id": "821/B",
    "contestId": 821,
    "index": "B",
    "name": "Okabe and Banana Trees",
    "rating": 1300,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1033/C",
    "contestId": 1033,
    "index": "C",
    "name": "Permutation Game",
    "rating": 1600,
    "tags": [
      "brute force",
      "dp",
      "games"
    ]
  },
  {
    "id": "873/D",
    "contestId": 873,
    "index": "D",
    "name": "Merge Sort",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "id": "843/E",
    "contestId": 843,
    "index": "E",
    "name": "Maximum Flow",
    "rating": 3000,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "id": "1095/F",
    "contestId": 1095,
    "index": "F",
    "name": "Make It Connected",
    "rating": 1900,
    "tags": [
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "241/B",
    "contestId": 241,
    "index": "B",
    "name": "Friends",
    "rating": 2700,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "math"
    ]
  },
  {
    "id": "429/D",
    "contestId": 429,
    "index": "D",
    "name": "Tricky Function",
    "rating": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "geometry"
    ]
  },
  {
    "id": "723/E",
    "contestId": 723,
    "index": "E",
    "name": "One-Way Reform",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1527/C",
    "contestId": 1527,
    "index": "C",
    "name": "Sequence Pair Weight",
    "rating": 1600,
    "tags": [
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1425/I",
    "contestId": 1425,
    "index": "I",
    "name": "Impressive Harvesting of The Orchard",
    "rating": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1467/C",
    "contestId": 1467,
    "index": "C",
    "name": "Three Bags",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "940/D",
    "contestId": 940,
    "index": "D",
    "name": "Alena And The Heater",
    "rating": 1600,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "id": "702/F",
    "contestId": 702,
    "index": "F",
    "name": "T-Shirts",
    "rating": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "853/A",
    "contestId": 853,
    "index": "A",
    "name": "Planning",
    "rating": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1287/B",
    "contestId": 1287,
    "index": "B",
    "name": "Hyperset",
    "rating": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1690/D",
    "contestId": 1690,
    "index": "D",
    "name": "Black and White Stripe",
    "rating": 1000,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "630/N",
    "contestId": 630,
    "index": "N",
    "name": "Forecast",
    "rating": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "id": "297/E",
    "contestId": 297,
    "index": "E",
    "name": "Mystic Carvings",
    "rating": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1199/B",
    "contestId": 1199,
    "index": "B",
    "name": "Water Lily",
    "rating": 1000,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1859/B",
    "contestId": 1859,
    "index": "B",
    "name": "Olya and Game with Arrays",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1651/C",
    "contestId": 1651,
    "index": "C",
    "name": "Fault-tolerant Network",
    "rating": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1983/B",
    "contestId": 1983,
    "index": "B",
    "name": "Corner Twist",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1656/C",
    "contestId": 1656,
    "index": "C",
    "name": "Make Equal With Mod",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "611/F",
    "contestId": 611,
    "index": "F",
    "name": "New Year and Cleaning",
    "rating": 2500,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "id": "1172/D",
    "contestId": 1172,
    "index": "D",
    "name": "Nauuo and Portals",
    "rating": 2900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1866/A",
    "contestId": 1866,
    "index": "A",
    "name": "Ambitious Kid",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "891/D",
    "contestId": 891,
    "index": "D",
    "name": "Sloth",
    "rating": 3100,
    "tags": [
      "dfs and similar",
      "dp",
      "graph matchings",
      "trees"
    ]
  },
  {
    "id": "1707/C",
    "contestId": 1707,
    "index": "C",
    "name": "DFS Trees",
    "rating": 2400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1212/B",
    "contestId": 1212,
    "index": "B",
    "name": "Two-gram",
    "rating": 900,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "472/G",
    "contestId": 472,
    "index": "G",
    "name": "Design Tutorial: Increase the Constraints",
    "rating": 2800,
    "tags": [
      "bitmasks",
      "data structures",
      "fft"
    ]
  },
  {
    "id": "1598/D",
    "contestId": 1598,
    "index": "D",
    "name": "Training Session",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "data structures",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "600/E",
    "contestId": 600,
    "index": "E",
    "name": "Lomsat gelral",
    "rating": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "trees"
    ]
  },
  {
    "id": "1765/C",
    "contestId": 1765,
    "index": "C",
    "name": "Card Guessing",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "1147/B",
    "contestId": 1147,
    "index": "B",
    "name": "Chladni Figure",
    "rating": 1900,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "id": "1249/B1",
    "contestId": 1249,
    "index": "B1",
    "name": "Books Exchange (easy version)",
    "rating": 1000,
    "tags": [
      "dsu",
      "math"
    ]
  },
  {
    "id": "1721/B",
    "contestId": 1721,
    "index": "B",
    "name": "Deadly Laser",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1985/F",
    "contestId": 1985,
    "index": "F",
    "name": "Final Boss",
    "rating": 1500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1833/E",
    "contestId": 1833,
    "index": "E",
    "name": "Round Dance",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1919/F2",
    "contestId": 1919,
    "index": "F2",
    "name": "Wine Factory (Hard Version)",
    "rating": 2800,
    "tags": [
      "data structures",
      "dp",
      "flows",
      "greedy",
      "matrices"
    ]
  },
  {
    "id": "1294/D",
    "contestId": 1294,
    "index": "D",
    "name": "MEX maximizing",
    "rating": 1600,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1626/A",
    "contestId": 1626,
    "index": "A",
    "name": "Equidistant Letters",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "1028/F",
    "contestId": 1028,
    "index": "F",
    "name": "Make Symmetrical",
    "rating": 2900,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1346/E",
    "contestId": 1346,
    "index": "E",
    "name": "Magic Tricks",
    "rating": 1700,
    "tags": [
      "*special",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1692/D",
    "contestId": 1692,
    "index": "D",
    "name": "The Clock",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "311/C",
    "contestId": 311,
    "index": "C",
    "name": "Fetch the Treasure",
    "rating": 2500,
    "tags": [
      "brute force",
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1551/D1",
    "contestId": 1551,
    "index": "D1",
    "name": "Domino (easy version)",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1548/D1",
    "contestId": 1548,
    "index": "D1",
    "name": "Gregor and the Odd Cows (Easy)",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "geometry",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1425/H",
    "contestId": 1425,
    "index": "H",
    "name": "Huge Boxes of Animal Toys",
    "rating": 1300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1769/A",
    "contestId": 1769,
    "index": "A",
    "name": "Узкая дорога",
    "rating": 800,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "id": "1985/E",
    "contestId": 1985,
    "index": "E",
    "name": "Secret Box",
    "rating": 1200,
    "tags": [
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "253/C",
    "contestId": 253,
    "index": "C",
    "name": "Text Editor",
    "rating": 1600,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "1003/A",
    "contestId": 1003,
    "index": "A",
    "name": "Polycarp's Pockets",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "962/D",
    "contestId": 962,
    "index": "D",
    "name": "Merge Equals",
    "rating": 1600,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "65/A",
    "contestId": 65,
    "index": "A",
    "name": "Harry Potter and Three Spells",
    "rating": 1800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1191/A",
    "contestId": 1191,
    "index": "A",
    "name": "Tokitsukaze and Enhancement",
    "rating": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1264/D2",
    "contestId": 1264,
    "index": "D2",
    "name": "Beautiful Bracket Sequence (hard version)",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "probabilities"
    ]
  },
  {
    "id": "1473/E",
    "contestId": 1473,
    "index": "E",
    "name": "Minimum Path",
    "rating": 2400,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1970/B3",
    "contestId": 1970,
    "index": "B3",
    "name": "Exact Neighbours (Hard)",
    "rating": 2300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "839/D",
    "contestId": 839,
    "index": "D",
    "name": "Winter is here",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "33/B",
    "contestId": 33,
    "index": "B",
    "name": "String Problem",
    "rating": 1800,
    "tags": [
      "shortest paths"
    ]
  },
  {
    "id": "903/F",
    "contestId": 903,
    "index": "F",
    "name": "Clear The Matrix",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "592/E",
    "contestId": 592,
    "index": "E",
    "name": "BCPC",
    "rating": 2700,
    "tags": [
      "binary search",
      "geometry",
      "two pointers"
    ]
  },
  {
    "id": "1360/B",
    "contestId": 1360,
    "index": "B",
    "name": "Honest Coach",
    "rating": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1517/E",
    "contestId": 1517,
    "index": "E",
    "name": "Group Photo",
    "rating": 2500,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "776/A",
    "contestId": 776,
    "index": "A",
    "name": "A Serial Killer",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1603/E",
    "contestId": 1603,
    "index": "E",
    "name": "A Perfect Problem",
    "rating": 3200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "586/A",
    "contestId": 586,
    "index": "A",
    "name": "Alena's Schedule",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "671/D",
    "contestId": 671,
    "index": "D",
    "name": "Roads in Yusland",
    "rating": 2900,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1310/B",
    "contestId": 1310,
    "index": "B",
    "name": "Double Elimination",
    "rating": 2500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1889/A",
    "contestId": 1889,
    "index": "A",
    "name": "Qingshan Loves Strings 2",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "497/D",
    "contestId": 497,
    "index": "D",
    "name": "Шестерни",
    "rating": 2900,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "id": "580/A",
    "contestId": 580,
    "index": "A",
    "name": "Kefa and First Steps",
    "rating": 900,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "353/B",
    "contestId": 353,
    "index": "B",
    "name": "Two Heaps",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1949/H",
    "contestId": 1949,
    "index": "H",
    "name": "Division Avoidance",
    "rating": 3100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1016/A",
    "contestId": 1016,
    "index": "A",
    "name": "Death Note",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "939/E",
    "contestId": 939,
    "index": "E",
    "name": "Maximize!",
    "rating": 1800,
    "tags": [
      "binary search",
      "greedy",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "id": "87/D",
    "contestId": 87,
    "index": "D",
    "name": "Beautiful Road",
    "rating": 2300,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "575/I",
    "contestId": 575,
    "index": "I",
    "name": "Robots protection",
    "rating": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "932/B",
    "contestId": 932,
    "index": "B",
    "name": "Recursive Queries",
    "rating": 1300,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar"
    ]
  },
  {
    "id": "114/B",
    "contestId": 114,
    "index": "B",
    "name": "PFAST Inc.",
    "rating": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "graphs"
    ]
  },
  {
    "id": "522/A",
    "contestId": 522,
    "index": "A",
    "name": "Reposts",
    "rating": 1200,
    "tags": [
      "*special",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1975/G",
    "contestId": 1975,
    "index": "G",
    "name": "Zimpha Fan Club",
    "rating": 3000,
    "tags": [
      "fft",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "140/A",
    "contestId": 140,
    "index": "A",
    "name": "New Year Table",
    "rating": 1700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1237/D",
    "contestId": 1237,
    "index": "D",
    "name": "Balanced Playlist",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1701/F",
    "contestId": 1701,
    "index": "F",
    "name": "Points",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation",
      "math",
      "matrices"
    ]
  },
  {
    "id": "15/B",
    "contestId": 15,
    "index": "B",
    "name": "Laser",
    "rating": 1800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1876/B",
    "contestId": 1876,
    "index": "B",
    "name": "Effects of Anti Pimples",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "449/E",
    "contestId": 449,
    "index": "E",
    "name": "Jzzhu and Squares",
    "rating": 2900,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1176/E",
    "contestId": 1176,
    "index": "E",
    "name": "Cover it!",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "1921/G",
    "contestId": 1921,
    "index": "G",
    "name": "Mischievous Shooter",
    "rating": 2200,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1949/A",
    "contestId": 1949,
    "index": "A",
    "name": "Grove",
    "rating": 3300,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "geometry",
      "probabilities"
    ]
  },
  {
    "id": "436/A",
    "contestId": 436,
    "index": "A",
    "name": "Feed with Candy",
    "rating": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "730/L",
    "contestId": 730,
    "index": "L",
    "name": "Expression Queries",
    "rating": 3200,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1259/A",
    "contestId": 1259,
    "index": "A",
    "name": "Happy Birthday, Polycarp!",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "747/E",
    "contestId": 747,
    "index": "E",
    "name": "Comments",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "expression parsing",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1393/E2",
    "contestId": 1393,
    "index": "E2",
    "name": "Twilight and Ancient Scroll (harder version)",
    "rating": 3200,
    "tags": [
      "dp",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1716/B",
    "contestId": 1716,
    "index": "B",
    "name": "Permutation Chain",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "271/C",
    "contestId": 271,
    "index": "C",
    "name": "Secret",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1038/C",
    "contestId": 1038,
    "index": "C",
    "name": "Gambling",
    "rating": 1300,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1468/H",
    "contestId": 1468,
    "index": "H",
    "name": "K and Medians",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "767/E",
    "contestId": 767,
    "index": "E",
    "name": "Change-free",
    "rating": 2400,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "786/A",
    "contestId": 786,
    "index": "A",
    "name": "Berzerk",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "games"
    ]
  },
  {
    "id": "1332/C",
    "contestId": 1332,
    "index": "C",
    "name": "K-Complete Word",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "105/E",
    "contestId": 105,
    "index": "E",
    "name": "Lift and Throw",
    "rating": 2500,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1452/C",
    "contestId": 1452,
    "index": "C",
    "name": "Two Brackets",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "48/A",
    "contestId": 48,
    "index": "A",
    "name": "Rock-paper-scissors",
    "rating": 900,
    "tags": [
      "implementation",
      "schedules"
    ]
  },
  {
    "id": "1003/B",
    "contestId": 1003,
    "index": "B",
    "name": "Binary String Constructing",
    "rating": 1300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1165/D",
    "contestId": 1165,
    "index": "D",
    "name": "Almost All Divisors",
    "rating": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "510/A",
    "contestId": 510,
    "index": "A",
    "name": "Fox And Snake",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1769/C2",
    "contestId": 1769,
    "index": "C2",
    "name": "Подкрутка II",
    "rating": 1300,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "id": "225/E",
    "contestId": 225,
    "index": "E",
    "name": "Unsolvable",
    "rating": 2100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1506/A",
    "contestId": 1506,
    "index": "A",
    "name": "Strange Table",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "808/G",
    "contestId": 808,
    "index": "G",
    "name": "Anthem of Berland",
    "rating": 2300,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "1720/D1",
    "contestId": 1720,
    "index": "D1",
    "name": "Xor-Subsequence (easy version)",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "strings",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "152/B",
    "contestId": 152,
    "index": "B",
    "name": "Steps",
    "rating": 1300,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "id": "1148/A",
    "contestId": 1148,
    "index": "A",
    "name": "Another One Bites The Dust",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "994/A",
    "contestId": 994,
    "index": "A",
    "name": "Fingerprints",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1547/D",
    "contestId": 1547,
    "index": "D",
    "name": "Co-growing Sequence",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1077/E",
    "contestId": 1077,
    "index": "E",
    "name": "Thematic Contests",
    "rating": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1326/E",
    "contestId": 1326,
    "index": "E",
    "name": "Bombs",
    "rating": 2400,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "336/D",
    "contestId": 336,
    "index": "D",
    "name": "Vasily the Bear and Beautiful Strings",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1956/C",
    "contestId": 1956,
    "index": "C",
    "name": "Nene's Magical Matrix",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "187/D",
    "contestId": 187,
    "index": "D",
    "name": "BRT Contract",
    "rating": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1873/A",
    "contestId": 1873,
    "index": "A",
    "name": "Short Sort",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1696/A",
    "contestId": 1696,
    "index": "A",
    "name": "NIT orz!",
    "rating": 800,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "id": "1270/E",
    "contestId": 1270,
    "index": "E",
    "name": "Divide Points",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "geometry",
      "math"
    ]
  },
  {
    "id": "1416/C",
    "contestId": 1416,
    "index": "C",
    "name": "XOR Inverse",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "math",
      "sortings",
      "strings",
      "trees"
    ]
  },
  {
    "id": "690/D3",
    "contestId": 690,
    "index": "D3",
    "name": "The Wall (hard)",
    "rating": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1688/C",
    "contestId": 1688,
    "index": "C",
    "name": "Manipulating History",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1941/D",
    "contestId": 1941,
    "index": "D",
    "name": "Rudolf and the Ball Game",
    "rating": 1200,
    "tags": [
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "768/B",
    "contestId": 768,
    "index": "B",
    "name": "Code For 1",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "divide and conquer"
    ]
  },
  {
    "id": "1615/A",
    "contestId": 1615,
    "index": "A",
    "name": "Closing The Gap",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1196/F",
    "contestId": 1196,
    "index": "F",
    "name": "K-th Path",
    "rating": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "1334/A",
    "contestId": 1334,
    "index": "A",
    "name": "Level Statistics",
    "rating": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1638/B",
    "contestId": 1638,
    "index": "B",
    "name": "Odd Swap Sort",
    "rating": 1100,
    "tags": [
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1512/A",
    "contestId": 1512,
    "index": "A",
    "name": "Spy Detected!",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1857/F",
    "contestId": 1857,
    "index": "F",
    "name": "Sum and Product",
    "rating": 1600,
    "tags": [
      "binary search",
      "data structures",
      "math"
    ]
  },
  {
    "id": "1196/D2",
    "contestId": 1196,
    "index": "D2",
    "name": "RGB Substring (hard version)",
    "rating": 1600,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1814/B",
    "contestId": 1814,
    "index": "B",
    "name": "Long Legs",
    "rating": 1700,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "750/C",
    "contestId": 750,
    "index": "C",
    "name": "New Year and Rating",
    "rating": 1600,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1203/A",
    "contestId": 1203,
    "index": "A",
    "name": "Circle of Students",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1406/D",
    "contestId": 1406,
    "index": "D",
    "name": "Three Sequences",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "6/A",
    "contestId": 6,
    "index": "A",
    "name": "Triangle",
    "rating": 900,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "id": "611/B",
    "contestId": 611,
    "index": "B",
    "name": "New Year and Old Property",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "285/E",
    "contestId": 285,
    "index": "E",
    "name": "Positions in Permutations",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1499/C",
    "contestId": 1499,
    "index": "C",
    "name": "Minimum Grid Path",
    "rating": 1500,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1968/G2",
    "contestId": 1968,
    "index": "G2",
    "name": "Division + LCP (hard version)",
    "rating": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "hashing",
      "math",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "459/A",
    "contestId": 459,
    "index": "A",
    "name": "Pashmak and Garden",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1608/F",
    "contestId": 1608,
    "index": "F",
    "name": "MEX counting",
    "rating": 3200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "190/D",
    "contestId": 190,
    "index": "D",
    "name": "Non-Secret Cypher",
    "rating": 1900,
    "tags": [
      "two pointers"
    ]
  },
  {
    "id": "637/B",
    "contestId": 637,
    "index": "B",
    "name": "Chat Order",
    "rating": 1200,
    "tags": [
      "*special",
      "binary search",
      "constructive algorithms",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1211/A",
    "contestId": 1211,
    "index": "A",
    "name": "Three Problems",
    "rating": 1000,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1932/A",
    "contestId": 1932,
    "index": "A",
    "name": "Thorns and Coins",
    "rating": 800,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "757/B",
    "contestId": 757,
    "index": "B",
    "name": "Bash's Big Day",
    "rating": 1400,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "914/C",
    "contestId": 914,
    "index": "C",
    "name": "Travelling Salesman and Special Numbers",
    "rating": 1800,
    "tags": [
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1863/I",
    "contestId": 1863,
    "index": "I",
    "name": "Redundant Routes",
    "rating": 3500,
    "tags": [
      "constructive algorithms",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1354/A",
    "contestId": 1354,
    "index": "A",
    "name": "Alarm Clock",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1949/D",
    "contestId": 1949,
    "index": "D",
    "name": "Funny or Scary?",
    "rating": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1462/D",
    "contestId": 1462,
    "index": "D",
    "name": "Add to Neighbour and Remove",
    "rating": 1400,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1932/E",
    "contestId": 1932,
    "index": "E",
    "name": "Final Countdown",
    "rating": 1600,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1142/A",
    "contestId": 1142,
    "index": "A",
    "name": "The Beatles",
    "rating": 1700,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "592/B",
    "contestId": 592,
    "index": "B",
    "name": "The Monster and the Squirrel",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1622/F",
    "contestId": 1622,
    "index": "F",
    "name": "Quadratic Set",
    "rating": 2900,
    "tags": [
      "constructive algorithms",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1364/C",
    "contestId": 1364,
    "index": "C",
    "name": "Ehab and Prefix MEXs",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1437/E",
    "contestId": 1437,
    "index": "E",
    "name": "Make It Increasing",
    "rating": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1673/C",
    "contestId": 1673,
    "index": "C",
    "name": "Palindrome Basis",
    "rating": 1500,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1571/G",
    "contestId": 1571,
    "index": "G",
    "name": "A Battle Against a Dragon",
    "rating": 2500,
    "tags": [
      "*special",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "214/A",
    "contestId": 214,
    "index": "A",
    "name": "System of Equations",
    "rating": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1605/F",
    "contestId": 1605,
    "index": "F",
    "name": "PalindORme",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "929/C",
    "contestId": 929,
    "index": "C",
    "name": "Красивая команда",
    "rating": 1700,
    "tags": [
      "*special",
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1438/E",
    "contestId": 1438,
    "index": "E",
    "name": "Yurii Can Do Everything",
    "rating": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "divide and conquer",
      "two pointers"
    ]
  },
  {
    "id": "332/A",
    "contestId": 332,
    "index": "A",
    "name": "Down the Hatch!",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "914/H",
    "contestId": 914,
    "index": "H",
    "name": "Ember and Storm's Tree Game",
    "rating": 3400,
    "tags": [
      "combinatorics",
      "dp",
      "games",
      "trees"
    ]
  },
  {
    "id": "1971/A",
    "contestId": 1971,
    "index": "A",
    "name": "My First Sorting Problem",
    "rating": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "937/C",
    "contestId": 937,
    "index": "C",
    "name": "Save Energy!",
    "rating": 1700,
    "tags": [
      "math"
    ]
  },
  {
    "id": "457/C",
    "contestId": 457,
    "index": "C",
    "name": "Elections",
    "rating": 2100,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1400/A",
    "contestId": 1400,
    "index": "A",
    "name": "String Similarity",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "1042/D",
    "contestId": 1042,
    "index": "D",
    "name": "Petya and Array",
    "rating": 1800,
    "tags": [
      "data structures",
      "divide and conquer",
      "two pointers"
    ]
  },
  {
    "id": "466/D",
    "contestId": 466,
    "index": "D",
    "name": "Increase Sequence",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "710/E",
    "contestId": 710,
    "index": "E",
    "name": "Generate a String",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "dp"
    ]
  },
  {
    "id": "606/A",
    "contestId": 606,
    "index": "A",
    "name": "Magic Spheres",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1270/G",
    "contestId": 1270,
    "index": "G",
    "name": "Subset with Zero Sum",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1877/A",
    "contestId": 1877,
    "index": "A",
    "name": "Goals of Victory",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "683/H",
    "contestId": 683,
    "index": "H",
    "name": "Exchange of Books",
    "rating": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "173/E",
    "contestId": 173,
    "index": "E",
    "name": "Camping Groups",
    "rating": 2600,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1149/C",
    "contestId": 1149,
    "index": "C",
    "name": "Tree Generator™",
    "rating": 2700,
    "tags": [
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1494/B",
    "contestId": 1494,
    "index": "B",
    "name": "Berland Crossword",
    "rating": 1400,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1916/H1",
    "contestId": 1916,
    "index": "H1",
    "name": "Matrix Rank (Easy Version)",
    "rating": 2700,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "id": "946/B",
    "contestId": 946,
    "index": "B",
    "name": "Weird Subtraction Process",
    "rating": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "350/B",
    "contestId": 350,
    "index": "B",
    "name": "Resort",
    "rating": 1500,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "1221/D",
    "contestId": 1221,
    "index": "D",
    "name": "Make The Fence Great Again",
    "rating": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1455/A",
    "contestId": 1455,
    "index": "A",
    "name": "Strange Functions",
    "rating": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1867/D",
    "contestId": 1867,
    "index": "D",
    "name": "Cyclic Operations",
    "rating": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "898/D",
    "contestId": 898,
    "index": "D",
    "name": "Alarm Clock",
    "rating": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "208/B",
    "contestId": 208,
    "index": "B",
    "name": "Solitaire",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp"
    ]
  },
  {
    "id": "150/D",
    "contestId": 150,
    "index": "D",
    "name": "Mission Impassable",
    "rating": 2600,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "1497/E2",
    "contestId": 1497,
    "index": "E2",
    "name": "Square-Free Division (hard version)",
    "rating": 2500,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1293/A",
    "contestId": 1293,
    "index": "A",
    "name": "ConneR and the A.R.C. Markland-N",
    "rating": 1100,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1257/G",
    "contestId": 1257,
    "index": "G",
    "name": "Divisor Set",
    "rating": 2600,
    "tags": [
      "divide and conquer",
      "fft",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "798/C",
    "contestId": 798,
    "index": "C",
    "name": "Mike and gcd problem",
    "rating": 1700,
    "tags": [
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "596/A",
    "contestId": 596,
    "index": "A",
    "name": "Wilbur and Swimming Pool",
    "rating": 1100,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "468/E",
    "contestId": 468,
    "index": "E",
    "name": "Permanent",
    "rating": 3100,
    "tags": [
      "dp",
      "graph matchings",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1492/D",
    "contestId": 1492,
    "index": "D",
    "name": "Genius's Gambit",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "50/E",
    "contestId": 50,
    "index": "E",
    "name": "Square Equation Roots",
    "rating": 2300,
    "tags": [
      "math"
    ]
  },
  {
    "id": "537/A",
    "contestId": 537,
    "index": "A",
    "name": "Cutting Banner",
    "rating": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1915/D",
    "contestId": 1915,
    "index": "D",
    "name": "Unnatural Language Processing",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1718/A1",
    "contestId": 1718,
    "index": "A1",
    "name": "Burenka and Traditions (easy version)",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "25/A",
    "contestId": 25,
    "index": "A",
    "name": "IQ test",
    "rating": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1656/G",
    "contestId": 1656,
    "index": "G",
    "name": "Cycle Palindrome",
    "rating": 3200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1878/C",
    "contestId": 1878,
    "index": "C",
    "name": "Vasilije in Cacak",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "609/D",
    "contestId": 609,
    "index": "D",
    "name": "Gadgets for dollars and pounds",
    "rating": 2000,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "487/A",
    "contestId": 487,
    "index": "A",
    "name": "Fight the Monster",
    "rating": 1800,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "575/E",
    "contestId": 575,
    "index": "E",
    "name": "Spectator Riots",
    "rating": 2800,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1659/E",
    "contestId": 1659,
    "index": "E",
    "name": "AND-MEX Walk",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1200/C",
    "contestId": 1200,
    "index": "C",
    "name": "Round Corridor",
    "rating": 1400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1654/H",
    "contestId": 1654,
    "index": "H",
    "name": "Three Minimums",
    "rating": 3500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "887/E",
    "contestId": 887,
    "index": "E",
    "name": "Little Brother",
    "rating": 2800,
    "tags": [
      "binary search",
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "633/B",
    "contestId": 633,
    "index": "B",
    "name": "A Trivial Problem",
    "rating": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1786/A1",
    "contestId": 1786,
    "index": "A1",
    "name": "Non-alternating Deck (easy version)",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1181/E1",
    "contestId": 1181,
    "index": "E1",
    "name": "A Story of One Country (Easy)",
    "rating": 2500,
    "tags": [
      "brute force",
      "divide and conquer",
      "sortings"
    ]
  },
  {
    "id": "665/F",
    "contestId": 665,
    "index": "F",
    "name": "Four Divisors",
    "rating": 2400,
    "tags": [
      "data structures",
      "dp",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1585/D",
    "contestId": 1585,
    "index": "D",
    "name": "Yet Another Sorting Problem",
    "rating": 1900,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "id": "1340/D",
    "contestId": 1340,
    "index": "D",
    "name": "Nastya and Time Machine",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "203/E",
    "contestId": 203,
    "index": "E",
    "name": "Transportation",
    "rating": 2300,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1844/E",
    "contestId": 1844,
    "index": "E",
    "name": "Great Grids",
    "rating": 2400,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1059/A",
    "contestId": 1059,
    "index": "A",
    "name": "Cashier",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1824/B2",
    "contestId": 1824,
    "index": "B2",
    "name": "LuoTianyi and the Floating Islands (Hard Version)",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "245/H",
    "contestId": 245,
    "index": "H",
    "name": "Queries for Number of Palindromes",
    "rating": 1800,
    "tags": [
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "13/A",
    "contestId": 13,
    "index": "A",
    "name": "Numbers",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1305/A",
    "contestId": 1305,
    "index": "A",
    "name": "Kuroni and the Gifts",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "899/D",
    "contestId": 899,
    "index": "D",
    "name": "Shovel Sale",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "997/B",
    "contestId": 997,
    "index": "B",
    "name": "Roman Digits",
    "rating": 2000,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "255/B",
    "contestId": 255,
    "index": "B",
    "name": "Code Parsing",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "370/A",
    "contestId": 370,
    "index": "A",
    "name": "Rook, Bishop and King",
    "rating": 1100,
    "tags": [
      "graphs",
      "math",
      "shortest paths"
    ]
  },
  {
    "id": "1405/B",
    "contestId": 1405,
    "index": "B",
    "name": "Array Cancellation",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1066/D",
    "contestId": 1066,
    "index": "D",
    "name": "Boxes Packing",
    "rating": 1800,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "id": "1183/F",
    "contestId": 1183,
    "index": "F",
    "name": "Topforces Strikes Back",
    "rating": 2100,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1254/B1",
    "contestId": 1254,
    "index": "B1",
    "name": "Send Boxes to Alice (Easy Version)",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "id": "1750/D",
    "contestId": 1750,
    "index": "D",
    "name": "Count GCD",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "633/A",
    "contestId": 633,
    "index": "A",
    "name": "Ebony and Ivory",
    "rating": 1100,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "300/A",
    "contestId": 300,
    "index": "A",
    "name": "Array",
    "rating": 1100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "700/B",
    "contestId": 700,
    "index": "B",
    "name": "Connecting Universities",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1844/D",
    "contestId": 1844,
    "index": "D",
    "name": "Row Major",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "id": "976/C",
    "contestId": 976,
    "index": "C",
    "name": "Nested Segments",
    "rating": 1500,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1738/A",
    "contestId": 1738,
    "index": "A",
    "name": "Glory Addicts",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1992/C",
    "contestId": 1992,
    "index": "C",
    "name": "Gorilla and Permutation",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1398/D",
    "contestId": 1398,
    "index": "D",
    "name": "Colored Rectangles",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1968/E",
    "contestId": 1968,
    "index": "E",
    "name": "Cells Arrangement",
    "rating": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1423/J",
    "contestId": 1423,
    "index": "J",
    "name": "Bubble Cup hypothesis",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "id": "987/B",
    "contestId": 987,
    "index": "B",
    "name": "High School: Become Human",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "545/D",
    "contestId": 545,
    "index": "D",
    "name": "Queue",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1270/F",
    "contestId": 1270,
    "index": "F",
    "name": "Awesome Substrings",
    "rating": 2600,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "id": "1936/D",
    "contestId": 1936,
    "index": "D",
    "name": "Bitwise Paradox",
    "rating": 3100,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "935/E",
    "contestId": 935,
    "index": "E",
    "name": "Fafa and Ancient Mathematics",
    "rating": 2300,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "913/B",
    "contestId": 913,
    "index": "B",
    "name": "Christmas Spruce",
    "rating": 1200,
    "tags": [
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1506/C",
    "contestId": 1506,
    "index": "C",
    "name": "Double-ended Strings",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1598/A",
    "contestId": 1598,
    "index": "A",
    "name": "Computer Game",
    "rating": 800,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "101/A",
    "contestId": 101,
    "index": "A",
    "name": "Homework",
    "rating": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "850/F",
    "contestId": 850,
    "index": "F",
    "name": "Rainbow Balls",
    "rating": 2800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1954/F",
    "contestId": 1954,
    "index": "F",
    "name": "Unique Strings",
    "rating": 3100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "789/B",
    "contestId": 789,
    "index": "B",
    "name": "Masha and geometric depression",
    "rating": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1055/D",
    "contestId": 1055,
    "index": "D",
    "name": "Refactoring",
    "rating": 2400,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "47/C",
    "contestId": 47,
    "index": "C",
    "name": "Crossword",
    "rating": 2000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1109/D",
    "contestId": 1109,
    "index": "D",
    "name": "Sasha and Interesting Fact from Graph Theory",
    "rating": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "1216/E1",
    "contestId": 1216,
    "index": "E1",
    "name": "Numerical Sequence (easy version)",
    "rating": 1900,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "id": "1863/G",
    "contestId": 1863,
    "index": "G",
    "name": "Swaps",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "id": "402/D",
    "contestId": 402,
    "index": "D",
    "name": "Upgrading Array",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1670/F",
    "contestId": 1670,
    "index": "F",
    "name": "Jee, You See?",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "169/A",
    "contestId": 169,
    "index": "A",
    "name": "Chores",
    "rating": 800,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "734/F",
    "contestId": 734,
    "index": "F",
    "name": "Anton and School",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "570/B",
    "contestId": 570,
    "index": "B",
    "name": "Simple Game",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "616/A",
    "contestId": 616,
    "index": "A",
    "name": "Comparing Two Long Integers",
    "rating": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "662/C",
    "contestId": 662,
    "index": "C",
    "name": "Binary Table",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "1295/A",
    "contestId": 1295,
    "index": "A",
    "name": "Display The Number",
    "rating": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1144/F",
    "contestId": 1144,
    "index": "F",
    "name": "Graph Without Long Directed Paths",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "356/E",
    "contestId": 356,
    "index": "E",
    "name": "Xenia and String Problem",
    "rating": 3000,
    "tags": [
      "dp",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1092/E",
    "contestId": 1092,
    "index": "E",
    "name": "Minimal Diameter Forest",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1015/E1",
    "contestId": 1015,
    "index": "E1",
    "name": "Stars Drawing (Easy Edition)",
    "rating": 1700,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1284/A",
    "contestId": 1284,
    "index": "A",
    "name": "New Year and Naming",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "550/B",
    "contestId": 550,
    "index": "B",
    "name": "Preparing Olympiad",
    "rating": 1400,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "id": "822/D",
    "contestId": 822,
    "index": "D",
    "name": "My pretty girl Noora",
    "rating": 1800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1147/C",
    "contestId": 1147,
    "index": "C",
    "name": "Thanos Nim",
    "rating": 2000,
    "tags": [
      "games"
    ]
  },
  {
    "id": "1225/G",
    "contestId": 1225,
    "index": "G",
    "name": "To Make 1",
    "rating": 3100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1847/F",
    "contestId": 1847,
    "index": "F",
    "name": "The Boss's Identity",
    "rating": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "dfs and similar",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "662/B",
    "contestId": 662,
    "index": "B",
    "name": "Graph Coloring",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "796/B",
    "contestId": 796,
    "index": "B",
    "name": "Find The Bone",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "83/D",
    "contestId": 83,
    "index": "D",
    "name": "Numbers",
    "rating": 2400,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "555/B",
    "contestId": 555,
    "index": "B",
    "name": "Case of Fugitive",
    "rating": 2000,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "95/C",
    "contestId": 95,
    "index": "C",
    "name": "Volleyball",
    "rating": 1900,
    "tags": [
      "shortest paths"
    ]
  },
  {
    "id": "576/E",
    "contestId": 576,
    "index": "E",
    "name": "Painting Edges",
    "rating": 3300,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "711/E",
    "contestId": 711,
    "index": "E",
    "name": "ZS and The Birthday Paradox",
    "rating": 2300,
    "tags": [
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "id": "1523/H",
    "contestId": 1523,
    "index": "H",
    "name": "Hopping Around the Array",
    "rating": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1409/C",
    "contestId": 1409,
    "index": "C",
    "name": "Yet Another Array Restoration",
    "rating": 1200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "769/C",
    "contestId": 769,
    "index": "C",
    "name": "Cycle In Maze",
    "rating": 1700,
    "tags": [
      "*special",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "1436/B",
    "contestId": 1436,
    "index": "B",
    "name": "Prime Square",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1243/B2",
    "contestId": 1243,
    "index": "B2",
    "name": "Character Swap (Hard Version)",
    "rating": 1600,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "1995/D",
    "contestId": 1995,
    "index": "D",
    "name": "Cases",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "id": "519/E",
    "contestId": 519,
    "index": "E",
    "name": "A and B and Lecture Rooms",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1054/A",
    "contestId": 1054,
    "index": "A",
    "name": "Elevator or Stairs?",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "675/D",
    "contestId": 675,
    "index": "D",
    "name": "Tree Construction",
    "rating": 1800,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "322/B",
    "contestId": 322,
    "index": "B",
    "name": "Ciel and Flowers",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1144/A",
    "contestId": 1144,
    "index": "A",
    "name": "Diverse Strings",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1346/B",
    "contestId": 1346,
    "index": "B",
    "name": "Boot Camp",
    "rating": 1400,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "id": "991/E",
    "contestId": 991,
    "index": "E",
    "name": "Bus Number",
    "rating": 1800,
    "tags": [
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1545/B",
    "contestId": 1545,
    "index": "B",
    "name": "AquaMoon and Chess",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1446/B",
    "contestId": 1446,
    "index": "B",
    "name": "Catching Cheaters",
    "rating": 1800,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "683/J",
    "contestId": 683,
    "index": "J",
    "name": "The Hero with Bombs",
    "rating": 3000,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "909/E",
    "contestId": 909,
    "index": "E",
    "name": "Coprocessor",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "546/D",
    "contestId": 546,
    "index": "D",
    "name": "Soldier and Number Game",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1433/C",
    "contestId": 1433,
    "index": "C",
    "name": "Dominant Piranha",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1335/B",
    "contestId": 1335,
    "index": "B",
    "name": "Construct the String",
    "rating": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1575/H",
    "contestId": 1575,
    "index": "H",
    "name": "Holiday Wall Ornaments",
    "rating": 2200,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "317/D",
    "contestId": 317,
    "index": "D",
    "name": "Game with Powers",
    "rating": 2300,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "id": "1373/F",
    "contestId": 1373,
    "index": "F",
    "name": "Network Coverage",
    "rating": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1658/C",
    "contestId": 1658,
    "index": "C",
    "name": "Shinju and the Lost Permutation",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "908/B",
    "contestId": 908,
    "index": "B",
    "name": "New Year and Buggy Bot",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "172/D",
    "contestId": 172,
    "index": "D",
    "name": "Calendar Reform",
    "rating": 1500,
    "tags": [
      "*special",
      "number theory"
    ]
  },
  {
    "id": "1097/C",
    "contestId": 1097,
    "index": "C",
    "name": "Yuhao and a Parenthesis",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1373/D",
    "contestId": 1373,
    "index": "D",
    "name": "Maximum Sum on Even Positions",
    "rating": 1600,
    "tags": [
      "divide and conquer",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "474/A",
    "contestId": 474,
    "index": "A",
    "name": "Keyboard",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "281/A",
    "contestId": 281,
    "index": "A",
    "name": "Word Capitalization",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1631/A",
    "contestId": 1631,
    "index": "A",
    "name": "Min Max Swap",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "838/B",
    "contestId": 838,
    "index": "B",
    "name": "Diverging Directions",
    "rating": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "695/C",
    "contestId": 695,
    "index": "C",
    "name": "Limak and Shooting Points",
    "rating": 2600,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1340/C",
    "contestId": 1340,
    "index": "C",
    "name": "Nastya and Unexpected Guest",
    "rating": 2400,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "424/D",
    "contestId": 424,
    "index": "D",
    "name": "Biathlon Track",
    "rating": 2300,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1644/B",
    "contestId": 1644,
    "index": "B",
    "name": "Anti-Fibonacci Permutation",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "75/C",
    "contestId": 75,
    "index": "C",
    "name": "Modified GCD",
    "rating": 1600,
    "tags": [
      "binary search",
      "number theory"
    ]
  },
  {
    "id": "1914/F",
    "contestId": 1914,
    "index": "F",
    "name": "Programming Competition",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graph matchings",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1174/C",
    "contestId": 1174,
    "index": "C",
    "name": "Ehab and a Special Coloring Problem",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "id": "185/A",
    "contestId": 185,
    "index": "A",
    "name": "Plant",
    "rating": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1927/A",
    "contestId": 1927,
    "index": "A",
    "name": "Make it White",
    "rating": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "848/D",
    "contestId": 848,
    "index": "D",
    "name": "Shake It!",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "flows",
      "graphs"
    ]
  },
  {
    "id": "1775/A2",
    "contestId": 1775,
    "index": "A2",
    "name": "Gardener and the Capybaras (hard version)",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1343/A",
    "contestId": 1343,
    "index": "A",
    "name": "Candies",
    "rating": 900,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1271/B",
    "contestId": 1271,
    "index": "B",
    "name": "Blocks",
    "rating": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1462/E1",
    "contestId": 1462,
    "index": "E1",
    "name": "Close Tuples (easy version)",
    "rating": 1500,
    "tags": [
      "binary search",
      "combinatorics",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1242/B",
    "contestId": 1242,
    "index": "B",
    "name": "0-1 MST",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "sortings"
    ]
  },
  {
    "id": "167/C",
    "contestId": 167,
    "index": "C",
    "name": "Wizards and Numbers",
    "rating": 2300,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "1506/F",
    "contestId": 1506,
    "index": "F",
    "name": "Triangular Paths",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "848/A",
    "contestId": 848,
    "index": "A",
    "name": "From Y to Y",
    "rating": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1316/B",
    "contestId": 1316,
    "index": "B",
    "name": "String Modification",
    "rating": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1371/F",
    "contestId": 1371,
    "index": "F",
    "name": "Raging Thunder",
    "rating": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "id": "103/E",
    "contestId": 103,
    "index": "E",
    "name": "Buying Sets",
    "rating": 2900,
    "tags": [
      "flows",
      "graph matchings"
    ]
  },
  {
    "id": "1061/A",
    "contestId": 1061,
    "index": "A",
    "name": "Coins",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1890/B",
    "contestId": 1890,
    "index": "B",
    "name": "Qingshan Loves Strings",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "219/E",
    "contestId": 219,
    "index": "E",
    "name": "Parking Lot",
    "rating": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "494/E",
    "contestId": 494,
    "index": "E",
    "name": "Sharti",
    "rating": 3200,
    "tags": [
      "data structures",
      "games"
    ]
  },
  {
    "id": "1575/A",
    "contestId": 1575,
    "index": "A",
    "name": "Another Sorting Problem",
    "rating": 1100,
    "tags": [
      "data structures",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1744/A",
    "contestId": 1744,
    "index": "A",
    "name": "Number Replacement",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "955/D",
    "contestId": 955,
    "index": "D",
    "name": "Scissors",
    "rating": 2600,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "id": "903/D",
    "contestId": 903,
    "index": "D",
    "name": "Almost Difference",
    "rating": 2200,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "id": "1362/C",
    "contestId": 1362,
    "index": "C",
    "name": "Johnny and Another Rating Drop",
    "rating": 1400,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1706/D1",
    "contestId": 1706,
    "index": "D1",
    "name": "Chopping Carrots (Easy Version)",
    "rating": 1700,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "949/C",
    "contestId": 949,
    "index": "C",
    "name": "Data Center Maintenance",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "515/B",
    "contestId": 515,
    "index": "B",
    "name": "Drazil and His Happy Friends",
    "rating": 1300,
    "tags": [
      "brute force",
      "dsu",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "id": "1373/E",
    "contestId": 1373,
    "index": "E",
    "name": "Sum of Digits",
    "rating": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1218/E",
    "contestId": 1218,
    "index": "E",
    "name": "Product Tuples",
    "rating": 2500,
    "tags": [
      "divide and conquer",
      "fft"
    ]
  },
  {
    "id": "999/C",
    "contestId": 999,
    "index": "C",
    "name": "Alphabetic Removals",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "895/C",
    "contestId": 895,
    "index": "C",
    "name": "Square Subsets",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1827/B2",
    "contestId": 1827,
    "index": "B2",
    "name": "Range Sorting (Hard Version)",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "520/B",
    "contestId": 520,
    "index": "B",
    "name": "Two Buttons",
    "rating": 1400,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "shortest paths"
    ]
  },
  {
    "id": "1279/B",
    "contestId": 1279,
    "index": "B",
    "name": "Verse For Santa",
    "rating": 1300,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1934/B",
    "contestId": 1934,
    "index": "B",
    "name": "Yet Another Coin Problem",
    "rating": 1200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "71/E",
    "contestId": 71,
    "index": "E",
    "name": "Nuclear Fusion",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "508/B",
    "contestId": 508,
    "index": "B",
    "name": "Anton and currency you all know",
    "rating": 1300,
    "tags": [
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "991/A",
    "contestId": 991,
    "index": "A",
    "name": "If at first you don't succeed...",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "468/A",
    "contestId": 468,
    "index": "A",
    "name": "24 Game",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "492/A",
    "contestId": 492,
    "index": "A",
    "name": "Vanya and Cubes",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1859/D",
    "contestId": 1859,
    "index": "D",
    "name": "Andrey and Escape from Capygrad",
    "rating": 1800,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "251/A",
    "contestId": 251,
    "index": "A",
    "name": "Points on Line",
    "rating": 1300,
    "tags": [
      "binary search",
      "combinatorics",
      "two pointers"
    ]
  },
  {
    "id": "522/B",
    "contestId": 522,
    "index": "B",
    "name": "Photo to Remember",
    "rating": 1100,
    "tags": [
      "*special",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1695/C",
    "contestId": 1695,
    "index": "C",
    "name": "Zero Path",
    "rating": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "113/E",
    "contestId": 113,
    "index": "E",
    "name": "Sleeping",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "id": "524/D",
    "contestId": 524,
    "index": "D",
    "name": "Social Network",
    "rating": 2100,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1105/B",
    "contestId": 1105,
    "index": "B",
    "name": "Zuhair and Strings",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1242/A",
    "contestId": 1242,
    "index": "A",
    "name": "Tile Painting",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1579/B",
    "contestId": 1579,
    "index": "B",
    "name": "Shifting Sort",
    "rating": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "193/C",
    "contestId": 193,
    "index": "C",
    "name": "Hamming Distance",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "matrices"
    ]
  },
  {
    "id": "915/E",
    "contestId": 915,
    "index": "E",
    "name": "Physical Education Lessons",
    "rating": 2300,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1016/F",
    "contestId": 1016,
    "index": "F",
    "name": "Road Projects",
    "rating": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1665/A",
    "contestId": 1665,
    "index": "A",
    "name": "GCD vs LCM",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1622/C",
    "contestId": 1622,
    "index": "C",
    "name": "Set or Decrease",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "286/B",
    "contestId": 286,
    "index": "B",
    "name": "Shifting",
    "rating": 2200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "831/B",
    "contestId": 831,
    "index": "B",
    "name": "Keyboard Layouts",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1221/F",
    "contestId": 1221,
    "index": "F",
    "name": "Choose a Square",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1707/B",
    "contestId": 1707,
    "index": "B",
    "name": "Difference Array",
    "rating": 1900,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "925/B",
    "contestId": 925,
    "index": "B",
    "name": "Resource Distribution",
    "rating": 1700,
    "tags": [
      "binary search",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "261/E",
    "contestId": 261,
    "index": "E",
    "name": "Maxim and Calculator",
    "rating": 2800,
    "tags": [
      "brute force",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "199/B",
    "contestId": 199,
    "index": "B",
    "name": "Special Olympics",
    "rating": 1900,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "191/E",
    "contestId": 191,
    "index": "E",
    "name": "Thwarting Demonstrations",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1886/D",
    "contestId": 1886,
    "index": "D",
    "name": "Monocarp and the Set",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "data structures",
      "math"
    ]
  },
  {
    "id": "313/D",
    "contestId": 313,
    "index": "D",
    "name": "Ilya and Roads",
    "rating": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1340/A",
    "contestId": 1340,
    "index": "A",
    "name": "Nastya and Strange Generator",
    "rating": 1500,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1216/A",
    "contestId": 1216,
    "index": "A",
    "name": "Prefixes",
    "rating": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "1114/A",
    "contestId": 1114,
    "index": "A",
    "name": "Got Any Grapes?",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "219/D",
    "contestId": 219,
    "index": "D",
    "name": "Choosing Capital for Treeland",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "256/D",
    "contestId": 256,
    "index": "D",
    "name": "Liars and Serge",
    "rating": 2700,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1992/E",
    "contestId": 1992,
    "index": "E",
    "name": "Novice's Mistake",
    "rating": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "id": "585/B",
    "contestId": 585,
    "index": "B",
    "name": "Phillip and Trains",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "336/E",
    "contestId": 336,
    "index": "E",
    "name": "Vasily the Bear and Painting Square",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1841/B",
    "contestId": 1841,
    "index": "B",
    "name": "Keep it Beautiful",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1290/E",
    "contestId": 1290,
    "index": "E",
    "name": "Cartesian Tree",
    "rating": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1515/D",
    "contestId": 1515,
    "index": "D",
    "name": "Phoenix and Socks",
    "rating": 1500,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1774/F2",
    "contestId": 1774,
    "index": "F2",
    "name": "Magician and Pigs (Hard Version)",
    "rating": 2700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1626/F",
    "contestId": 1626,
    "index": "F",
    "name": "A Random Code Problem",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "id": "534/D",
    "contestId": 534,
    "index": "D",
    "name": "Handshakes",
    "rating": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1163/B2",
    "contestId": 1163,
    "index": "B2",
    "name": "Cat Party (Hard Edition)",
    "rating": 1600,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "253/D",
    "contestId": 253,
    "index": "D",
    "name": "Table with Letters - 2",
    "rating": 2000,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "id": "676/A",
    "contestId": 676,
    "index": "A",
    "name": "Nicholas and Permutation",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1624/B",
    "contestId": 1624,
    "index": "B",
    "name": "Make AP",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "675/C",
    "contestId": 675,
    "index": "C",
    "name": "Money Transfers",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1041/E",
    "contestId": 1041,
    "index": "E",
    "name": "Tree Reconstruction",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "733/E",
    "contestId": 733,
    "index": "E",
    "name": "Sleep in Class",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1151/B",
    "contestId": 1151,
    "index": "B",
    "name": "Dima and a Bad XOR",
    "rating": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "id": "1680/C",
    "contestId": 1680,
    "index": "C",
    "name": "Binary String",
    "rating": 1600,
    "tags": [
      "binary search",
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1932/B",
    "contestId": 1932,
    "index": "B",
    "name": "Chaya Calendar",
    "rating": 1100,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "1401/B",
    "contestId": 1401,
    "index": "B",
    "name": "Ternary Sequence",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "606/B",
    "contestId": 606,
    "index": "B",
    "name": "Testing Robots",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1063/E",
    "contestId": 1063,
    "index": "E",
    "name": "Lasers and Mirrors",
    "rating": 3000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "756/F",
    "contestId": 756,
    "index": "F",
    "name": "Long number",
    "rating": 3400,
    "tags": [
      "expression parsing",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1810/F",
    "contestId": 1810,
    "index": "F",
    "name": "M-tree",
    "rating": 2800,
    "tags": [
      "data structures",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "15/A",
    "contestId": 15,
    "index": "A",
    "name": "Cottage Village",
    "rating": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1823/F",
    "contestId": 1823,
    "index": "F",
    "name": "Random Walk",
    "rating": 2600,
    "tags": [
      "dp",
      "graphs",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "555/A",
    "contestId": 555,
    "index": "A",
    "name": "Case of Matryoshkas",
    "rating": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1644/E",
    "contestId": 1644,
    "index": "E",
    "name": "Expand the Path",
    "rating": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "id": "607/D",
    "contestId": 607,
    "index": "D",
    "name": "Power Tree",
    "rating": 2600,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "908/E",
    "contestId": 908,
    "index": "E",
    "name": "New Year and Entity Enumeration",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1000/D",
    "contestId": 1000,
    "index": "D",
    "name": "Yet Another Problem On a Subsequence",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1971/F",
    "contestId": 1971,
    "index": "F",
    "name": "Circle Perimeter",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1853/B",
    "contestId": 1853,
    "index": "B",
    "name": "Fibonaccharsis",
    "rating": 1200,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "id": "117/B",
    "contestId": 117,
    "index": "B",
    "name": "Very Interesting Game",
    "rating": 1800,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "id": "709/A",
    "contestId": 709,
    "index": "A",
    "name": "Juicer",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1063/A",
    "contestId": 1063,
    "index": "A",
    "name": "Oh Those Palindromes",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "348/E",
    "contestId": 348,
    "index": "E",
    "name": "Pilgrims",
    "rating": 2800,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "847/J",
    "contestId": 847,
    "index": "J",
    "name": "Students Initiation",
    "rating": 2400,
    "tags": [
      "binary search",
      "flows",
      "graphs"
    ]
  },
  {
    "id": "1042/E",
    "contestId": 1042,
    "index": "E",
    "name": "Vasya and Magic Matrix",
    "rating": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1774/F1",
    "contestId": 1774,
    "index": "F1",
    "name": "Magician and Pigs (Easy Version)",
    "rating": 2400,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1172/C1",
    "contestId": 1172,
    "index": "C1",
    "name": "Nauuo and Pictures (easy version)",
    "rating": 2300,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "1921/A",
    "contestId": 1921,
    "index": "A",
    "name": "Square",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1185/F",
    "contestId": 1185,
    "index": "F",
    "name": "Two Pizzas",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "id": "1820/B",
    "contestId": 1820,
    "index": "B",
    "name": "JoJo's Incredible Adventures",
    "rating": 1100,
    "tags": [
      "math",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1266/D",
    "contestId": 1266,
    "index": "D",
    "name": "Decreasing Debts",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1355/B",
    "contestId": 1355,
    "index": "B",
    "name": "Young Explorers",
    "rating": 1200,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1826/D",
    "contestId": 1826,
    "index": "D",
    "name": "Running Miles",
    "rating": 1700,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "620/C",
    "contestId": 620,
    "index": "C",
    "name": "Pearls in a Row",
    "rating": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1944/B",
    "contestId": 1944,
    "index": "B",
    "name": "Equal XOR",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "id": "441/B",
    "contestId": 441,
    "index": "B",
    "name": "Valera and Fruits",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "770/B",
    "contestId": 770,
    "index": "B",
    "name": "Maximize Sum of Digits",
    "rating": 1300,
    "tags": [
      "*special",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1592/F2",
    "contestId": 1592,
    "index": "F2",
    "name": "Alice and Recoloring 2",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "id": "1182/C",
    "contestId": 1182,
    "index": "C",
    "name": "Beautiful Lyrics",
    "rating": 1700,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "358/D",
    "contestId": 358,
    "index": "D",
    "name": "Dima and Hares",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1387/B2",
    "contestId": 1387,
    "index": "B2",
    "name": "Village (Maximum)",
    "rating": 2500,
    "tags": [
      "*special",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "152/D",
    "contestId": 152,
    "index": "D",
    "name": "Frames",
    "rating": 2600,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1714/B",
    "contestId": 1714,
    "index": "B",
    "name": "Remove Prefix",
    "rating": 800,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "157/B",
    "contestId": 157,
    "index": "B",
    "name": "Trace",
    "rating": 1000,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "1428/B",
    "contestId": 1428,
    "index": "B",
    "name": "Belted Rooms",
    "rating": 1200,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1534/A",
    "contestId": 1534,
    "index": "A",
    "name": "Colour the Flag",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1712/F",
    "contestId": 1712,
    "index": "F",
    "name": "Triameter",
    "rating": 3200,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "443/A",
    "contestId": 443,
    "index": "A",
    "name": "Anton and Letters",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1619/C",
    "contestId": 1619,
    "index": "C",
    "name": "Wrong Addition",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "241/C",
    "contestId": 241,
    "index": "C",
    "name": "Mirror Box",
    "rating": 2000,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "1698/A",
    "contestId": 1698,
    "index": "A",
    "name": "XOR Mixup",
    "rating": 800,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "id": "938/A",
    "contestId": 938,
    "index": "A",
    "name": "Word Correction",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "908/C",
    "contestId": 908,
    "index": "C",
    "name": "New Year and Curling",
    "rating": 1500,
    "tags": [
      "brute force",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "990/C",
    "contestId": 990,
    "index": "C",
    "name": "Bracket Sequences Concatenation Problem",
    "rating": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "760/B",
    "contestId": 760,
    "index": "B",
    "name": "Frodo and pillows",
    "rating": 1500,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "1690/F",
    "contestId": 1690,
    "index": "F",
    "name": "Shifting String",
    "rating": 1700,
    "tags": [
      "graphs",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "id": "44/G",
    "contestId": 44,
    "index": "G",
    "name": "Shooting Gallery",
    "rating": 2500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1346/C",
    "contestId": 1346,
    "index": "C",
    "name": "Spring Cleaning",
    "rating": 1600,
    "tags": [
      "*special",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1266/B",
    "contestId": 1266,
    "index": "B",
    "name": "Dice Tower",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1948/D",
    "contestId": 1948,
    "index": "D",
    "name": "Tandem Repeats?",
    "rating": 1700,
    "tags": [
      "brute force",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1647/D",
    "contestId": 1647,
    "index": "D",
    "name": "Madoka and the Best School in Russia",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1153/F",
    "contestId": 1153,
    "index": "F",
    "name": "Serval and Bonus Problem",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1326/B",
    "contestId": 1326,
    "index": "B",
    "name": "Maximums",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1081/B",
    "contestId": 1081,
    "index": "B",
    "name": "Farewell Party",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "818/A",
    "contestId": 818,
    "index": "A",
    "name": "Diplomas and Certificates",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "770/C",
    "contestId": 770,
    "index": "C",
    "name": "Online Courses In BSU",
    "rating": 1500,
    "tags": [
      "*special",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "90/A",
    "contestId": 90,
    "index": "A",
    "name": "Cableway",
    "rating": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1253/D",
    "contestId": 1253,
    "index": "D",
    "name": "Harmonious Graph",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1647/E",
    "contestId": 1647,
    "index": "E",
    "name": "Madoka and the Sixth-graders",
    "rating": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "id": "1422/A",
    "contestId": 1422,
    "index": "A",
    "name": "Fence",
    "rating": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1810/G",
    "contestId": 1810,
    "index": "G",
    "name": "The Maximum Prefix",
    "rating": 3200,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "59/D",
    "contestId": 59,
    "index": "D",
    "name": "Team Arrangement",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "888/D",
    "contestId": 888,
    "index": "D",
    "name": "Almost Identity Permutations",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "6/B",
    "contestId": 6,
    "index": "B",
    "name": "President's Office",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "977/F",
    "contestId": 977,
    "index": "F",
    "name": "Consecutive Subsequence",
    "rating": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "151/B",
    "contestId": 151,
    "index": "B",
    "name": "Phone Numbers",
    "rating": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "730/I",
    "contestId": 730,
    "index": "I",
    "name": "Olympiad in Programming and Sports",
    "rating": 2000,
    "tags": [
      "dp",
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "77/C",
    "contestId": 77,
    "index": "C",
    "name": "Beavermuncher-0xFF",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1255/C",
    "contestId": 1255,
    "index": "C",
    "name": "League of Leesins",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "180/E",
    "contestId": 180,
    "index": "E",
    "name": "Cubes",
    "rating": 1800,
    "tags": [
      "binary search",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "160/E",
    "contestId": 160,
    "index": "E",
    "name": "Buses and People",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1611/C",
    "contestId": 1611,
    "index": "C",
    "name": "Polycarp Recovers the Permutation",
    "rating": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1181/B",
    "contestId": 1181,
    "index": "B",
    "name": "Split a Number",
    "rating": 1500,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "282/A",
    "contestId": 282,
    "index": "A",
    "name": "Bit++",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "484/E",
    "contestId": 484,
    "index": "E",
    "name": "Sign on Fence",
    "rating": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "id": "255/D",
    "contestId": 255,
    "index": "D",
    "name": "Mr. Bender and Square",
    "rating": 1800,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1103/A",
    "contestId": 1103,
    "index": "A",
    "name": "Grid game",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "370/D",
    "contestId": 370,
    "index": "D",
    "name": "Broken Monitor",
    "rating": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "329/B",
    "contestId": 329,
    "index": "B",
    "name": "Biridian Forest",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "shortest paths"
    ]
  },
  {
    "id": "1882/C",
    "contestId": 1882,
    "index": "C",
    "name": "Card Game",
    "rating": 1500,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1081/E",
    "contestId": 1081,
    "index": "E",
    "name": "Missing Numbers",
    "rating": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1737/A",
    "contestId": 1737,
    "index": "A",
    "name": "Ela Sorting Books",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "447/A",
    "contestId": 447,
    "index": "A",
    "name": "DZY Loves Hash",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1808/E3",
    "contestId": 1808,
    "index": "E3",
    "name": "Minibuses on Venus (hard version)",
    "rating": 2800,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1616/A",
    "contestId": 1616,
    "index": "A",
    "name": "Integer Diversity",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "10/E",
    "contestId": 10,
    "index": "E",
    "name": "Greedy Change",
    "rating": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "37/C",
    "contestId": 37,
    "index": "C",
    "name": "Old Berland Language",
    "rating": 1900,
    "tags": [
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1059/C",
    "contestId": 1059,
    "index": "C",
    "name": "Sequence Transformation",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1137/A",
    "contestId": 1137,
    "index": "A",
    "name": "Skyscrapers",
    "rating": 1600,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1240/F",
    "contestId": 1240,
    "index": "F",
    "name": "Football",
    "rating": 3100,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "354/B",
    "contestId": 354,
    "index": "B",
    "name": "Game with Strings",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "games"
    ]
  },
  {
    "id": "1875/C",
    "contestId": 1875,
    "index": "C",
    "name": "Jellyfish and Green Apple",
    "rating": 1400,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1534/B",
    "contestId": 1534,
    "index": "B",
    "name": "Histogram Ugliness",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "672/A",
    "contestId": 672,
    "index": "A",
    "name": "Summer Camp",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1736/E",
    "contestId": 1736,
    "index": "E",
    "name": "Swap and Take",
    "rating": 2600,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "25/B",
    "contestId": 25,
    "index": "B",
    "name": "Phone numbers",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "818/D",
    "contestId": 818,
    "index": "D",
    "name": "Multicolored Cars",
    "rating": 1700,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1169/A",
    "contestId": 1169,
    "index": "A",
    "name": "Circle Metro",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1809/G",
    "contestId": 1809,
    "index": "G",
    "name": "Prediction",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "505/D",
    "contestId": 505,
    "index": "D",
    "name": "Mr. Kitayuta's Technology",
    "rating": 2200,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "id": "1764/E",
    "contestId": 1764,
    "index": "E",
    "name": "Doremy's Number Line",
    "rating": 2400,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1856/E1",
    "contestId": 1856,
    "index": "E1",
    "name": "PermuTree (easy version)",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1185/G2",
    "contestId": 1185,
    "index": "G2",
    "name": "Playlist for Polycarp (hard version)",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1950/G",
    "contestId": 1950,
    "index": "G",
    "name": "Shuffling Songs",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "graphs",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1575/E",
    "contestId": 1575,
    "index": "E",
    "name": "Eye-Pleasing City Park Tour",
    "rating": 2600,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1818/B",
    "contestId": 1818,
    "index": "B",
    "name": "Indivisible",
    "rating": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "171/D",
    "contestId": 171,
    "index": "D",
    "name": "Broken checker",
    "rating": 1300,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "id": "356/D",
    "contestId": 356,
    "index": "D",
    "name": "Bags and Coins",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "46/E",
    "contestId": 46,
    "index": "E",
    "name": "Comb",
    "rating": 1900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "958/D1",
    "contestId": 958,
    "index": "D1",
    "name": "Hyperspace Jump (easy)",
    "rating": 1400,
    "tags": [
      "expression parsing",
      "math"
    ]
  },
  {
    "id": "1971/H",
    "contestId": 1971,
    "index": "H",
    "name": "±1",
    "rating": 2100,
    "tags": [
      "2-sat",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1371/C",
    "contestId": 1371,
    "index": "C",
    "name": "A Cookie for You",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1970/E3",
    "contestId": 1970,
    "index": "E3",
    "name": "Trails (Hard)",
    "rating": 2200,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "915/D",
    "contestId": 915,
    "index": "D",
    "name": "Almost Acyclic Graph",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1466/E",
    "contestId": 1466,
    "index": "E",
    "name": "Apollo versus Pan",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "math"
    ]
  },
  {
    "id": "1156/E",
    "contestId": 1156,
    "index": "E",
    "name": "Special Segments of Permutation",
    "rating": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "two pointers"
    ]
  },
  {
    "id": "1619/F",
    "contestId": 1619,
    "index": "F",
    "name": "Let's Play the Hat?",
    "rating": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "909/B",
    "contestId": 909,
    "index": "B",
    "name": "Segments",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1373/G",
    "contestId": 1373,
    "index": "G",
    "name": "Pawns",
    "rating": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "greedy"
    ]
  },
  {
    "id": "713/A",
    "contestId": 713,
    "index": "A",
    "name": "Sonya and Queries",
    "rating": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "976/B",
    "contestId": 976,
    "index": "B",
    "name": "Lara Croft and the New Game",
    "rating": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1552/F",
    "contestId": 1552,
    "index": "F",
    "name": "Telepanting",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "id": "382/C",
    "contestId": 382,
    "index": "C",
    "name": "Arithmetic Progression",
    "rating": 1700,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1152/B",
    "contestId": 1152,
    "index": "B",
    "name": "Neko Performs Cat Furrier Transform",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "math"
    ]
  },
  {
    "id": "135/E",
    "contestId": 135,
    "index": "E",
    "name": "Weak Subsequence",
    "rating": 3000,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "id": "494/B",
    "contestId": 494,
    "index": "B",
    "name": "Obsessive String",
    "rating": 2000,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "578/B",
    "contestId": 578,
    "index": "B",
    "name": "\"Or\" Game",
    "rating": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1671/D",
    "contestId": 1671,
    "index": "D",
    "name": "Insert a Progression",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1188/E",
    "contestId": 1188,
    "index": "E",
    "name": "Problem from Red Panda",
    "rating": 3300,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "id": "321/B",
    "contestId": 321,
    "index": "B",
    "name": "Ciel and Duel",
    "rating": 1900,
    "tags": [
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "id": "1554/E",
    "contestId": 1554,
    "index": "E",
    "name": "You",
    "rating": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1709/F",
    "contestId": 1709,
    "index": "F",
    "name": "Multiset of Strings",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "fft",
      "flows",
      "graphs",
      "math",
      "meet-in-the-middle",
      "trees"
    ]
  },
  {
    "id": "1036/D",
    "contestId": 1036,
    "index": "D",
    "name": "Vasya and Arrays",
    "rating": 1600,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "673/A",
    "contestId": 673,
    "index": "A",
    "name": "Bear and Game",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "799/F",
    "contestId": 799,
    "index": "F",
    "name": "Beautiful fountains rows",
    "rating": 3500,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1405/A",
    "contestId": 1405,
    "index": "A",
    "name": "Permutation Forgery",
    "rating": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "432/E",
    "contestId": 432,
    "index": "E",
    "name": "Square Tiling",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1804/A",
    "contestId": 1804,
    "index": "A",
    "name": "Lame King",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "160/A",
    "contestId": 160,
    "index": "A",
    "name": "Twins",
    "rating": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1060/B",
    "contestId": 1060,
    "index": "B",
    "name": "Maximum Sum of Digits",
    "rating": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1437/A",
    "contestId": 1437,
    "index": "A",
    "name": "Marketing Scheme",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "318/A",
    "contestId": 318,
    "index": "A",
    "name": "Even Odds",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1066/C",
    "contestId": 1066,
    "index": "C",
    "name": "Books Queries",
    "rating": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "319/A",
    "contestId": 319,
    "index": "A",
    "name": "Malek Dance Club",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1017/B",
    "contestId": 1017,
    "index": "B",
    "name": "The Bits",
    "rating": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "163/E",
    "contestId": 163,
    "index": "E",
    "name": "e-Government",
    "rating": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "strings",
      "trees"
    ]
  },
  {
    "id": "220/D",
    "contestId": 220,
    "index": "D",
    "name": "Little Elephant and Triangle",
    "rating": 2500,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "898/B",
    "contestId": 898,
    "index": "B",
    "name": "Proper Nutrition",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "720/B",
    "contestId": 720,
    "index": "B",
    "name": "Cactusophobia",
    "rating": 2400,
    "tags": [
      "dfs and similar",
      "flows"
    ]
  },
  {
    "id": "1133/F2",
    "contestId": 1133,
    "index": "F2",
    "name": "Spanning Tree with One Fixed Degree",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1763/E",
    "contestId": 1763,
    "index": "E",
    "name": "Node Pairs",
    "rating": 2200,
    "tags": [
      "dp",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "id": "149/E",
    "contestId": 149,
    "index": "E",
    "name": "Martian Strings",
    "rating": 2300,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1080/E",
    "contestId": 1080,
    "index": "E",
    "name": "Sonya and Matrix Beauty",
    "rating": 2400,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "61/D",
    "contestId": 61,
    "index": "D",
    "name": "Eternal Victory",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "688/A",
    "contestId": 688,
    "index": "A",
    "name": "Opponents",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1508/A",
    "contestId": 1508,
    "index": "A",
    "name": "Binary Literature",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1200/E",
    "contestId": 1200,
    "index": "E",
    "name": "Compress Words",
    "rating": 2000,
    "tags": [
      "brute force",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1900/D",
    "contestId": 1900,
    "index": "D",
    "name": "Small GCD",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "827/A",
    "contestId": 827,
    "index": "A",
    "name": "String Reconstruction",
    "rating": 1700,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1202/E",
    "contestId": 1202,
    "index": "E",
    "name": "You Are Given Some Strings...",
    "rating": 2400,
    "tags": [
      "brute force",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1814/E",
    "contestId": 1814,
    "index": "E",
    "name": "Chain Chips",
    "rating": 2300,
    "tags": [
      "data structures",
      "dp",
      "matrices"
    ]
  },
  {
    "id": "877/E",
    "contestId": 877,
    "index": "E",
    "name": "Danil and a Part-time Job",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "id": "525/A",
    "contestId": 525,
    "index": "A",
    "name": "Vitaliy and Pie",
    "rating": 1100,
    "tags": [
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "44/B",
    "contestId": 44,
    "index": "B",
    "name": "Cola",
    "rating": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "384/B",
    "contestId": 384,
    "index": "B",
    "name": "Multitasking",
    "rating": 1500,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1749/D",
    "contestId": 1749,
    "index": "D",
    "name": "Counting Arrays",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1227/C",
    "contestId": 1227,
    "index": "C",
    "name": "Messy",
    "rating": 1700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1497/E1",
    "contestId": 1497,
    "index": "E1",
    "name": "Square-Free Division (easy version)",
    "rating": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1667/B",
    "contestId": 1667,
    "index": "B",
    "name": "Optimal Partition",
    "rating": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "486/A",
    "contestId": 486,
    "index": "A",
    "name": "Calculating Function",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1866/E",
    "contestId": 1866,
    "index": "E",
    "name": "Elevators of Tamem",
    "rating": 2700,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "325/A",
    "contestId": 325,
    "index": "A",
    "name": "Square and Rectangles",
    "rating": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1776/E",
    "contestId": 1776,
    "index": "E",
    "name": "Crossing the Railways",
    "rating": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1328/F",
    "contestId": 1328,
    "index": "F",
    "name": "Make k Equal",
    "rating": 2200,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1228/C",
    "contestId": 1228,
    "index": "C",
    "name": "Primes and Multiplication",
    "rating": 1700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "831/A",
    "contestId": 831,
    "index": "A",
    "name": "Unimodal Array",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "922/A",
    "contestId": 922,
    "index": "A",
    "name": "Cloning Toys",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1073/F",
    "contestId": 1073,
    "index": "F",
    "name": "Choosing Two Paths",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1906/I",
    "contestId": 1906,
    "index": "I",
    "name": "Contingency Plan 2",
    "rating": 2900,
    "tags": [
      "graph matchings"
    ]
  },
  {
    "id": "360/A",
    "contestId": 360,
    "index": "A",
    "name": "Levko and Array Recovery",
    "rating": 1700,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1411/G",
    "contestId": 1411,
    "index": "G",
    "name": "No Game No Life",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "games",
      "math",
      "matrices"
    ]
  },
  {
    "id": "525/C",
    "contestId": 525,
    "index": "C",
    "name": "Ilya and Sticks",
    "rating": 1600,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1537/E2",
    "contestId": 1537,
    "index": "E2",
    "name": "Erase and Extend (Hard Version)",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "hashing",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1039/A",
    "contestId": 1039,
    "index": "A",
    "name": "Timetable",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "457/A",
    "contestId": 457,
    "index": "A",
    "name": "Golden System",
    "rating": 1700,
    "tags": [
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "150/E",
    "contestId": 150,
    "index": "E",
    "name": "Freezing with Style",
    "rating": 3000,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "id": "1709/A",
    "contestId": 1709,
    "index": "A",
    "name": "Three Doors",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "204/B",
    "contestId": 204,
    "index": "B",
    "name": "Little Elephant and Cards",
    "rating": 1500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1942/A",
    "contestId": 1942,
    "index": "A",
    "name": "Farmer John's Challenge",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1668/A",
    "contestId": 1668,
    "index": "A",
    "name": "Direction Change",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1352/F",
    "contestId": 1352,
    "index": "F",
    "name": "Binary String Reconstruction",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "math"
    ]
  },
  {
    "id": "1154/B",
    "contestId": 1154,
    "index": "B",
    "name": "Make Them Equal",
    "rating": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "id": "959/B",
    "contestId": 959,
    "index": "B",
    "name": "Mahmoud and Ehab and the message",
    "rating": 1200,
    "tags": [
      "dsu",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1010/E",
    "contestId": 1010,
    "index": "E",
    "name": "Store",
    "rating": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1190/C",
    "contestId": 1190,
    "index": "C",
    "name": "Tokitsukaze and Duel",
    "rating": 2300,
    "tags": [
      "brute force",
      "games",
      "greedy"
    ]
  },
  {
    "id": "744/E",
    "contestId": 744,
    "index": "E",
    "name": "Hongcow Masters the Cyclic Shift",
    "rating": 3200,
    "tags": [
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1906/H",
    "contestId": 1906,
    "index": "H",
    "name": "Twin Friends",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1463/B",
    "contestId": 1463,
    "index": "B",
    "name": "Find The Array",
    "rating": 1400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1393/B",
    "contestId": 1393,
    "index": "B",
    "name": "Applejack and Storages",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "877/F",
    "contestId": 877,
    "index": "F",
    "name": "Ann and Books",
    "rating": 2300,
    "tags": [
      "data structures",
      "flows",
      "hashing"
    ]
  },
  {
    "id": "165/B",
    "contestId": 165,
    "index": "B",
    "name": "Burning Midnight Oil",
    "rating": 1500,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "id": "1282/B2",
    "contestId": 1282,
    "index": "B2",
    "name": "K for the Price of One (Hard Version)",
    "rating": 1600,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1821/E",
    "contestId": 1821,
    "index": "E",
    "name": "Rearrange Brackets",
    "rating": 2100,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "571/A",
    "contestId": 571,
    "index": "A",
    "name": "Lengthening Sticks",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1627/B",
    "contestId": 1627,
    "index": "B",
    "name": "Not Sitting",
    "rating": 1300,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "437/E",
    "contestId": 437,
    "index": "E",
    "name": "The Child and Polygon",
    "rating": 2500,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "id": "510/B",
    "contestId": 510,
    "index": "B",
    "name": "Fox And Two Dots",
    "rating": 1500,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "id": "105/C",
    "contestId": 105,
    "index": "C",
    "name": "Item World",
    "rating": 2200,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "214/B",
    "contestId": 214,
    "index": "B",
    "name": "Hometask",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1367/A",
    "contestId": 1367,
    "index": "A",
    "name": "Short Substrings",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1684/A",
    "contestId": 1684,
    "index": "A",
    "name": "Digit Minimization",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "games",
      "math",
      "strings"
    ]
  },
  {
    "id": "1971/B",
    "contestId": 1971,
    "index": "B",
    "name": "Different String",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "19/A",
    "contestId": 19,
    "index": "A",
    "name": "World Football Cup",
    "rating": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "641/B",
    "contestId": 641,
    "index": "B",
    "name": "Little Artem and Matrix",
    "rating": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "439/A",
    "contestId": 439,
    "index": "A",
    "name": "Devu, the Singer and Churu, the Joker",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1910/A",
    "contestId": 1910,
    "index": "A",
    "name": "Username",
    "rating": 1100,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "964/A",
    "contestId": 964,
    "index": "A",
    "name": "Splits",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1820/A",
    "contestId": 1820,
    "index": "A",
    "name": "Yura's New Name",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1571/F",
    "contestId": 1571,
    "index": "F",
    "name": "Kotlinforces",
    "rating": 2000,
    "tags": [
      "*special",
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "id": "1427/D",
    "contestId": 1427,
    "index": "D",
    "name": "Unshuffling a Deck",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "785/B",
    "contestId": 785,
    "index": "B",
    "name": "Anton and Classes",
    "rating": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1712/E1",
    "contestId": 1712,
    "index": "E1",
    "name": "LCM Sum (easy version)",
    "rating": 2300,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1097/H",
    "contestId": 1097,
    "index": "H",
    "name": "Mateusz and an Infinite Sequence",
    "rating": 3400,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "id": "1536/C",
    "contestId": 1536,
    "index": "C",
    "name": "Diluc and Kaeya",
    "rating": 1500,
    "tags": [
      "data structures",
      "dp",
      "hashing",
      "number theory"
    ]
  },
  {
    "id": "1863/C",
    "contestId": 1863,
    "index": "C",
    "name": "MEX Repetition",
    "rating": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "768/D",
    "contestId": 768,
    "index": "D",
    "name": "Jon and Orbs",
    "rating": 2200,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "713/C",
    "contestId": 713,
    "index": "C",
    "name": "Sonya and Problem Wihtout a Legend",
    "rating": 2300,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "id": "1051/A",
    "contestId": 1051,
    "index": "A",
    "name": "Vasya And Password",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "685/D",
    "contestId": 685,
    "index": "D",
    "name": "Kay and Eternity",
    "rating": 2600,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1787/H",
    "contestId": 1787,
    "index": "H",
    "name": "Codeforces Scoreboard",
    "rating": 3300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "geometry"
    ]
  },
  {
    "id": "1212/A",
    "contestId": 1212,
    "index": "A",
    "name": "Wrong Subtraction",
    "rating": 800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "878/B",
    "contestId": 878,
    "index": "B",
    "name": "Teams Formation",
    "rating": 2300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "30/A",
    "contestId": 30,
    "index": "A",
    "name": "Accounting",
    "rating": 1400,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1040/A",
    "contestId": 1040,
    "index": "A",
    "name": "Palindrome Dance",
    "rating": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1042/C",
    "contestId": 1042,
    "index": "C",
    "name": "Array Product",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1863/A",
    "contestId": 1863,
    "index": "A",
    "name": "Channel",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1902/E",
    "contestId": 1902,
    "index": "E",
    "name": "Collapsing Strings",
    "rating": 1900,
    "tags": [
      "data structures",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1996/E",
    "contestId": 1996,
    "index": "E",
    "name": "Decode",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1535/A",
    "contestId": 1535,
    "index": "A",
    "name": "Fair Playoff",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1542/E1",
    "contestId": 1542,
    "index": "E1",
    "name": "Abnormal Permutation Pairs (easy version)",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "154/D",
    "contestId": 154,
    "index": "D",
    "name": "Flatland Fencing",
    "rating": 2400,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "343/E",
    "contestId": 343,
    "index": "E",
    "name": "Pumping Stations",
    "rating": 2900,
    "tags": [
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "flows",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1397/B",
    "contestId": 1397,
    "index": "B",
    "name": "Power Sequence",
    "rating": 1500,
    "tags": [
      "brute force",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "946/A",
    "contestId": 946,
    "index": "A",
    "name": "Partition",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "823/C",
    "contestId": 823,
    "index": "C",
    "name": "Bamboo Partition",
    "rating": 2300,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1245/A",
    "contestId": 1245,
    "index": "A",
    "name": "Good ol' Numbers Coloring",
    "rating": 1000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1427/A",
    "contestId": 1427,
    "index": "A",
    "name": "Avoiding Zero",
    "rating": 900,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "id": "1301/E",
    "contestId": 1301,
    "index": "E",
    "name": "Nanosoft",
    "rating": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "36/A",
    "contestId": 36,
    "index": "A",
    "name": "Extra-terrestrial Intelligence",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1884/D",
    "contestId": 1884,
    "index": "D",
    "name": "Counting Rhyme",
    "rating": 2100,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "289/A",
    "contestId": 289,
    "index": "A",
    "name": "Polo the Penguin and Segments",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "888/E",
    "contestId": 888,
    "index": "E",
    "name": "Maximum Subsequence",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1638/A",
    "contestId": 1638,
    "index": "A",
    "name": "Reverse",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "263/B",
    "contestId": 263,
    "index": "B",
    "name": "Squares",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "387/B",
    "contestId": 387,
    "index": "B",
    "name": "George and Round",
    "rating": 1200,
    "tags": [
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "788/C",
    "contestId": 788,
    "index": "C",
    "name": "The Great Mixing",
    "rating": 2300,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "491/A",
    "contestId": 491,
    "index": "A",
    "name": "Up the hill",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1774/G",
    "contestId": 1774,
    "index": "G",
    "name": "Segment Covering",
    "rating": 3200,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1016/C",
    "contestId": 1016,
    "index": "C",
    "name": "Vasya And The Mushrooms",
    "rating": 1800,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1438/B",
    "contestId": 1438,
    "index": "B",
    "name": "Valerii Against Everyone",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1141/F2",
    "contestId": 1141,
    "index": "F2",
    "name": "Same Sum Blocks (Hard)",
    "rating": 1900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "304/A",
    "contestId": 304,
    "index": "A",
    "name": "Pythagorean Theorem II",
    "rating": 1200,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "934/B",
    "contestId": 934,
    "index": "B",
    "name": "A Prosperous Lot",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1176/C",
    "contestId": 1176,
    "index": "C",
    "name": "Lose it!",
    "rating": 1300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1731/C",
    "contestId": 1731,
    "index": "C",
    "name": "Even Subarrays",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "id": "317/C",
    "contestId": 317,
    "index": "C",
    "name": "Balance",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1325/E",
    "contestId": 1325,
    "index": "E",
    "name": "Ehab's REAL Number Theory Problem",
    "rating": 2600,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "id": "1065/G",
    "contestId": 1065,
    "index": "G",
    "name": "Fibonacci Suffix",
    "rating": 2700,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "1728/G",
    "contestId": 1728,
    "index": "G",
    "name": "Illumination",
    "rating": 2700,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "794/E",
    "contestId": 794,
    "index": "E",
    "name": "Choosing Carrot",
    "rating": 2800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "1692/H",
    "contestId": 1692,
    "index": "H",
    "name": "Gambling",
    "rating": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1158/C",
    "contestId": 1158,
    "index": "C",
    "name": "Permutation recovery",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "443/B",
    "contestId": 443,
    "index": "B",
    "name": "Kolya and Tandem Repeat",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "104/A",
    "contestId": 104,
    "index": "A",
    "name": "Blackjack",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "796/E",
    "contestId": 796,
    "index": "E",
    "name": "Exam Cheating",
    "rating": 2400,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "301/B",
    "contestId": 301,
    "index": "B",
    "name": "Yaroslav and Time",
    "rating": 2100,
    "tags": [
      "binary search",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1327/G",
    "contestId": 1327,
    "index": "G",
    "name": "Letters and Question Marks",
    "rating": 2800,
    "tags": [
      "bitmasks",
      "dp",
      "string suffix structures"
    ]
  },
  {
    "id": "1895/D",
    "contestId": 1895,
    "index": "D",
    "name": "XOR Construction",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "data structures",
      "math",
      "string suffix structures",
      "trees"
    ]
  },
  {
    "id": "426/A",
    "contestId": 426,
    "index": "A",
    "name": "Sereja and Mugs",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "930/B",
    "contestId": 930,
    "index": "B",
    "name": "Game with String",
    "rating": 1600,
    "tags": [
      "implementation",
      "probabilities",
      "strings"
    ]
  },
  {
    "id": "1566/D1",
    "contestId": 1566,
    "index": "D1",
    "name": "Seating Arrangements (easy version)",
    "rating": 1100,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1705/A",
    "contestId": 1705,
    "index": "A",
    "name": "Mark the Photographer",
    "rating": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "14/A",
    "contestId": 14,
    "index": "A",
    "name": "Letter",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1843/C",
    "contestId": 1843,
    "index": "C",
    "name": "Sum in Binary Tree",
    "rating": 800,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math",
      "trees"
    ]
  },
  {
    "id": "983/C",
    "contestId": 983,
    "index": "C",
    "name": "Elevator",
    "rating": 2400,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "958/E2",
    "contestId": 958,
    "index": "E2",
    "name": "Guard Duty (medium)",
    "rating": 2200,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1551/B1",
    "contestId": 1551,
    "index": "B1",
    "name": "Wonderful Coloring - 1",
    "rating": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1093/E",
    "contestId": 1093,
    "index": "E",
    "name": "Intersection of Permutations",
    "rating": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1874/A",
    "contestId": 1874,
    "index": "A",
    "name": "Jellyfish and Game",
    "rating": 1200,
    "tags": [
      "brute force",
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1184/A3",
    "contestId": 1184,
    "index": "A3",
    "name": "Heidi Learns Hashing (Hard)",
    "rating": 3100,
    "tags": [
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1852/C",
    "contestId": 1852,
    "index": "C",
    "name": "Ina of the Mountain",
    "rating": 2400,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1061/D",
    "contestId": 1061,
    "index": "D",
    "name": "TV Shows",
    "rating": 2000,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "35/C",
    "contestId": 35,
    "index": "C",
    "name": "Fire Again",
    "rating": 1500,
    "tags": [
      "brute force",
      "dfs and similar",
      "shortest paths"
    ]
  },
  {
    "id": "1592/F1",
    "contestId": 1592,
    "index": "F1",
    "name": "Alice and Recoloring 1",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "896/A",
    "contestId": 896,
    "index": "A",
    "name": "Nephren gives a riddle",
    "rating": 1700,
    "tags": [
      "binary search",
      "dfs and similar"
    ]
  },
  {
    "id": "1141/E",
    "contestId": 1141,
    "index": "E",
    "name": "Superhero Battle",
    "rating": 1700,
    "tags": [
      "math"
    ]
  },
  {
    "id": "18/A",
    "contestId": 18,
    "index": "A",
    "name": "Triangle",
    "rating": 1500,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "id": "739/A",
    "contestId": 739,
    "index": "A",
    "name": "Alyona and mex",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1409/D",
    "contestId": 1409,
    "index": "D",
    "name": "Decrease the Sum of Digits",
    "rating": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1750/E",
    "contestId": 1750,
    "index": "E",
    "name": "Bracket Cost",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "540/B",
    "contestId": 540,
    "index": "B",
    "name": "School Marks",
    "rating": 1700,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1059/E",
    "contestId": 1059,
    "index": "E",
    "name": "Split the Tree",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "660/C",
    "contestId": 660,
    "index": "C",
    "name": "Hard Process",
    "rating": 1600,
    "tags": [
      "binary search",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "1585/B",
    "contestId": 1585,
    "index": "B",
    "name": "Array Eversion",
    "rating": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "608/A",
    "contestId": 608,
    "index": "A",
    "name": "Saitama Destroys Hotel",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1697/B",
    "contestId": 1697,
    "index": "B",
    "name": "Promo",
    "rating": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1994/D",
    "contestId": 1994,
    "index": "D",
    "name": "Funny Game",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "1057/C",
    "contestId": 1057,
    "index": "C",
    "name": "Tanya and Colored Candies",
    "rating": 2000,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "id": "913/A",
    "contestId": 913,
    "index": "A",
    "name": "Modular Exponentiation",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "65/D",
    "contestId": 65,
    "index": "D",
    "name": "Harry Potter and the Sorting Hat",
    "rating": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "hashing"
    ]
  },
  {
    "id": "638/C",
    "contestId": 638,
    "index": "C",
    "name": "Road Improvement",
    "rating": 1800,
    "tags": [
      "*special",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "292/D",
    "contestId": 292,
    "index": "D",
    "name": "Connected Components",
    "rating": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu"
    ]
  },
  {
    "id": "1866/M",
    "contestId": 1866,
    "index": "M",
    "name": "Mighty Rock Tower",
    "rating": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "963/E",
    "contestId": 963,
    "index": "E",
    "name": "Circles of Waiting",
    "rating": 3100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1868/A",
    "contestId": 1868,
    "index": "A",
    "name": "Fill in the Matrix",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1467/D",
    "contestId": 1467,
    "index": "D",
    "name": "Sum of Paths",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1601/E",
    "contestId": 1601,
    "index": "E",
    "name": "Phys Ed Online",
    "rating": 2900,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1110/C",
    "contestId": 1110,
    "index": "C",
    "name": "Meaningless Operations",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "374/C",
    "contestId": 374,
    "index": "C",
    "name": "Inna and Dima",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "748/E",
    "contestId": 748,
    "index": "E",
    "name": "Santa Claus and Tangerines",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1990/A",
    "contestId": 1990,
    "index": "A",
    "name": "Submission Bait",
    "rating": 900,
    "tags": [
      "brute force",
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1525/B",
    "contestId": 1525,
    "index": "B",
    "name": "Permutation Sort",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "946/E",
    "contestId": 946,
    "index": "E",
    "name": "Largest Beautiful Number",
    "rating": 2200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1109/B",
    "contestId": 1109,
    "index": "B",
    "name": "Sasha and One More Name",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "925/D",
    "contestId": 925,
    "index": "D",
    "name": "Aztec Catacombs",
    "rating": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1189/A",
    "contestId": 1189,
    "index": "A",
    "name": "Keanu Reeves",
    "rating": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "1732/E",
    "contestId": 1732,
    "index": "E",
    "name": "Location",
    "rating": 2800,
    "tags": [
      "data structures",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1910/H",
    "contestId": 1910,
    "index": "H",
    "name": "Sum of Digits of Sums",
    "rating": 2400,
    "tags": [
      "*special",
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1614/D1",
    "contestId": 1614,
    "index": "D1",
    "name": "Divan and Kostomuksha (easy version)",
    "rating": 2100,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "id": "913/F",
    "contestId": 913,
    "index": "F",
    "name": "Strongly Connected Tournament",
    "rating": 2800,
    "tags": [
      "dp",
      "graphs",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1633/B",
    "contestId": 1633,
    "index": "B",
    "name": "Minority",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1310/E",
    "contestId": 1310,
    "index": "E",
    "name": "Strange Function",
    "rating": 2900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "320/B",
    "contestId": 320,
    "index": "B",
    "name": "Ping-Pong (Easy Version)",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "432/D",
    "contestId": 432,
    "index": "D",
    "name": "Prefixes and Suffixes",
    "rating": 2000,
    "tags": [
      "dp",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "442/E",
    "contestId": 442,
    "index": "E",
    "name": "Gena and Second Distance",
    "rating": 3100,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1401/E",
    "contestId": 1401,
    "index": "E",
    "name": "Divide Square",
    "rating": 2400,
    "tags": [
      "data structures",
      "geometry",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "8/E",
    "contestId": 8,
    "index": "E",
    "name": "Beads",
    "rating": 2600,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "id": "22/B",
    "contestId": 22,
    "index": "B",
    "name": "Bargaining Table",
    "rating": 1500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "85/C",
    "contestId": 85,
    "index": "C",
    "name": "Petya and Tree",
    "rating": 2200,
    "tags": [
      "binary search",
      "dfs and similar",
      "probabilities",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1146/H",
    "contestId": 1146,
    "index": "H",
    "name": "Satanic Panic",
    "rating": 2900,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "id": "701/C",
    "contestId": 701,
    "index": "C",
    "name": "They Are Everywhere",
    "rating": 1500,
    "tags": [
      "binary search",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1108/E1",
    "contestId": 1108,
    "index": "E1",
    "name": "Array and Segments (Easy version)",
    "rating": 1800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1774/A",
    "contestId": 1774,
    "index": "A",
    "name": "Add Plus Minus Sign",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "262/B",
    "contestId": 262,
    "index": "B",
    "name": "Roma and Changing Signs",
    "rating": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "340/D",
    "contestId": 340,
    "index": "D",
    "name": "Bubble Sort Graph",
    "rating": 1500,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "364/D",
    "contestId": 364,
    "index": "D",
    "name": "Ghd",
    "rating": 2900,
    "tags": [
      "brute force",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "641/C",
    "contestId": 641,
    "index": "C",
    "name": "Little Artem and Dance",
    "rating": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1925/A",
    "contestId": 1925,
    "index": "A",
    "name": "We Got Everything Covered!",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "435/C",
    "contestId": 435,
    "index": "C",
    "name": "Cardiogram",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "797/E",
    "contestId": 797,
    "index": "E",
    "name": "Array Queries",
    "rating": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "183/D",
    "contestId": 183,
    "index": "D",
    "name": "T-shirt",
    "rating": 2700,
    "tags": [
      "dp",
      "greedy",
      "probabilities"
    ]
  },
  {
    "id": "912/B",
    "contestId": 912,
    "index": "B",
    "name": "New Year's Eve",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "id": "1758/E",
    "contestId": 1758,
    "index": "E",
    "name": "Tick, Tock",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1485/D",
    "contestId": 1485,
    "index": "D",
    "name": "Multiples and Power Differences",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1914/A",
    "contestId": 1914,
    "index": "A",
    "name": "Problemsolving Log",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1212/G",
    "contestId": 1212,
    "index": "G",
    "name": "Hiking",
    "rating": 2300,
    "tags": [
      "*special",
      "binary search",
      "dp"
    ]
  },
  {
    "id": "1511/F",
    "contestId": 1511,
    "index": "F",
    "name": "Chainword",
    "rating": 2700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "matrices",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1700/D",
    "contestId": 1700,
    "index": "D",
    "name": "River Locks",
    "rating": 1900,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1864/F",
    "contestId": 1864,
    "index": "F",
    "name": "Exotic Queries",
    "rating": 2300,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "988/F",
    "contestId": 988,
    "index": "F",
    "name": "Rain and Umbrellas",
    "rating": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1491/A",
    "contestId": 1491,
    "index": "A",
    "name": "K-th Largest Value",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1371/E2",
    "contestId": 1371,
    "index": "E2",
    "name": "Asterism (Hard Version)",
    "rating": 2300,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "431/A",
    "contestId": 431,
    "index": "A",
    "name": "Black Square",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1817/C",
    "contestId": 1817,
    "index": "C",
    "name": "Similar Polynomials",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1721/E",
    "contestId": 1721,
    "index": "E",
    "name": "Prefix Function Queries",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "hashing",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1325/A",
    "contestId": 1325,
    "index": "A",
    "name": "EhAb AnD gCd",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1030/A",
    "contestId": 1030,
    "index": "A",
    "name": "In Search of an Easy Problem",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "300/C",
    "contestId": 300,
    "index": "C",
    "name": "Beautiful Numbers",
    "rating": 1800,
    "tags": [
      "brute force",
      "combinatorics"
    ]
  },
  {
    "id": "798/E",
    "contestId": 798,
    "index": "E",
    "name": "Mike and code of a permutation",
    "rating": 3000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "sortings"
    ]
  },
  {
    "id": "1081/G",
    "contestId": 1081,
    "index": "G",
    "name": "Mergesort Strikes Back",
    "rating": 3200,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "id": "164/A",
    "contestId": 164,
    "index": "A",
    "name": "Variable, or There and Back Again",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "112/B",
    "contestId": 112,
    "index": "B",
    "name": "Petya and Square",
    "rating": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1548/C",
    "contestId": 1548,
    "index": "C",
    "name": "The Three Little Pigs",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "1431/F",
    "contestId": 1431,
    "index": "F",
    "name": "Neural Network Problem",
    "rating": 2100,
    "tags": [
      "*special",
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "520/E",
    "contestId": 520,
    "index": "E",
    "name": "Pluses everywhere",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1614/B",
    "contestId": 1614,
    "index": "B",
    "name": "Divan and a New Project",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "371/A",
    "contestId": 371,
    "index": "A",
    "name": "K-Periodic Array",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1437/D",
    "contestId": 1437,
    "index": "D",
    "name": "Minimal Height Tree",
    "rating": 1600,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "363/B",
    "contestId": 363,
    "index": "B",
    "name": "Fence",
    "rating": 1100,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "1392/D",
    "contestId": 1392,
    "index": "D",
    "name": "Omkar and Bed Wars",
    "rating": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1987/C",
    "contestId": 1987,
    "index": "C",
    "name": "Basil's Garden",
    "rating": 1200,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "156/D",
    "contestId": 156,
    "index": "D",
    "name": "Clues",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "graphs"
    ]
  },
  {
    "id": "1268/B",
    "contestId": 1268,
    "index": "B",
    "name": "Domino for Young",
    "rating": 2000,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1076/B",
    "contestId": 1076,
    "index": "B",
    "name": "Divisor Subtraction",
    "rating": 1200,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "498/E",
    "contestId": 498,
    "index": "E",
    "name": "Stairs and Lines",
    "rating": 2700,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "78/B",
    "contestId": 78,
    "index": "B",
    "name": "Easter Eggs",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "40/B",
    "contestId": 40,
    "index": "B",
    "name": "Repaintings",
    "rating": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1249/D2",
    "contestId": 1249,
    "index": "D2",
    "name": "Too Many Segments (hard version)",
    "rating": 1800,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "732/E",
    "contestId": 732,
    "index": "E",
    "name": "Sockets",
    "rating": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "55/D",
    "contestId": 55,
    "index": "D",
    "name": "Beautiful numbers",
    "rating": 2500,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "id": "1427/E",
    "contestId": 1427,
    "index": "E",
    "name": "Xum",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "id": "1725/A",
    "contestId": 1725,
    "index": "A",
    "name": "Accumulation of Dominoes",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1427/G",
    "contestId": 1427,
    "index": "G",
    "name": "One Billion Shades of Grey",
    "rating": 3300,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "id": "1600/E",
    "contestId": 1600,
    "index": "E",
    "name": "Array Game",
    "rating": 1900,
    "tags": [
      "games",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "780/C",
    "contestId": 780,
    "index": "C",
    "name": "Andryusha and Colored Balloons",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "625/A",
    "contestId": 625,
    "index": "A",
    "name": "Guest From the Past",
    "rating": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1019/A",
    "contestId": 1019,
    "index": "A",
    "name": "Elections",
    "rating": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1692/C",
    "contestId": 1692,
    "index": "C",
    "name": "Where's the Bishop?",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "794/B",
    "contestId": 794,
    "index": "B",
    "name": "Cutting Carrot",
    "rating": 1200,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1342/C",
    "contestId": 1342,
    "index": "C",
    "name": "Yet Another Counting Problem",
    "rating": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1620/G",
    "contestId": 1620,
    "index": "G",
    "name": "Subsequences Galore",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "288/B",
    "contestId": 288,
    "index": "B",
    "name": "Polo the Penguin and Houses",
    "rating": 1500,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "id": "1607/C",
    "contestId": 1607,
    "index": "C",
    "name": "Minimum Extraction",
    "rating": 1000,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "id": "1852/B",
    "contestId": 1852,
    "index": "B",
    "name": "Imbalanced Arrays",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "138/D",
    "contestId": 138,
    "index": "D",
    "name": "World of Darkraft",
    "rating": 2500,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "id": "1487/C",
    "contestId": 1487,
    "index": "C",
    "name": "Minimum Ties",
    "rating": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "61/A",
    "contestId": 61,
    "index": "A",
    "name": "Ultra-Fast Mathematician",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1068/A",
    "contestId": 1068,
    "index": "A",
    "name": "Birthday",
    "rating": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1702/E",
    "contestId": 1702,
    "index": "E",
    "name": "Split Into Two Sets",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "854/A",
    "contestId": 854,
    "index": "A",
    "name": "Fraction",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1348/E",
    "contestId": 1348,
    "index": "E",
    "name": "Phoenix and Berries",
    "rating": 2400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "359/B",
    "contestId": 359,
    "index": "B",
    "name": "Permutation",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "id": "1948/F",
    "contestId": 1948,
    "index": "F",
    "name": "Rare Coins",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "476/A",
    "contestId": 476,
    "index": "A",
    "name": "Dreamoon and Stairs",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "599/C",
    "contestId": 599,
    "index": "C",
    "name": "Day at the Beach",
    "rating": 1600,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "1473/B",
    "contestId": 1473,
    "index": "B",
    "name": "String LCM",
    "rating": 1000,
    "tags": [
      "brute force",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "id": "1822/F",
    "contestId": 1822,
    "index": "F",
    "name": "Gardening Friends",
    "rating": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "780/D",
    "contestId": 780,
    "index": "D",
    "name": "Innokenty and a Football League",
    "rating": 1900,
    "tags": [
      "2-sat",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths",
      "strings"
    ]
  },
  {
    "id": "1062/B",
    "contestId": 1062,
    "index": "B",
    "name": "Math",
    "rating": 1500,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "821/C",
    "contestId": 821,
    "index": "C",
    "name": "Okabe and Boxes",
    "rating": 1500,
    "tags": [
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1747/C",
    "contestId": 1747,
    "index": "C",
    "name": "Swap Game",
    "rating": 1200,
    "tags": [
      "games"
    ]
  },
  {
    "id": "1265/E",
    "contestId": 1265,
    "index": "E",
    "name": "Beautiful Mirrors",
    "rating": 2100,
    "tags": [
      "data structures",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1415/B",
    "contestId": 1415,
    "index": "B",
    "name": "Repainting Street",
    "rating": 1100,
    "tags": [
      "brute force",
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "853/B",
    "contestId": 853,
    "index": "B",
    "name": "Jury Meeting",
    "rating": 1800,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "362/E",
    "contestId": 362,
    "index": "E",
    "name": "Petya and Pipes",
    "rating": 2300,
    "tags": [
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "339/C",
    "contestId": 339,
    "index": "C",
    "name": "Xenia and Weights",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "298/A",
    "contestId": 298,
    "index": "A",
    "name": "Snow Footprints",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1949/K",
    "contestId": 1949,
    "index": "K",
    "name": "Make Triangle",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1282/C",
    "contestId": 1282,
    "index": "C",
    "name": "Petya and Exam",
    "rating": 1800,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "883/I",
    "contestId": 883,
    "index": "I",
    "name": "Photo Processing",
    "rating": 1900,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "1838/B",
    "contestId": 1838,
    "index": "B",
    "name": "Minimize Permutation Subarrays",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "864/E",
    "contestId": 864,
    "index": "E",
    "name": "Fire",
    "rating": 2000,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "id": "1096/A",
    "contestId": 1096,
    "index": "A",
    "name": "Find Divisible",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1374/E1",
    "contestId": 1374,
    "index": "E1",
    "name": "Reading Books (easy version)",
    "rating": 1600,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1974/G",
    "contestId": 1974,
    "index": "G",
    "name": "Money Buys Less Happiness Now",
    "rating": 2000,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1197/B",
    "contestId": 1197,
    "index": "B",
    "name": "Pillars",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "29/C",
    "contestId": 29,
    "index": "C",
    "name": "Mail Stamps",
    "rating": 1700,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1038/F",
    "contestId": 1038,
    "index": "F",
    "name": "Wrap Around",
    "rating": 2900,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "756/E",
    "contestId": 756,
    "index": "E",
    "name": "Byteland coins",
    "rating": 3200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "660/B",
    "contestId": 660,
    "index": "B",
    "name": "Seating On Bus",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1697/A",
    "contestId": 1697,
    "index": "A",
    "name": "Parkway Walk",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "480/E",
    "contestId": 480,
    "index": "E",
    "name": "Parking Lot",
    "rating": 2800,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "id": "166/E",
    "contestId": 166,
    "index": "E",
    "name": "Tetrahedron",
    "rating": 1500,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "id": "1436/A",
    "contestId": 1436,
    "index": "A",
    "name": "Reorder",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1286/D",
    "contestId": 1286,
    "index": "D",
    "name": "LCC",
    "rating": 3100,
    "tags": [
      "data structures",
      "math",
      "matrices",
      "probabilities"
    ]
  },
  {
    "id": "1443/B",
    "contestId": 1443,
    "index": "B",
    "name": "Saving the City",
    "rating": 1300,
    "tags": [
      "dp",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "377/C",
    "contestId": 377,
    "index": "C",
    "name": "Captains Mode",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "games"
    ]
  },
  {
    "id": "268/D",
    "contestId": 268,
    "index": "D",
    "name": "Wall Bars",
    "rating": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "120/A",
    "contestId": 120,
    "index": "A",
    "name": "Elevator",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "70/E",
    "contestId": 70,
    "index": "E",
    "name": "Information Reform",
    "rating": 2700,
    "tags": [
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "939/D",
    "contestId": 939,
    "index": "D",
    "name": "Love Rescue",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "519/A",
    "contestId": 519,
    "index": "A",
    "name": "A and B and Chess",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1195/B",
    "contestId": 1195,
    "index": "B",
    "name": "Sport Mafia",
    "rating": 1000,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "id": "176/D",
    "contestId": 176,
    "index": "D",
    "name": "Hyper String",
    "rating": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "930/C",
    "contestId": 930,
    "index": "C",
    "name": "Teodor is not a liar!",
    "rating": 1900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1082/B",
    "contestId": 1082,
    "index": "B",
    "name": "Vova and Trophies",
    "rating": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "311/B",
    "contestId": 311,
    "index": "B",
    "name": "Cats Transport",
    "rating": 2400,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "69/B",
    "contestId": 69,
    "index": "B",
    "name": "Bets",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "227/B",
    "contestId": 227,
    "index": "B",
    "name": "Effective Approach",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1476/D",
    "contestId": 1476,
    "index": "D",
    "name": "Journey",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "implementation"
    ]
  },
  {
    "id": "1181/A",
    "contestId": 1181,
    "index": "A",
    "name": "Chunga-Changa",
    "rating": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "788/E",
    "contestId": 788,
    "index": "E",
    "name": "New task",
    "rating": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "683/C",
    "contestId": 683,
    "index": "C",
    "name": "Symmetric Difference",
    "rating": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1891/A",
    "contestId": 1891,
    "index": "A",
    "name": "Sorting with Twos",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "1129/A1",
    "contestId": 1129,
    "index": "A1",
    "name": "Toy Train (Simplified)",
    "rating": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1473/D",
    "contestId": 1473,
    "index": "D",
    "name": "Program",
    "rating": 1700,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "105/D",
    "contestId": 105,
    "index": "D",
    "name": "Entertaining Geodetics",
    "rating": 2700,
    "tags": [
      "brute force",
      "dsu",
      "implementation"
    ]
  },
  {
    "id": "1519/B",
    "contestId": 1519,
    "index": "B",
    "name": "The Cake Is a Lie",
    "rating": 800,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "29/D",
    "contestId": 29,
    "index": "D",
    "name": "Ant on the Tree",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1758/D",
    "contestId": 1758,
    "index": "D",
    "name": "Range = √Sum",
    "rating": 1800,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1272/E",
    "contestId": 1272,
    "index": "E",
    "name": "Nearest Opposite Parity",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "158/A",
    "contestId": 158,
    "index": "A",
    "name": "Next Round",
    "rating": 800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1015/C",
    "contestId": 1015,
    "index": "C",
    "name": "Songs Compression",
    "rating": 1100,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "1239/B",
    "contestId": 1239,
    "index": "B",
    "name": "The World Is Just a Programming Task (Hard Version)",
    "rating": 2500,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1271/D",
    "contestId": 1271,
    "index": "D",
    "name": "Portals",
    "rating": 2100,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "518/E",
    "contestId": 518,
    "index": "E",
    "name": "Arthur and Questions",
    "rating": 2200,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "1734/E",
    "contestId": 1734,
    "index": "E",
    "name": "Rectangular Congruence",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "id": "630/K",
    "contestId": 630,
    "index": "K",
    "name": "Indivisibility",
    "rating": 1500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1538/F",
    "contestId": 1538,
    "index": "F",
    "name": "Interesting Function",
    "rating": 1500,
    "tags": [
      "binary search",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1599/A",
    "contestId": 1599,
    "index": "A",
    "name": "Weights",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1553/E",
    "contestId": 1553,
    "index": "E",
    "name": "Permutation Shift",
    "rating": 2100,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1033/A",
    "contestId": 1033,
    "index": "A",
    "name": "King Escape",
    "rating": 1000,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1329/E",
    "contestId": 1329,
    "index": "E",
    "name": "Dreamoon Loves AA",
    "rating": 3300,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "1842/F",
    "contestId": 1842,
    "index": "F",
    "name": "Tenzing and Tree",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "greedy",
      "shortest paths",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1630/C",
    "contestId": 1630,
    "index": "C",
    "name": "Paint the Middle",
    "rating": 2200,
    "tags": [
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "765/C",
    "contestId": 765,
    "index": "C",
    "name": "Table Tennis Game 2",
    "rating": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "id": "884/B",
    "contestId": 884,
    "index": "B",
    "name": "Japanese Crosswords Strike Back",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1830/D",
    "contestId": 1830,
    "index": "D",
    "name": "Mex Tree",
    "rating": 2800,
    "tags": [
      "brute force",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1034/E",
    "contestId": 1034,
    "index": "E",
    "name": "Little C Loves 3 III",
    "rating": 3200,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "id": "254/D",
    "contestId": 254,
    "index": "D",
    "name": "Rats",
    "rating": 2300,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "1707/E",
    "contestId": 1707,
    "index": "E",
    "name": "Replace",
    "rating": 3500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "757/C",
    "contestId": 757,
    "index": "C",
    "name": "Felicity is Coming!",
    "rating": 1900,
    "tags": [
      "data structures",
      "hashing",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1200/B",
    "contestId": 1200,
    "index": "B",
    "name": "Block Adventure",
    "rating": 1200,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "436/E",
    "contestId": 436,
    "index": "E",
    "name": "Cardboard Box",
    "rating": 2600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1731/D",
    "contestId": 1731,
    "index": "D",
    "name": "Valiant's New Map",
    "rating": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "1139/C",
    "contestId": 1139,
    "index": "C",
    "name": "Edgy Trees",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "id": "739/C",
    "contestId": 739,
    "index": "C",
    "name": "Alyona and towers",
    "rating": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "656/F",
    "contestId": 656,
    "index": "F",
    "name": "Ace It!",
    "rating": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "9/A",
    "contestId": 9,
    "index": "A",
    "name": "Die Roll",
    "rating": 800,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1914/B",
    "contestId": 1914,
    "index": "B",
    "name": "Preparing for the Contest",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1583/B",
    "contestId": 1583,
    "index": "B",
    "name": "Omkar and Heavenly Tree",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "id": "35/E",
    "contestId": 35,
    "index": "E",
    "name": "Parade",
    "rating": 2100,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1110/D",
    "contestId": 1110,
    "index": "D",
    "name": "Jongmah",
    "rating": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "35/D",
    "contestId": 35,
    "index": "D",
    "name": "Animals",
    "rating": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1822/C",
    "contestId": 1822,
    "index": "C",
    "name": "Bun Lover",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "421/A",
    "contestId": 421,
    "index": "A",
    "name": "Pasha and Hamsters",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1423/H",
    "contestId": 1423,
    "index": "H",
    "name": "Virus",
    "rating": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "626/C",
    "contestId": 626,
    "index": "C",
    "name": "Block Towers",
    "rating": 1600,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1499/A",
    "contestId": 1499,
    "index": "A",
    "name": "Domino on Windowsill",
    "rating": 800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1159/A",
    "contestId": 1159,
    "index": "A",
    "name": "A pile of stones",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1622/A",
    "contestId": 1622,
    "index": "A",
    "name": "Construct a Rectangle",
    "rating": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "894/A",
    "contestId": 894,
    "index": "A",
    "name": "QAQ",
    "rating": 800,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "1883/A",
    "contestId": 1883,
    "index": "A",
    "name": "Morning",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1881/D",
    "contestId": 1881,
    "index": "D",
    "name": "Divide and Equalize",
    "rating": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "45/C",
    "contestId": 45,
    "index": "C",
    "name": "Dancing Lessons",
    "rating": 1900,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1166/A",
    "contestId": 1166,
    "index": "A",
    "name": "Silent Classroom",
    "rating": 900,
    "tags": [
      "combinatorics",
      "greedy"
    ]
  },
  {
    "id": "723/D",
    "contestId": 723,
    "index": "D",
    "name": "Lakes in Berland",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1969/A",
    "contestId": 1969,
    "index": "A",
    "name": "Two Friends",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "958/C3",
    "contestId": 958,
    "index": "C3",
    "name": "Encryption (hard)",
    "rating": 2500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1974/C",
    "contestId": 1974,
    "index": "C",
    "name": "Beautiful Triple Pairs",
    "rating": 1400,
    "tags": [
      "combinatorics",
      "data structures"
    ]
  },
  {
    "id": "1873/H",
    "contestId": 1873,
    "index": "H",
    "name": "Mad City",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "games",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "477/D",
    "contestId": 477,
    "index": "D",
    "name": "Dreamoon and Binary",
    "rating": 2700,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "42/A",
    "contestId": 42,
    "index": "A",
    "name": "Guilty — to the kitchen!",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1535/D",
    "contestId": 1535,
    "index": "D",
    "name": "Playoff Tournament",
    "rating": 1800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1523/G",
    "contestId": 1523,
    "index": "G",
    "name": "Try Booking",
    "rating": 3200,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "id": "1898/C",
    "contestId": 1898,
    "index": "C",
    "name": "Colorful Grid",
    "rating": 1700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1005/D",
    "contestId": 1005,
    "index": "D",
    "name": "Polycarp and Div 3",
    "rating": 1500,
    "tags": [
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1967/B1",
    "contestId": 1967,
    "index": "B1",
    "name": "Reverse Card (Easy Version)",
    "rating": 1400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "603/C",
    "contestId": 603,
    "index": "C",
    "name": "Lieges of Legendre",
    "rating": 2200,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "614/B",
    "contestId": 614,
    "index": "B",
    "name": "Gena's Code",
    "rating": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "128/C",
    "contestId": 128,
    "index": "C",
    "name": "Games with Rectangle",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "487/B",
    "contestId": 487,
    "index": "B",
    "name": "Strip",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "359/C",
    "contestId": 359,
    "index": "C",
    "name": "Prime Number",
    "rating": 1900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1651/D",
    "contestId": 1651,
    "index": "D",
    "name": "Nearest Excluded Points",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "747/A",
    "contestId": 747,
    "index": "A",
    "name": "Display Size",
    "rating": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1210/G",
    "contestId": 1210,
    "index": "G",
    "name": "Mateusz and Escape Room",
    "rating": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1204/D2",
    "contestId": 1204,
    "index": "D2",
    "name": "Kirk and a Binary String (hard version)",
    "rating": 2100,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "1988/B",
    "contestId": 1988,
    "index": "B",
    "name": "Make Majority",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1949/G",
    "contestId": 1949,
    "index": "G",
    "name": "Scooter",
    "rating": 2300,
    "tags": [
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "115/A",
    "contestId": 115,
    "index": "A",
    "name": "Party",
    "rating": 900,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "107/D",
    "contestId": 107,
    "index": "D",
    "name": "Crime Management",
    "rating": 2400,
    "tags": [
      "dp",
      "graphs",
      "matrices"
    ]
  },
  {
    "id": "1834/B",
    "contestId": 1834,
    "index": "B",
    "name": "Maximum Strength",
    "rating": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "457/E",
    "contestId": 457,
    "index": "E",
    "name": "Flow Optimality",
    "rating": 3000,
    "tags": [
      "constructive algorithms",
      "flows",
      "math"
    ]
  },
  {
    "id": "1969/C",
    "contestId": 1969,
    "index": "C",
    "name": "Minimizing the Sum",
    "rating": 1700,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "416/D",
    "contestId": 416,
    "index": "D",
    "name": "Population Size",
    "rating": 2400,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1919/D",
    "contestId": 1919,
    "index": "D",
    "name": "01 Tree",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "268/A",
    "contestId": 268,
    "index": "A",
    "name": "Games",
    "rating": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "51/C",
    "contestId": 51,
    "index": "C",
    "name": "Three Base Stations",
    "rating": 1800,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "1728/A",
    "contestId": 1728,
    "index": "A",
    "name": "Colored Balls: Revisited",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "915/A",
    "contestId": 915,
    "index": "A",
    "name": "Garden",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1492/C",
    "contestId": 1492,
    "index": "C",
    "name": "Maximum width",
    "rating": 1500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1139/F",
    "contestId": 1139,
    "index": "F",
    "name": "Dish Shopping",
    "rating": 2500,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "id": "1992/D",
    "contestId": 1992,
    "index": "D",
    "name": "Test of Love",
    "rating": 1200,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "460/E",
    "contestId": 460,
    "index": "E",
    "name": "Roland and Rose",
    "rating": 2700,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1778/C",
    "contestId": 1778,
    "index": "C",
    "name": "Flexible String",
    "rating": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "strings"
    ]
  },
  {
    "id": "40/A",
    "contestId": 40,
    "index": "A",
    "name": "Find Color",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1677/B",
    "contestId": 1677,
    "index": "B",
    "name": "Tokitsukaze and Meeting",
    "rating": 1700,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1720/B",
    "contestId": 1720,
    "index": "B",
    "name": "Interesting Sum",
    "rating": 800,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "435/A",
    "contestId": 435,
    "index": "A",
    "name": "Queue on Bus Stop",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "8/A",
    "contestId": 8,
    "index": "A",
    "name": "Train and Peter",
    "rating": 1200,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "1574/E",
    "contestId": 1574,
    "index": "E",
    "name": "Coloring",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "918/B",
    "contestId": 918,
    "index": "B",
    "name": "Radio Station",
    "rating": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1913/A",
    "contestId": 1913,
    "index": "A",
    "name": "Rating Increase",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "217/C",
    "contestId": 217,
    "index": "C",
    "name": "Formurosa",
    "rating": 2600,
    "tags": [
      "divide and conquer",
      "dp",
      "expression parsing"
    ]
  },
  {
    "id": "753/A",
    "contestId": 753,
    "index": "A",
    "name": "Santa Claus and Candies",
    "rating": 1000,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "643/G",
    "contestId": 643,
    "index": "G",
    "name": "Choosing Ads",
    "rating": 3200,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "765/D",
    "contestId": 765,
    "index": "D",
    "name": "Artsem and Saunders",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "dsu",
      "math"
    ]
  },
  {
    "id": "1343/D",
    "contestId": 1343,
    "index": "D",
    "name": "Constant Palindrome Sum",
    "rating": 1700,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1296/D",
    "contestId": 1296,
    "index": "D",
    "name": "Fight with Monsters",
    "rating": 1500,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1842/B",
    "contestId": 1842,
    "index": "B",
    "name": "Tenzing and Books",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "id": "762/A",
    "contestId": 762,
    "index": "A",
    "name": "k-th divisor",
    "rating": 1400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1819/D",
    "contestId": 1819,
    "index": "D",
    "name": "Misha and Apples",
    "rating": 2800,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "1712/D",
    "contestId": 1712,
    "index": "D",
    "name": "Empty Graph",
    "rating": 2000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "1097/F",
    "contestId": 1097,
    "index": "F",
    "name": "Alex and a TV Show",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "id": "1005/E2",
    "contestId": 1005,
    "index": "E2",
    "name": "Median on Segments (General Case Edition)",
    "rating": 2400,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "779/A",
    "contestId": 779,
    "index": "A",
    "name": "Pupils Redistribution",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "993/E",
    "contestId": 993,
    "index": "E",
    "name": "Nikita and Order Statistics",
    "rating": 2300,
    "tags": [
      "chinese remainder theorem",
      "fft",
      "math"
    ]
  },
  {
    "id": "1387/B1",
    "contestId": 1387,
    "index": "B1",
    "name": "Village (Minimum)",
    "rating": 2100,
    "tags": [
      "*special",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "741/D",
    "contestId": 741,
    "index": "D",
    "name": "Arpa’s letter-marked tree and Mehrdad’s Dokhtar-kosh paths",
    "rating": 2900,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "453/A",
    "contestId": 453,
    "index": "A",
    "name": "Little Pony and Expected Maximum",
    "rating": 1600,
    "tags": [
      "probabilities"
    ]
  },
  {
    "id": "51/B",
    "contestId": 51,
    "index": "B",
    "name": "bHTML Tables Analisys",
    "rating": 1700,
    "tags": [
      "expression parsing"
    ]
  },
  {
    "id": "1731/F",
    "contestId": 1731,
    "index": "F",
    "name": "Function Sum",
    "rating": 2500,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "1175/C",
    "contestId": 1175,
    "index": "C",
    "name": "Electrification",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "468/C",
    "contestId": 468,
    "index": "C",
    "name": "Hack it!",
    "rating": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "988/A",
    "contestId": 988,
    "index": "A",
    "name": "Diverse Team",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "757/E",
    "contestId": 757,
    "index": "E",
    "name": "Bash Plays with Functions",
    "rating": 2500,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "id": "868/A",
    "contestId": 868,
    "index": "A",
    "name": "Bark to Unlock",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1205/A",
    "contestId": 1205,
    "index": "A",
    "name": "Almost Equal",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1567/F",
    "contestId": 1567,
    "index": "F",
    "name": "One-Four Overload",
    "rating": 2700,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "946/D",
    "contestId": 946,
    "index": "D",
    "name": "Timetable",
    "rating": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1715/D",
    "contestId": 1715,
    "index": "D",
    "name": "2+ doors",
    "rating": 1900,
    "tags": [
      "2-sat",
      "bitmasks",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1739/E",
    "contestId": 1739,
    "index": "E",
    "name": "Cleaning Robot",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1610/F",
    "contestId": 1610,
    "index": "F",
    "name": "Mashtali: a Space Oddysey",
    "rating": 3000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1244/C",
    "contestId": 1244,
    "index": "C",
    "name": "The Football Season",
    "rating": 2000,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "869/C",
    "contestId": 869,
    "index": "C",
    "name": "The Intriguing Obsession",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "914/B",
    "contestId": 914,
    "index": "B",
    "name": "Conan and Agasa play a Card Game",
    "rating": 1200,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "76/C",
    "contestId": 76,
    "index": "C",
    "name": "Mutation",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "id": "750/B",
    "contestId": 750,
    "index": "B",
    "name": "New Year and North Pole",
    "rating": 1300,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "297/B",
    "contestId": 297,
    "index": "B",
    "name": "Fish Weight",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "142/E",
    "contestId": 142,
    "index": "E",
    "name": "Help Greg the Dwarf 2",
    "rating": 3000,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1036/E",
    "contestId": 1036,
    "index": "E",
    "name": "Covered Points",
    "rating": 2400,
    "tags": [
      "fft",
      "geometry",
      "number theory"
    ]
  },
  {
    "id": "67/C",
    "contestId": 67,
    "index": "C",
    "name": "Sequence of Balls",
    "rating": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "46/A",
    "contestId": 46,
    "index": "A",
    "name": "Ball Game",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "808/E",
    "contestId": 808,
    "index": "E",
    "name": "Selling Souvenirs",
    "rating": 2300,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "ternary search"
    ]
  },
  {
    "id": "1099/F",
    "contestId": 1099,
    "index": "F",
    "name": "Cookies",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "games",
      "trees"
    ]
  },
  {
    "id": "835/C",
    "contestId": 835,
    "index": "C",
    "name": "Star sky",
    "rating": 1600,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1219/G",
    "contestId": 1219,
    "index": "G",
    "name": "Harvester",
    "rating": 2000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1154/G",
    "contestId": 1154,
    "index": "G",
    "name": "Minimum Possible LCM",
    "rating": 2200,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "68/B",
    "contestId": 68,
    "index": "B",
    "name": "Energy exchange",
    "rating": 1600,
    "tags": [
      "binary search"
    ]
  },
  {
    "id": "996/B",
    "contestId": 996,
    "index": "B",
    "name": "World Cup",
    "rating": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "1210/D",
    "contestId": 1210,
    "index": "D",
    "name": "Konrad and Company Evaluation",
    "rating": 2400,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "1117/C",
    "contestId": 1117,
    "index": "C",
    "name": "Magic Ship",
    "rating": 1900,
    "tags": [
      "binary search"
    ]
  },
  {
    "id": "382/A",
    "contestId": 382,
    "index": "A",
    "name": "Ksenia and Pan Scales",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1451/A",
    "contestId": 1451,
    "index": "A",
    "name": "Subtract or Divide",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1343/B",
    "contestId": 1343,
    "index": "B",
    "name": "Balanced Array",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1534/G",
    "contestId": 1534,
    "index": "G",
    "name": "A New Beginning",
    "rating": 3300,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "339/A",
    "contestId": 339,
    "index": "A",
    "name": "Helpful Maths",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "525/B",
    "contestId": 525,
    "index": "B",
    "name": "Pasha and String",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "1816/A",
    "contestId": 1816,
    "index": "A",
    "name": "Ian Visits Mary",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "geometry",
      "number theory"
    ]
  },
  {
    "id": "279/D",
    "contestId": 279,
    "index": "D",
    "name": "The Minimum Number of Variables",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "755/G",
    "contestId": 755,
    "index": "G",
    "name": "PolandBall and Many Other Balls",
    "rating": 3200,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "id": "997/C",
    "contestId": 997,
    "index": "C",
    "name": "Sky Full of Stars",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "295/D",
    "contestId": 295,
    "index": "D",
    "name": "Greg and Caves",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1260/D",
    "contestId": 1260,
    "index": "D",
    "name": "A Game with Traps",
    "rating": 1900,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1669/C",
    "contestId": 1669,
    "index": "C",
    "name": "Odd/Even Increments",
    "rating": 800,
    "tags": [
      "greedy",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1388/D",
    "contestId": 1388,
    "index": "D",
    "name": "Captain Flint and Treasure",
    "rating": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1845/D",
    "contestId": 1845,
    "index": "D",
    "name": "Rating System",
    "rating": 1800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "501/C",
    "contestId": 501,
    "index": "C",
    "name": "Misha and Forest",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "442/B",
    "contestId": 442,
    "index": "B",
    "name": "Andrey and Problem",
    "rating": 1800,
    "tags": [
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "150/A",
    "contestId": 150,
    "index": "A",
    "name": "Win or Freeze",
    "rating": 1400,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1789/E",
    "contestId": 1789,
    "index": "E",
    "name": "Serval and Music Game",
    "rating": 2500,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "14/C",
    "contestId": 14,
    "index": "C",
    "name": "Four Segments",
    "rating": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "289/B",
    "contestId": 289,
    "index": "B",
    "name": "Polo the Penguin and Matrix",
    "rating": 1400,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "sortings",
      "ternary search"
    ]
  },
  {
    "id": "95/D",
    "contestId": 95,
    "index": "D",
    "name": "Horse Races",
    "rating": 2500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1117/B",
    "contestId": 1117,
    "index": "B",
    "name": "Emotes",
    "rating": 1000,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "134/A",
    "contestId": 134,
    "index": "A",
    "name": "Average Numbers",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1726/B",
    "contestId": 1726,
    "index": "B",
    "name": "Mainak and Interesting Sequence",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "38/D",
    "contestId": 38,
    "index": "D",
    "name": "Vasya the Architect",
    "rating": 1900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "587/F",
    "contestId": 587,
    "index": "F",
    "name": "Duff is Mad",
    "rating": 3000,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "id": "1101/E",
    "contestId": 1101,
    "index": "E",
    "name": "Polycarp's New Job",
    "rating": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "401/A",
    "contestId": 401,
    "index": "A",
    "name": "Vanya and Cards",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1431/B",
    "contestId": 1431,
    "index": "B",
    "name": "Polycarp and the Language of Gods",
    "rating": 1400,
    "tags": [
      "*special",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1753/A1",
    "contestId": 1753,
    "index": "A1",
    "name": "Make Nonzero Sum (easy version)",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1335/C",
    "contestId": 1335,
    "index": "C",
    "name": "Two Teams Composing",
    "rating": 1100,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "244/B",
    "contestId": 244,
    "index": "B",
    "name": "Undoubtedly Lucky Numbers",
    "rating": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "id": "1748/F",
    "contestId": 1748,
    "index": "F",
    "name": "Circular Xor Reversal",
    "rating": 3000,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "id": "577/B",
    "contestId": 577,
    "index": "B",
    "name": "Modulo Sum",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "1326/D1",
    "contestId": 1326,
    "index": "D1",
    "name": "Prefix-Suffix Palindrome (Easy version)",
    "rating": 1500,
    "tags": [
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "730/E",
    "contestId": 730,
    "index": "E",
    "name": "Award Ceremony",
    "rating": 2200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1207/A",
    "contestId": 1207,
    "index": "A",
    "name": "There Are Two Types Of Burgers",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "467/D",
    "contestId": 467,
    "index": "D",
    "name": "Fedor and Essay",
    "rating": 2400,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1500/E",
    "contestId": 1500,
    "index": "E",
    "name": "Subset Trick",
    "rating": 3300,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "128/A",
    "contestId": 128,
    "index": "A",
    "name": "Statues",
    "rating": 1500,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "id": "201/A",
    "contestId": 201,
    "index": "A",
    "name": "Clear Symmetry",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "id": "804/E",
    "contestId": 804,
    "index": "E",
    "name": "The same permutation",
    "rating": 3100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1802/A",
    "contestId": 1802,
    "index": "A",
    "name": "Likes",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1575/F",
    "contestId": 1575,
    "index": "F",
    "name": "Finding Expected Value",
    "rating": 2900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "708/A",
    "contestId": 708,
    "index": "A",
    "name": "Letters Cyclic Shift",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1949/F",
    "contestId": 1949,
    "index": "F",
    "name": "Dating",
    "rating": 2200,
    "tags": [
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1146/E",
    "contestId": 1146,
    "index": "E",
    "name": "Hot is Cold",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "id": "1918/B",
    "contestId": 1918,
    "index": "B",
    "name": "Minimize Inversions",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1451/D",
    "contestId": 1451,
    "index": "D",
    "name": "Circle Game",
    "rating": 1700,
    "tags": [
      "games",
      "geometry",
      "math"
    ]
  },
  {
    "id": "75/E",
    "contestId": 75,
    "index": "E",
    "name": "Ship's Shortest Path",
    "rating": 2400,
    "tags": [
      "geometry",
      "shortest paths"
    ]
  },
  {
    "id": "1674/D",
    "contestId": 1674,
    "index": "D",
    "name": "A-B-C Sort",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "537/C",
    "contestId": 537,
    "index": "C",
    "name": "Tourist's Notes",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1253/C",
    "contestId": 1253,
    "index": "C",
    "name": "Sweets Eating",
    "rating": 1500,
    "tags": [
      "dp",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "665/E",
    "contestId": 665,
    "index": "E",
    "name": "Beautiful Subarrays",
    "rating": 2100,
    "tags": [
      "data structures",
      "divide and conquer",
      "strings",
      "trees"
    ]
  },
  {
    "id": "407/A",
    "contestId": 407,
    "index": "A",
    "name": "Triangle",
    "rating": 1600,
    "tags": [
      "brute force",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1794/E",
    "contestId": 1794,
    "index": "E",
    "name": "Labeling the Tree with Distances",
    "rating": 2400,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "hashing",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1530/B",
    "contestId": 1530,
    "index": "B",
    "name": "Putting Plates",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1942/G",
    "contestId": 1942,
    "index": "G",
    "name": "Bessie and Cards",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "360/C",
    "contestId": 360,
    "index": "C",
    "name": "Levko and Strings",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1899/C",
    "contestId": 1899,
    "index": "C",
    "name": "Yarik and Array",
    "rating": 1100,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "914/E",
    "contestId": 914,
    "index": "E",
    "name": "Palindromes in a Tree",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "id": "247/E",
    "contestId": 247,
    "index": "E",
    "name": "Mad Joe",
    "rating": 2000,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1779/B",
    "contestId": 1779,
    "index": "B",
    "name": "MKnez's ConstructiveForces Task",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "924/A",
    "contestId": 924,
    "index": "A",
    "name": "Mystical Mosaic",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1759/A",
    "contestId": 1759,
    "index": "A",
    "name": "Yes-Yes?",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "878/E",
    "contestId": 878,
    "index": "E",
    "name": "Numbers on the blackboard",
    "rating": 3300,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "688/B",
    "contestId": 688,
    "index": "B",
    "name": "Lovely Palindromes",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1736/C1",
    "contestId": 1736,
    "index": "C1",
    "name": "Good Subarrays (Easy Version)",
    "rating": 1300,
    "tags": [
      "binary search",
      "data structures",
      "schedules",
      "two pointers"
    ]
  },
  {
    "id": "145/C",
    "contestId": 145,
    "index": "C",
    "name": "Lucky Subsequence",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "158/D",
    "contestId": 158,
    "index": "D",
    "name": "Ice Sculptures",
    "rating": 1300,
    "tags": [
      "*special",
      "brute force",
      "number theory"
    ]
  },
  {
    "id": "763/C",
    "contestId": 763,
    "index": "C",
    "name": "Timofey and remoduling",
    "rating": 2600,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1830/B",
    "contestId": 1830,
    "index": "B",
    "name": "The BOSS Can Count Pairs",
    "rating": 2000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "615/B",
    "contestId": 615,
    "index": "B",
    "name": "Longtail Hedgehog",
    "rating": 1600,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1702/G1",
    "contestId": 1702,
    "index": "G1",
    "name": "Passable Paths (easy version)",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1847/B",
    "contestId": 1847,
    "index": "B",
    "name": "Hamon Odyssey",
    "rating": 1000,
    "tags": [
      "bitmasks",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "784/E",
    "contestId": 784,
    "index": "E",
    "name": "Twisted Circuit",
    "rating": 2000,
    "tags": [
      "*special",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1652/B",
    "contestId": 1652,
    "index": "B",
    "name": "Prefix Removals",
    "rating": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "1389/C",
    "contestId": 1389,
    "index": "C",
    "name": "Good String",
    "rating": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1354/B",
    "contestId": 1354,
    "index": "B",
    "name": "Ternary String",
    "rating": 1200,
    "tags": [
      "binary search",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1381/B",
    "contestId": 1381,
    "index": "B",
    "name": "Unmerge",
    "rating": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1091/H",
    "contestId": 1091,
    "index": "H",
    "name": "New Year and the Tricolore Recreation",
    "rating": 3200,
    "tags": [
      "games"
    ]
  },
  {
    "id": "1691/C",
    "contestId": 1691,
    "index": "C",
    "name": "Sum of Substrings",
    "rating": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "1103/D",
    "contestId": 1103,
    "index": "D",
    "name": "Professional layer",
    "rating": 3100,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "455/B",
    "contestId": 455,
    "index": "B",
    "name": "A Lot of Games",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "implementation",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1253/F",
    "contestId": 1253,
    "index": "F",
    "name": "Cheap Robot",
    "rating": 2500,
    "tags": [
      "binary search",
      "dsu",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "1896/A",
    "contestId": 1896,
    "index": "A",
    "name": "Jagged Swaps",
    "rating": 800,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "960/F",
    "contestId": 960,
    "index": "F",
    "name": "Pathwalks",
    "rating": 2100,
    "tags": [
      "data structures",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1054/B",
    "contestId": 1054,
    "index": "B",
    "name": "Appending Mex",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1101/A",
    "contestId": 1101,
    "index": "A",
    "name": "Minimum Integer",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1009/G",
    "contestId": 1009,
    "index": "G",
    "name": "Allowed Letters",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "flows",
      "graph matchings",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1326/F1",
    "contestId": 1326,
    "index": "F1",
    "name": "Wise Men (Easy Version)",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "451/A",
    "contestId": 451,
    "index": "A",
    "name": "Game With Sticks",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "630/D",
    "contestId": 630,
    "index": "D",
    "name": "Hexagons!",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1750/G",
    "contestId": 1750,
    "index": "G",
    "name": "Doping",
    "rating": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1710/E",
    "contestId": 1710,
    "index": "E",
    "name": "Two Arrays",
    "rating": 2400,
    "tags": [
      "binary search",
      "games",
      "graph matchings"
    ]
  },
  {
    "id": "1673/E",
    "contestId": 1673,
    "index": "E",
    "name": "Power or XOR?",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1854/C",
    "contestId": 1854,
    "index": "C",
    "name": "Expected Destruction",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "544/A",
    "contestId": 544,
    "index": "A",
    "name": "Set of Strings",
    "rating": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "34/A",
    "contestId": 34,
    "index": "A",
    "name": "Reconnaissance 2",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1770/G",
    "contestId": 1770,
    "index": "G",
    "name": "Koxia and Bracket",
    "rating": 3400,
    "tags": [
      "divide and conquer",
      "fft",
      "math"
    ]
  },
  {
    "id": "678/C",
    "contestId": 678,
    "index": "C",
    "name": "Joty and Chocolate",
    "rating": 1600,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "615/C",
    "contestId": 615,
    "index": "C",
    "name": "Running Track",
    "rating": 2000,
    "tags": [
      "dp",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1307/E",
    "contestId": 1307,
    "index": "E",
    "name": "Cow and Treats",
    "rating": 2500,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "165/E",
    "contestId": 165,
    "index": "E",
    "name": "Compatible Numbers",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "id": "1692/A",
    "contestId": 1692,
    "index": "A",
    "name": "Marathon",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1242/E",
    "contestId": 1242,
    "index": "E",
    "name": "Planar Perimeter",
    "rating": 3200,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "43/E",
    "contestId": 43,
    "index": "E",
    "name": "Race",
    "rating": 2300,
    "tags": [
      "brute force",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1523/D",
    "contestId": 1523,
    "index": "D",
    "name": "Love-Hate",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "467/A",
    "contestId": 467,
    "index": "A",
    "name": "George and Accommodation",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1474/B",
    "contestId": 1474,
    "index": "B",
    "name": "Different Divisors",
    "rating": 1000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1906/D",
    "contestId": 1906,
    "index": "D",
    "name": "Spaceship Exploration",
    "rating": 2800,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "id": "677/D",
    "contestId": 677,
    "index": "D",
    "name": "Vanya and Treasure",
    "rating": 2300,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1970/G1",
    "contestId": 1970,
    "index": "G1",
    "name": "Min-Fund Prison (Easy)",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "846/C",
    "contestId": 846,
    "index": "C",
    "name": "Four Segments",
    "rating": 1800,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "15/D",
    "contestId": 15,
    "index": "D",
    "name": "Map",
    "rating": 2500,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "837/D",
    "contestId": 837,
    "index": "D",
    "name": "Round Subset",
    "rating": 2100,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "714/B",
    "contestId": 714,
    "index": "B",
    "name": "Filya and Homework",
    "rating": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "449/D",
    "contestId": 449,
    "index": "D",
    "name": "Jzzhu and Numbers",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1978/E",
    "contestId": 1978,
    "index": "E",
    "name": "Computing Machine",
    "rating": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1901/D",
    "contestId": 1901,
    "index": "D",
    "name": "Yet Another Monster Fight",
    "rating": 1700,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "567/F",
    "contestId": 567,
    "index": "F",
    "name": "Mausoleum",
    "rating": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "930/D",
    "contestId": 930,
    "index": "D",
    "name": "Game with Tokens",
    "rating": 2500,
    "tags": [
      "data structures",
      "games",
      "implementation"
    ]
  },
  {
    "id": "1781/C",
    "contestId": 1781,
    "index": "C",
    "name": "Equal Frequencies",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "231/B",
    "contestId": 231,
    "index": "B",
    "name": "Magic, Wizardry and Wonders",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1209/E1",
    "contestId": 1209,
    "index": "E1",
    "name": "Rotate Columns (easy version)",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "702/B",
    "contestId": 702,
    "index": "B",
    "name": "Powers of Two",
    "rating": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "id": "61/C",
    "contestId": 61,
    "index": "C",
    "name": "Capture Valerian",
    "rating": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "469/B",
    "contestId": 469,
    "index": "B",
    "name": "Chat Online",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "97/D",
    "contestId": 97,
    "index": "D",
    "name": "Robot in Basement",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1467/A",
    "contestId": 1467,
    "index": "A",
    "name": "Wizard of Orz",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1282/A",
    "contestId": 1282,
    "index": "A",
    "name": "Temporarily unavailable",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1198/D",
    "contestId": 1198,
    "index": "D",
    "name": "Rectangle Painting 1",
    "rating": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1615/F",
    "contestId": 1615,
    "index": "F",
    "name": "LEGOndary Grandmaster",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1567/D",
    "contestId": 1567,
    "index": "D",
    "name": "Expression Evaluation Error",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "316/B1",
    "contestId": 316,
    "index": "B1",
    "name": "EKG",
    "rating": 1500,
    "tags": [
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "id": "1650/A",
    "contestId": 1650,
    "index": "A",
    "name": "Deletions of Two Adjacent Letters",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "818/C",
    "contestId": 818,
    "index": "C",
    "name": "Sofa Thief",
    "rating": 2000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1305/C",
    "contestId": 1305,
    "index": "C",
    "name": "Kuroni and Impossible Calculation",
    "rating": 1600,
    "tags": [
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "485/A",
    "contestId": 485,
    "index": "A",
    "name": "Factory",
    "rating": 1400,
    "tags": [
      "implementation",
      "math",
      "matrices"
    ]
  },
  {
    "id": "1687/F",
    "contestId": 1687,
    "index": "F",
    "name": "Koishi's Unconscious Permutation",
    "rating": 3500,
    "tags": [
      "fft",
      "math"
    ]
  },
  {
    "id": "451/B",
    "contestId": 451,
    "index": "B",
    "name": "Sort the Array",
    "rating": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "556/B",
    "contestId": 556,
    "index": "B",
    "name": "Case of Fake Numbers",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1792/B",
    "contestId": 1792,
    "index": "B",
    "name": "Stand-up Comedian",
    "rating": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1473/F",
    "contestId": 1473,
    "index": "F",
    "name": "Strange Set",
    "rating": 2700,
    "tags": [
      "flows",
      "math"
    ]
  },
  {
    "id": "934/A",
    "contestId": 934,
    "index": "A",
    "name": "A Compatible Pair",
    "rating": 1400,
    "tags": [
      "brute force",
      "games"
    ]
  },
  {
    "id": "446/A",
    "contestId": 446,
    "index": "A",
    "name": "DZY Loves Sequences",
    "rating": 1600,
    "tags": [
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1339/A",
    "contestId": 1339,
    "index": "A",
    "name": "Filling Diamonds",
    "rating": 900,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "550/D",
    "contestId": 550,
    "index": "D",
    "name": "Regular Bridge",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "228/B",
    "contestId": 228,
    "index": "B",
    "name": "Two Tables",
    "rating": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1419/C",
    "contestId": 1419,
    "index": "C",
    "name": "Killjoy",
    "rating": 1500,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "873/B",
    "contestId": 873,
    "index": "B",
    "name": "Balanced Substring",
    "rating": 1500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1580/A",
    "contestId": 1580,
    "index": "A",
    "name": "Portal",
    "rating": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1065/A",
    "contestId": 1065,
    "index": "A",
    "name": "Vasya and Chocolate",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "232/D",
    "contestId": 232,
    "index": "D",
    "name": "Fence",
    "rating": 2900,
    "tags": [
      "binary search",
      "data structures",
      "string suffix structures"
    ]
  },
  {
    "id": "1540/A",
    "contestId": 1540,
    "index": "A",
    "name": "Great Graphs",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "767/B",
    "contestId": 767,
    "index": "B",
    "name": "The Queue",
    "rating": 2100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "769/D",
    "contestId": 769,
    "index": "D",
    "name": "k-Interesting Pairs Of Integers",
    "rating": 1700,
    "tags": [
      "*special",
      "bitmasks",
      "brute force",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "190/C",
    "contestId": 190,
    "index": "C",
    "name": "STL",
    "rating": 1500,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "id": "518/A",
    "contestId": 518,
    "index": "A",
    "name": "Vitaly and Strings",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "1199/A",
    "contestId": 1199,
    "index": "A",
    "name": "City Day",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "454/B",
    "contestId": 454,
    "index": "B",
    "name": "Little Pony and Sort by Shift",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1479/C",
    "contestId": 1479,
    "index": "C",
    "name": "Continuous City",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "id": "914/F",
    "contestId": 914,
    "index": "F",
    "name": "Substrings in a String",
    "rating": 3000,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1202/C",
    "contestId": 1202,
    "index": "C",
    "name": "You Are Given a WASD-string...",
    "rating": 2100,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "id": "590/D",
    "contestId": 590,
    "index": "D",
    "name": "Top Secret Task",
    "rating": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "217/A",
    "contestId": 217,
    "index": "A",
    "name": "Ice Skating",
    "rating": 1200,
    "tags": [
      "brute force",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1992/B",
    "contestId": 1992,
    "index": "B",
    "name": "Angry Monk",
    "rating": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1185/A",
    "contestId": 1185,
    "index": "A",
    "name": "Ropewalkers",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "437/B",
    "contestId": 437,
    "index": "B",
    "name": "The Child and Set",
    "rating": 1500,
    "tags": [
      "bitmasks",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1279/F",
    "contestId": 1279,
    "index": "F",
    "name": "New Year and Handle Change",
    "rating": 2800,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "809/C",
    "contestId": 809,
    "index": "C",
    "name": "Find a car",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "402/B",
    "contestId": 402,
    "index": "B",
    "name": "Trees in a Row",
    "rating": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1054/C",
    "contestId": 1054,
    "index": "C",
    "name": "Candies Distribution",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "855/C",
    "contestId": 855,
    "index": "C",
    "name": "Helga Hufflepuff's Cup",
    "rating": 2000,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "1907/A",
    "contestId": 1907,
    "index": "A",
    "name": "Rook",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "554/A",
    "contestId": 554,
    "index": "A",
    "name": "Kyoya and Photobooks",
    "rating": 900,
    "tags": [
      "brute force",
      "math",
      "strings"
    ]
  },
  {
    "id": "1073/B",
    "contestId": 1073,
    "index": "B",
    "name": "Vasya and Books",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1530/A",
    "contestId": 1530,
    "index": "A",
    "name": "Binary Decimal",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1137/C",
    "contestId": 1137,
    "index": "C",
    "name": "Museums Tour",
    "rating": 2500,
    "tags": [
      "dp",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "979/A",
    "contestId": 979,
    "index": "A",
    "name": "Pizza, Pizza, Pizza!!!",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1223/C",
    "contestId": 1223,
    "index": "C",
    "name": "Save the Nature",
    "rating": 1600,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "49/A",
    "contestId": 49,
    "index": "A",
    "name": "Sleuth",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1744/E1",
    "contestId": 1744,
    "index": "E1",
    "name": "Divisible Numbers (easy version)",
    "rating": 1500,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1197/D",
    "contestId": 1197,
    "index": "D",
    "name": "Yet Another Subarray Problem",
    "rating": 1900,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "961/D",
    "contestId": 961,
    "index": "D",
    "name": "Pair Of Lines",
    "rating": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1761/C",
    "contestId": 1761,
    "index": "C",
    "name": "Set Construction",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1553/F",
    "contestId": 1553,
    "index": "F",
    "name": "Pairwise Modulo",
    "rating": 2300,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "id": "1878/F",
    "contestId": 1878,
    "index": "F",
    "name": "Vasilije Loves Number Theory",
    "rating": 1900,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1358/E",
    "contestId": 1358,
    "index": "E",
    "name": "Are You Fired?",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1569/A",
    "contestId": 1569,
    "index": "A",
    "name": "Balanced Substring",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "982/C",
    "contestId": 982,
    "index": "C",
    "name": "Cut 'em all!",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "616/E",
    "contestId": 616,
    "index": "E",
    "name": "Sum of Remainders",
    "rating": 2200,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1691/A",
    "contestId": 1691,
    "index": "A",
    "name": "Beat The Odds",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1986/G1",
    "contestId": 1986,
    "index": "G1",
    "name": "Permutation Problem (Simple Version)",
    "rating": 2200,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1198/B",
    "contestId": 1198,
    "index": "B",
    "name": "Welfare State",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "93/B",
    "contestId": 93,
    "index": "B",
    "name": "End of Exams",
    "rating": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "855/B",
    "contestId": 855,
    "index": "B",
    "name": "Marvolo Gaunt's Ring",
    "rating": 1500,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "44/E",
    "contestId": 44,
    "index": "E",
    "name": "Anfisa the Monkey",
    "rating": 1400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "120/H",
    "contestId": 120,
    "index": "H",
    "name": "Brevity is Soul of Wit",
    "rating": 1800,
    "tags": [
      "graph matchings"
    ]
  },
  {
    "id": "1658/A",
    "contestId": 1658,
    "index": "A",
    "name": "Marin and Photoshoot",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "109/D",
    "contestId": 109,
    "index": "D",
    "name": "Lucky Sorting",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "11/B",
    "contestId": 11,
    "index": "B",
    "name": "Jumping Jack",
    "rating": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1480/B",
    "contestId": 1480,
    "index": "B",
    "name": "The Great Hero",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "762/E",
    "contestId": 762,
    "index": "E",
    "name": "Radio stations",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "282/D",
    "contestId": 282,
    "index": "D",
    "name": "Yet Another Number Game",
    "rating": 2100,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "id": "1408/D",
    "contestId": 1408,
    "index": "D",
    "name": "Searchlights",
    "rating": 2000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "645/C",
    "contestId": 645,
    "index": "C",
    "name": "Enduring Exodus",
    "rating": 1600,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "id": "1312/F",
    "contestId": 1312,
    "index": "F",
    "name": "Attack on Red Kingdom",
    "rating": 2500,
    "tags": [
      "games",
      "two pointers"
    ]
  },
  {
    "id": "617/C",
    "contestId": 617,
    "index": "C",
    "name": "Watering Flowers",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1310/D",
    "contestId": 1310,
    "index": "D",
    "name": "Tourism",
    "rating": 2300,
    "tags": [
      "dp",
      "graphs",
      "probabilities"
    ]
  },
  {
    "id": "1650/E",
    "contestId": 1650,
    "index": "E",
    "name": "Rescheduling the Exam",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1605/D",
    "contestId": 1605,
    "index": "D",
    "name": "Treelabeling",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "games",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1093/D",
    "contestId": 1093,
    "index": "D",
    "name": "Beautiful Graph",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "139/A",
    "contestId": 139,
    "index": "A",
    "name": "Petr and Book",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1660/E",
    "contestId": 1660,
    "index": "E",
    "name": "Matrix and Shifts",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1830/C",
    "contestId": 1830,
    "index": "C",
    "name": "Hyperregular Bracket Strings",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "greedy",
      "hashing",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "1453/B",
    "contestId": 1453,
    "index": "B",
    "name": "Suffix Operations",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1620/B",
    "contestId": 1620,
    "index": "B",
    "name": "Triangles on a Rectangle",
    "rating": 1000,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1735/C",
    "contestId": 1735,
    "index": "C",
    "name": "Phase Shift",
    "rating": 1400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1691/F",
    "contestId": 1691,
    "index": "F",
    "name": "K-Set Tree",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "1421/D",
    "contestId": 1421,
    "index": "D",
    "name": "Hexagons",
    "rating": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "shortest paths"
    ]
  },
  {
    "id": "1355/D",
    "contestId": 1355,
    "index": "D",
    "name": "Game With Array",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "689/B",
    "contestId": 689,
    "index": "B",
    "name": "Mike and Shortcuts",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "1561/A",
    "contestId": 1561,
    "index": "A",
    "name": "Simply Strange Sort",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1526/B",
    "contestId": 1526,
    "index": "B",
    "name": "I Hate 1111",
    "rating": 1400,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1696/B",
    "contestId": 1696,
    "index": "B",
    "name": "NIT Destroys the Universe",
    "rating": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "847/E",
    "contestId": 847,
    "index": "E",
    "name": "Packmen",
    "rating": 1800,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "1228/A",
    "contestId": 1228,
    "index": "A",
    "name": "Distinct Digits",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1443/E",
    "contestId": 1443,
    "index": "E",
    "name": "Long Permutation",
    "rating": 2400,
    "tags": [
      "brute force",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1219/C",
    "contestId": 1219,
    "index": "C",
    "name": "Periodic integer number",
    "rating": 1700,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "725/E",
    "contestId": 725,
    "index": "E",
    "name": "Too Much Money",
    "rating": 2600,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "696/A",
    "contestId": 696,
    "index": "A",
    "name": "Lorenzo Von Matterhorn",
    "rating": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1282/E",
    "contestId": 1282,
    "index": "E",
    "name": "The Cake Is a Lie",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "173/A",
    "contestId": 173,
    "index": "A",
    "name": "Rock-Paper-Scissors",
    "rating": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "682/E",
    "contestId": 682,
    "index": "E",
    "name": "Alyona and Triangles",
    "rating": 2600,
    "tags": [
      "geometry",
      "two pointers"
    ]
  },
  {
    "id": "758/E",
    "contestId": 758,
    "index": "E",
    "name": "Broken Tree",
    "rating": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "476/B",
    "contestId": 476,
    "index": "B",
    "name": "Dreamoon and WiFi",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "109/B",
    "contestId": 109,
    "index": "B",
    "name": "Lucky Probability",
    "rating": 1900,
    "tags": [
      "brute force",
      "probabilities"
    ]
  },
  {
    "id": "1926/C",
    "contestId": 1926,
    "index": "C",
    "name": "Vlad and a Sum of Sum of Digits",
    "rating": 1200,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1063/D",
    "contestId": 1063,
    "index": "D",
    "name": "Candies for Children",
    "rating": 2600,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "975/C",
    "contestId": 975,
    "index": "C",
    "name": "Valhalla Siege",
    "rating": 1400,
    "tags": [
      "binary search"
    ]
  },
  {
    "id": "453/B",
    "contestId": 453,
    "index": "B",
    "name": "Little Pony and Harmony Chest",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "id": "1185/B",
    "contestId": 1185,
    "index": "B",
    "name": "Email from Polycarp",
    "rating": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1511/G",
    "contestId": 1511,
    "index": "G",
    "name": "Chips on a Board",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dp",
      "games",
      "two pointers"
    ]
  },
  {
    "id": "12/B",
    "contestId": 12,
    "index": "B",
    "name": "Correct Solution?",
    "rating": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1388/B",
    "contestId": 1388,
    "index": "B",
    "name": "Captain Flint and a Long Voyage",
    "rating": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1746/D",
    "contestId": 1746,
    "index": "D",
    "name": "Paths on the Tree",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "292/C",
    "contestId": 292,
    "index": "C",
    "name": "Beautiful IP Addresses",
    "rating": 2000,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1463/D",
    "contestId": 1463,
    "index": "D",
    "name": "Pairs",
    "rating": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "819/D",
    "contestId": 819,
    "index": "D",
    "name": "Mister B and Astronomers",
    "rating": 2900,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "1253/B",
    "contestId": 1253,
    "index": "B",
    "name": "Silly Mistake",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1347/E",
    "contestId": 1347,
    "index": "E",
    "name": "Special Permutation",
    "rating": 1600,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "id": "1738/C",
    "contestId": 1738,
    "index": "C",
    "name": "Even Number Addicts",
    "rating": 1500,
    "tags": [
      "dp",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1385/E",
    "contestId": 1385,
    "index": "E",
    "name": "Directing Edges",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1934/A",
    "contestId": 1934,
    "index": "A",
    "name": "Too Min Too Max",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "649/C",
    "contestId": 649,
    "index": "C",
    "name": "Печать условий",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "148/B",
    "contestId": 148,
    "index": "B",
    "name": "Escape",
    "rating": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1204/C",
    "contestId": 1204,
    "index": "C",
    "name": "Anna, Svyatoslav and Maps",
    "rating": 1700,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "717/E",
    "contestId": 717,
    "index": "E",
    "name": "Paint it really, really dark gray",
    "rating": 1900,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "id": "526/C",
    "contestId": 526,
    "index": "C",
    "name": "Om Nom and Candies",
    "rating": 2000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1901/B",
    "contestId": 1901,
    "index": "B",
    "name": "Chip and Ribbon",
    "rating": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1594/E1",
    "contestId": 1594,
    "index": "E1",
    "name": "Rubik's Cube Coloring (easy version)",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1687/A",
    "contestId": 1687,
    "index": "A",
    "name": "The Enchanted Forest",
    "rating": 1600,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "665/A",
    "contestId": 665,
    "index": "A",
    "name": "Buses Between Cities",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1971/G",
    "contestId": 1971,
    "index": "G",
    "name": "XOUR",
    "rating": 1700,
    "tags": [
      "data structures",
      "dsu",
      "sortings"
    ]
  },
  {
    "id": "1907/C",
    "contestId": 1907,
    "index": "C",
    "name": "Removal of Unattractive Pairs",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "1588/F",
    "contestId": 1588,
    "index": "F",
    "name": "Jumping Through the Array",
    "rating": 3500,
    "tags": [
      "binary search",
      "data structures",
      "graphs",
      "two pointers"
    ]
  },
  {
    "id": "950/B",
    "contestId": 950,
    "index": "B",
    "name": "Intercepted Message",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1584/F",
    "contestId": 1584,
    "index": "F",
    "name": "Strange LCS",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1866/B",
    "contestId": 1866,
    "index": "B",
    "name": "Battling with Numbers",
    "rating": 1400,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "375/B",
    "contestId": 375,
    "index": "B",
    "name": "Maximum Submatrix 2",
    "rating": 1600,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "768/A",
    "contestId": 768,
    "index": "A",
    "name": "Oath of the Night's Watch",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "887/A",
    "contestId": 887,
    "index": "A",
    "name": "Div. 64",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "172/B",
    "contestId": 172,
    "index": "B",
    "name": "Pseudorandom Sequence Period",
    "rating": 1200,
    "tags": [
      "*special",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "1884/C",
    "contestId": 1884,
    "index": "C",
    "name": "Medium Design",
    "rating": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "154/C",
    "contestId": 154,
    "index": "C",
    "name": "Double Profiles",
    "rating": 2300,
    "tags": [
      "graphs",
      "hashing",
      "sortings"
    ]
  },
  {
    "id": "134/B",
    "contestId": 134,
    "index": "B",
    "name": "Pairs of Numbers",
    "rating": 1900,
    "tags": [
      "brute force",
      "dfs and similar",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1236/D",
    "contestId": 1236,
    "index": "D",
    "name": "Alice and the Doll",
    "rating": 2300,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1895/A",
    "contestId": 1895,
    "index": "A",
    "name": "Treasure Chest",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1194/A",
    "contestId": 1194,
    "index": "A",
    "name": "Remove a Progression",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "81/A",
    "contestId": 81,
    "index": "A",
    "name": "Plug-in",
    "rating": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1009/D",
    "contestId": 1009,
    "index": "D",
    "name": "Relatively Prime Graph",
    "rating": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1112/H",
    "contestId": 1112,
    "index": "H",
    "name": "Secret Letters",
    "rating": 3100,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1093/B",
    "contestId": 1093,
    "index": "B",
    "name": "Letters Rearranging",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "401/C",
    "contestId": 401,
    "index": "C",
    "name": "Team",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1624/A",
    "contestId": 1624,
    "index": "A",
    "name": "Plus One on the Subset",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "527/C",
    "contestId": 527,
    "index": "C",
    "name": "Glass Carving",
    "rating": 1500,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1898/F",
    "contestId": 1898,
    "index": "F",
    "name": "Vova Escapes the Matrix",
    "rating": 2600,
    "tags": [
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "shortest paths"
    ]
  },
  {
    "id": "727/F",
    "contestId": 727,
    "index": "F",
    "name": "Polycarp's problems",
    "rating": 2300,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1945/C",
    "contestId": 1945,
    "index": "C",
    "name": "Left and Right Houses",
    "rating": 1200,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "873/E",
    "contestId": 873,
    "index": "E",
    "name": "Awards For Contestants",
    "rating": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "963/A",
    "contestId": 963,
    "index": "A",
    "name": "Alternating Sum",
    "rating": 1800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "683/D",
    "contestId": 683,
    "index": "D",
    "name": "Chocolate Bar",
    "rating": 1400,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "id": "995/E",
    "contestId": 995,
    "index": "E",
    "name": "Number Clicker",
    "rating": 2700,
    "tags": [
      "divide and conquer",
      "graphs",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "id": "1411/A",
    "contestId": 1411,
    "index": "A",
    "name": "In-game Chat",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "367/C",
    "contestId": 367,
    "index": "C",
    "name": "Sereja and the Arrangement of Numbers",
    "rating": 2000,
    "tags": [
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "233/A",
    "contestId": 233,
    "index": "A",
    "name": "Perfect Permutation",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "946/F",
    "contestId": 946,
    "index": "F",
    "name": "Fibonacci String Subsequences",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "matrices"
    ]
  },
  {
    "id": "1837/F",
    "contestId": 1837,
    "index": "F",
    "name": "Editorial for Two",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "924/F",
    "contestId": 924,
    "index": "F",
    "name": "Minimal Subset Difference",
    "rating": 3200,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "301/A",
    "contestId": 301,
    "index": "A",
    "name": "Yaroslav and Sequence",
    "rating": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1641/A",
    "contestId": 1641,
    "index": "A",
    "name": "Great Sequence",
    "rating": 1200,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "386/B",
    "contestId": 386,
    "index": "B",
    "name": "Fly, freebies, fly!",
    "rating": 1400,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "875/A",
    "contestId": 875,
    "index": "A",
    "name": "Classroom Watch",
    "rating": 1200,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "735/D",
    "contestId": 735,
    "index": "D",
    "name": "Taxes",
    "rating": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1707/F",
    "contestId": 1707,
    "index": "F",
    "name": "Bugaboo",
    "rating": 3500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "number theory"
    ]
  },
  {
    "id": "490/A",
    "contestId": 490,
    "index": "A",
    "name": "Team Olympiad",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1353/E",
    "contestId": 1353,
    "index": "E",
    "name": "K-periodic Garland",
    "rating": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "171/F",
    "contestId": 171,
    "index": "F",
    "name": "ucyhf",
    "rating": 1600,
    "tags": [
      "*special",
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "630/C",
    "contestId": 630,
    "index": "C",
    "name": "Lucky Numbers",
    "rating": 1100,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1415/A",
    "contestId": 1415,
    "index": "A",
    "name": "Prison Break",
    "rating": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "478/B",
    "contestId": 478,
    "index": "B",
    "name": "Random Teams",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "491/C",
    "contestId": 491,
    "index": "C",
    "name": "Deciphering",
    "rating": 2300,
    "tags": [
      "flows",
      "graph matchings"
    ]
  },
  {
    "id": "1837/C",
    "contestId": 1837,
    "index": "C",
    "name": "Best Binary String",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1107/F",
    "contestId": 1107,
    "index": "F",
    "name": "Vasya and Endless Credits",
    "rating": 2600,
    "tags": [
      "dp",
      "flows",
      "graph matchings",
      "graphs",
      "sortings"
    ]
  },
  {
    "id": "1973/C",
    "contestId": 1973,
    "index": "C",
    "name": "Cat, Fox and Double Maximum",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "551/C",
    "contestId": 551,
    "index": "C",
    "name": "GukiZ hates Boxes",
    "rating": 2200,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "77/E",
    "contestId": 77,
    "index": "E",
    "name": "Martian Food",
    "rating": 2800,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1209/E2",
    "contestId": 1209,
    "index": "E2",
    "name": "Rotate Columns (hard version)",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "417/A",
    "contestId": 417,
    "index": "A",
    "name": "Elimination",
    "rating": 1500,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "97/C",
    "contestId": 97,
    "index": "C",
    "name": "Winning Strategy",
    "rating": 2400,
    "tags": [
      "binary search",
      "graphs",
      "math",
      "shortest paths"
    ]
  },
  {
    "id": "812/C",
    "contestId": 812,
    "index": "C",
    "name": "Sagheer and Nubian Market",
    "rating": 1500,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "id": "1641/E",
    "contestId": 1641,
    "index": "E",
    "name": "Special Positions",
    "rating": 3300,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "fft",
      "math"
    ]
  },
  {
    "id": "385/A",
    "contestId": 385,
    "index": "A",
    "name": "Bear and Raspberry",
    "rating": 1000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "952/D",
    "contestId": 952,
    "index": "D",
    "name": "I'm Feeling Lucky!",
    "rating": 1800,
    "tags": [
      "probabilities"
    ]
  },
  {
    "id": "710/B",
    "contestId": 710,
    "index": "B",
    "name": "Optimal Point on a Line",
    "rating": 1400,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "id": "272/B",
    "contestId": 272,
    "index": "B",
    "name": "Dima and Sequence",
    "rating": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "459/B",
    "contestId": 459,
    "index": "B",
    "name": "Pashmak and Flowers",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "221/B",
    "contestId": 221,
    "index": "B",
    "name": "Little Elephant and Numbers",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "227/A",
    "contestId": 227,
    "index": "A",
    "name": "Where do I Turn?",
    "rating": 1300,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1008/A",
    "contestId": 1008,
    "index": "A",
    "name": "Romaji",
    "rating": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "96/A",
    "contestId": 96,
    "index": "A",
    "name": "Football",
    "rating": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "535/A",
    "contestId": 535,
    "index": "A",
    "name": "Tavas and Nafas",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "411/A",
    "contestId": 411,
    "index": "A",
    "name": "Password Check",
    "rating": 800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1102/A",
    "contestId": 1102,
    "index": "A",
    "name": "Integer Sequence Dividing",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "958/F1",
    "contestId": 958,
    "index": "F1",
    "name": "Lightsabers (easy)",
    "rating": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "139/B",
    "contestId": 139,
    "index": "B",
    "name": "Wallpaper",
    "rating": 1600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "155/A",
    "contestId": 155,
    "index": "A",
    "name": "I_love_%username%",
    "rating": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "745/A",
    "contestId": 745,
    "index": "A",
    "name": "Hongcow Learns the Cyclic Shift",
    "rating": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "18/C",
    "contestId": 18,
    "index": "C",
    "name": "Stripe",
    "rating": 1200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1515/B",
    "contestId": 1515,
    "index": "B",
    "name": "Phoenix and Puzzle",
    "rating": 1000,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "number theory"
    ]
  },
  {
    "id": "976/A",
    "contestId": 976,
    "index": "A",
    "name": "Minimum Binary Number",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1519/A",
    "contestId": 1519,
    "index": "A",
    "name": "Red and Blue Beans",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "234/B",
    "contestId": 234,
    "index": "B",
    "name": "Reading",
    "rating": 1000,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "844/B",
    "contestId": 844,
    "index": "B",
    "name": "Rectangles",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1635/A",
    "contestId": 1635,
    "index": "A",
    "name": "Min Or Sum",
    "rating": 800,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "id": "1133/D",
    "contestId": 1133,
    "index": "D",
    "name": "Zero Quantity Maximization",
    "rating": 1500,
    "tags": [
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1108/A",
    "contestId": 1108,
    "index": "A",
    "name": "Two distinct points",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "373/B",
    "contestId": 373,
    "index": "B",
    "name": "Making Sequences is Fun",
    "rating": 1600,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "id": "999/B",
    "contestId": 999,
    "index": "B",
    "name": "Reversing Encryption",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1324/C",
    "contestId": 1324,
    "index": "C",
    "name": "Frog Jumps",
    "rating": 1100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "203/D",
    "contestId": 203,
    "index": "D",
    "name": "Hit Ball",
    "rating": 1700,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1223/A",
    "contestId": 1223,
    "index": "A",
    "name": "CME",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1030/C",
    "contestId": 1030,
    "index": "C",
    "name": "Vasya and Golden Ticket",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "113/A",
    "contestId": 113,
    "index": "A",
    "name": "Grammar Lessons",
    "rating": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1211/D",
    "contestId": 1211,
    "index": "D",
    "name": "Teams",
    "rating": 2000,
    "tags": [
      "*special",
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "id": "938/D",
    "contestId": 938,
    "index": "D",
    "name": "Buy a Ticket",
    "rating": 2000,
    "tags": [
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1873/D",
    "contestId": 1873,
    "index": "D",
    "name": "1D Eraser",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "938/B",
    "contestId": 938,
    "index": "B",
    "name": "Run For Your Prize",
    "rating": 1100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "961/A",
    "contestId": 961,
    "index": "A",
    "name": "Tetris",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "937/A",
    "contestId": 937,
    "index": "A",
    "name": "Olympiad",
    "rating": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "10/C",
    "contestId": 10,
    "index": "C",
    "name": "Digital Root",
    "rating": 2000,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "1203/D2",
    "contestId": 1203,
    "index": "D2",
    "name": "Remove the Substring (hard version)",
    "rating": 1700,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1582/F1",
    "contestId": 1582,
    "index": "F1",
    "name": "Korney Korneevich and XOR (easy version)",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "645/E",
    "contestId": 645,
    "index": "E",
    "name": "Intellectual Inquiry",
    "rating": 2200,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "813/B",
    "contestId": 813,
    "index": "B",
    "name": "The Golden Age",
    "rating": 1800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1353/D",
    "contestId": 1353,
    "index": "D",
    "name": "Constructing the Array",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "205/B",
    "contestId": 205,
    "index": "B",
    "name": "Little Elephant and Sorting",
    "rating": 1400,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "656/B",
    "contestId": 656,
    "index": "B",
    "name": "Scrambled",
    "rating": 1700,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1196/B",
    "contestId": 1196,
    "index": "B",
    "name": "Odd Sum Segments",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1906/A",
    "contestId": 1906,
    "index": "A",
    "name": "Easy As ABC",
    "rating": 1000,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1968/B",
    "contestId": 1968,
    "index": "B",
    "name": "Prefiquence",
    "rating": 800,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "354/A",
    "contestId": 354,
    "index": "A",
    "name": "Vasya and Robot",
    "rating": 1500,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "632/C",
    "contestId": 632,
    "index": "C",
    "name": "The Smallest String Concatenation",
    "rating": 1700,
    "tags": [
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1538/C",
    "contestId": 1538,
    "index": "C",
    "name": "Number of Pairs",
    "rating": 1300,
    "tags": [
      "binary search",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1766/D",
    "contestId": 1766,
    "index": "D",
    "name": "Lucky Chains",
    "rating": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "231/C",
    "contestId": 231,
    "index": "C",
    "name": "To Add or Not to Add",
    "rating": 1600,
    "tags": [
      "binary search",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1105/C",
    "contestId": 1105,
    "index": "C",
    "name": "Ayoub and Lost Array",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "594/A",
    "contestId": 594,
    "index": "A",
    "name": "Warrior and Archer",
    "rating": 2300,
    "tags": [
      "games"
    ]
  },
  {
    "id": "316/A1",
    "contestId": 316,
    "index": "A1",
    "name": "Special Task",
    "rating": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "691/B",
    "contestId": 691,
    "index": "B",
    "name": "s-palindrome",
    "rating": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "722/A",
    "contestId": 722,
    "index": "A",
    "name": "Broken Clock",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "63/B",
    "contestId": 63,
    "index": "B",
    "name": "Settlers' Training",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "113/B",
    "contestId": 113,
    "index": "B",
    "name": "Petr#",
    "rating": 2000,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "21/C",
    "contestId": 21,
    "index": "C",
    "name": "Stripe 2",
    "rating": 2000,
    "tags": [
      "binary search",
      "dp",
      "sortings"
    ]
  },
  {
    "id": "1409/A",
    "contestId": 1409,
    "index": "A",
    "name": "Yet Another Two Integers Problem",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "223/C",
    "contestId": 223,
    "index": "C",
    "name": "Partial Sums",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1398/A",
    "contestId": 1398,
    "index": "A",
    "name": "Bad Triangle",
    "rating": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1266/A",
    "contestId": 1266,
    "index": "A",
    "name": "Competitive Programmer",
    "rating": 1000,
    "tags": [
      "chinese remainder theorem",
      "math"
    ]
  },
  {
    "id": "1493/B",
    "contestId": 1493,
    "index": "B",
    "name": "Planet Lapituletti",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1141/D",
    "contestId": 1141,
    "index": "D",
    "name": "Colored Boots",
    "rating": 1500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1741/C",
    "contestId": 1741,
    "index": "C",
    "name": "Minimize the Thickness",
    "rating": 1100,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1168/B",
    "contestId": 1168,
    "index": "B",
    "name": "Good Triple",
    "rating": 1900,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "id": "75/D",
    "contestId": 75,
    "index": "D",
    "name": "Big Maximum Sum",
    "rating": 2000,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "id": "687/C",
    "contestId": 687,
    "index": "C",
    "name": "The Values You Can Make",
    "rating": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "201/B",
    "contestId": 201,
    "index": "B",
    "name": "Guess That Car!",
    "rating": 1800,
    "tags": [
      "math",
      "ternary search"
    ]
  },
  {
    "id": "710/D",
    "contestId": 710,
    "index": "D",
    "name": "Two Arithmetic Progressions",
    "rating": 2500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1077/D",
    "contestId": 1077,
    "index": "D",
    "name": "Cutting Out",
    "rating": 1600,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "id": "1970/F1",
    "contestId": 1970,
    "index": "F1",
    "name": "Playing Quidditch (Easy)",
    "rating": 2300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "409/D",
    "contestId": 409,
    "index": "D",
    "name": "Big Data",
    "rating": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "49/E",
    "contestId": 49,
    "index": "E",
    "name": "Common ancestor",
    "rating": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1228/E",
    "contestId": 1228,
    "index": "E",
    "name": "Another Filling the Grid",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1798/C",
    "contestId": 1798,
    "index": "C",
    "name": "Candy Store",
    "rating": 1700,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "535/E",
    "contestId": 535,
    "index": "E",
    "name": "Tavas and Pashmaks",
    "rating": 2600,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1924/C",
    "contestId": 1924,
    "index": "C",
    "name": "Fractal Origami",
    "rating": 2400,
    "tags": [
      "geometry",
      "math",
      "matrices"
    ]
  },
  {
    "id": "148/E",
    "contestId": 148,
    "index": "E",
    "name": "Porcelain",
    "rating": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1777/C",
    "contestId": 1777,
    "index": "C",
    "name": "Quiz Master",
    "rating": 1700,
    "tags": [
      "binary search",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "676/B",
    "contestId": 676,
    "index": "B",
    "name": "Pyramid of Glasses",
    "rating": 1500,
    "tags": [
      "implementation",
      "math",
      "math"
    ]
  },
  {
    "id": "1428/E",
    "contestId": 1428,
    "index": "E",
    "name": "Carrots for Rabbits",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1716/A",
    "contestId": 1716,
    "index": "A",
    "name": "2-3 Moves",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "514/D",
    "contestId": 514,
    "index": "D",
    "name": "R2D2 and Droid Army",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "1180/B",
    "contestId": 1180,
    "index": "B",
    "name": "Nick and Array",
    "rating": 1500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1649/A",
    "contestId": 1649,
    "index": "A",
    "name": "Game",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1223/D",
    "contestId": 1223,
    "index": "D",
    "name": "Sequence Sorting",
    "rating": 2000,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1844/A",
    "contestId": 1844,
    "index": "A",
    "name": "Subtraction Game",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "id": "1929/D",
    "contestId": 1929,
    "index": "D",
    "name": "Sasha and a Walk in the City",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "1768/D",
    "contestId": 1768,
    "index": "D",
    "name": "Lucky Permutation",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "48/E",
    "contestId": 48,
    "index": "E",
    "name": "Ivan the Fool VS Gorynych the Dragon",
    "rating": 2100,
    "tags": [
      "dp",
      "games",
      "graphs"
    ]
  },
  {
    "id": "1211/F",
    "contestId": 1211,
    "index": "F",
    "name": "kotlinkotlinkotlinkotlin...",
    "rating": 2300,
    "tags": [
      "*special",
      "graphs",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1759/D",
    "contestId": 1759,
    "index": "D",
    "name": "Make It Round",
    "rating": 1400,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "id": "1280/B",
    "contestId": 1280,
    "index": "B",
    "name": "Beingawesomeism",
    "rating": 1800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "505/C",
    "contestId": 505,
    "index": "C",
    "name": "Mr. Kitayuta, the Treasure Hunter",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "1486/E",
    "contestId": 1486,
    "index": "E",
    "name": "Paired Payment",
    "rating": 2200,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "dp",
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1819/F",
    "contestId": 1819,
    "index": "F",
    "name": "Willy-nilly, Crack, Into Release!",
    "rating": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1200/D",
    "contestId": 1200,
    "index": "D",
    "name": "White Lines",
    "rating": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "85/D",
    "contestId": 85,
    "index": "D",
    "name": "Sum of Medians",
    "rating": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1625/E2",
    "contestId": 1625,
    "index": "E2",
    "name": "Cats on the Upgrade (hard version)",
    "rating": 2800,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "27/D",
    "contestId": 27,
    "index": "D",
    "name": "Ring Road 2",
    "rating": 2200,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1627/E",
    "contestId": 1627,
    "index": "E",
    "name": "Not Escaping",
    "rating": 2200,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "shortest paths",
      "two pointers"
    ]
  },
  {
    "id": "1969/F",
    "contestId": 1969,
    "index": "F",
    "name": "Card Pairing",
    "rating": 3000,
    "tags": [
      "dp",
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "id": "1650/D",
    "contestId": 1650,
    "index": "D",
    "name": "Twist the Permutation",
    "rating": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1594/E2",
    "contestId": 1594,
    "index": "E2",
    "name": "Rubik's Cube Coloring (hard version)",
    "rating": 2300,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "id": "1586/I",
    "contestId": 1586,
    "index": "I",
    "name": "Omkar and Mosaic",
    "rating": 3500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1359/D",
    "contestId": 1359,
    "index": "D",
    "name": "Yet Another Yet Another Task",
    "rating": 2000,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1187/G",
    "contestId": 1187,
    "index": "G",
    "name": "Gang Up",
    "rating": 2500,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "id": "1205/B",
    "contestId": 1205,
    "index": "B",
    "name": "Shortest Cycle",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "362/D",
    "contestId": 362,
    "index": "D",
    "name": "Fools and Foolproof Roads",
    "rating": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "69/D",
    "contestId": 69,
    "index": "D",
    "name": "Dot",
    "rating": 1900,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "id": "600/C",
    "contestId": 600,
    "index": "C",
    "name": "Make Palindrome",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "45/H",
    "contestId": 45,
    "index": "H",
    "name": "Road Problem",
    "rating": 2100,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "1737/C",
    "contestId": 1737,
    "index": "C",
    "name": "Ela and Crickets",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "games",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1488/A",
    "contestId": 1488,
    "index": "A",
    "name": "From Zero To Y",
    "rating": 900,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "id": "995/D",
    "contestId": 995,
    "index": "D",
    "name": "Game",
    "rating": 2500,
    "tags": [
      "math"
    ]
  },
  {
    "id": "524/B",
    "contestId": 524,
    "index": "B",
    "name": "Фото на память - 2 (round version)",
    "rating": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "916/C",
    "contestId": 916,
    "index": "C",
    "name": "Jamie and Interesting Graph",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1519/F",
    "contestId": 1519,
    "index": "F",
    "name": "Chests and Keys",
    "rating": 3200,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "flows"
    ]
  },
  {
    "id": "1541/B",
    "contestId": 1541,
    "index": "B",
    "name": "Pleasant Pairs",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "704/B",
    "contestId": 704,
    "index": "B",
    "name": "Ant Man",
    "rating": 2500,
    "tags": [
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "367/B",
    "contestId": 367,
    "index": "B",
    "name": "Sereja ans Anagrams",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1423/F",
    "contestId": 1423,
    "index": "F",
    "name": "Coins",
    "rating": 2700,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1463/F",
    "contestId": 1463,
    "index": "F",
    "name": "Max Correct Set",
    "rating": 3100,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "id": "1389/B",
    "contestId": 1389,
    "index": "B",
    "name": "Array Walk",
    "rating": 1600,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1176/B",
    "contestId": 1176,
    "index": "B",
    "name": "Merge it!",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "350/C",
    "contestId": 350,
    "index": "C",
    "name": "Bombs",
    "rating": 1600,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1667/F",
    "contestId": 1667,
    "index": "F",
    "name": "Yin Yang",
    "rating": 3500,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1768/C",
    "contestId": 1768,
    "index": "C",
    "name": "Elemental Decompress",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1714/E",
    "contestId": 1714,
    "index": "E",
    "name": "Add Modulo 10",
    "rating": 1400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1970/G3",
    "contestId": 1970,
    "index": "G3",
    "name": "Min-Fund Prison (Hard)",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1592/E",
    "contestId": 1592,
    "index": "E",
    "name": "Bored Bakry",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "455/D",
    "contestId": 455,
    "index": "D",
    "name": "Serega and Fun",
    "rating": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "362/C",
    "contestId": 362,
    "index": "C",
    "name": "Insertion Sort",
    "rating": 1900,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "172/A",
    "contestId": 172,
    "index": "A",
    "name": "Phone Code",
    "rating": 800,
    "tags": [
      "*special",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1202/B",
    "contestId": 1202,
    "index": "B",
    "name": "You Are Given a Decimal String...",
    "rating": 1700,
    "tags": [
      "brute force",
      "dp",
      "shortest paths"
    ]
  },
  {
    "id": "1527/D",
    "contestId": 1527,
    "index": "D",
    "name": "MEX Tree",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "id": "1511/E",
    "contestId": 1511,
    "index": "E",
    "name": "Colorings and Dominoes",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1575/K",
    "contestId": 1575,
    "index": "K",
    "name": "Knitting Batik",
    "rating": 2200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1710/C",
    "contestId": 1710,
    "index": "C",
    "name": "XOR Triangle",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "615/E",
    "contestId": 615,
    "index": "E",
    "name": "Hexagons",
    "rating": 2100,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1758/F",
    "contestId": 1758,
    "index": "F",
    "name": "Decent Division",
    "rating": 3000,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "id": "1366/F",
    "contestId": 1366,
    "index": "F",
    "name": "Jog Around The Graph",
    "rating": 2700,
    "tags": [
      "binary search",
      "dp",
      "geometry",
      "graphs"
    ]
  },
  {
    "id": "1733/B",
    "contestId": 1733,
    "index": "B",
    "name": "Rule of League",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "896/E",
    "contestId": 896,
    "index": "E",
    "name": "Welcome home, Chtholly",
    "rating": 3100,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "id": "1965/F",
    "contestId": 1965,
    "index": "F",
    "name": "Conference",
    "rating": 3300,
    "tags": [
      "data structures",
      "flows"
    ]
  },
  {
    "id": "573/B",
    "contestId": 573,
    "index": "B",
    "name": "Bear and Blocks",
    "rating": 1600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "id": "1814/D",
    "contestId": 1814,
    "index": "D",
    "name": "Balancing Weapons",
    "rating": 2500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1077/F1",
    "contestId": 1077,
    "index": "F1",
    "name": "Pictures with Kittens (easy version)",
    "rating": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "201/C",
    "contestId": 201,
    "index": "C",
    "name": "Fragile Bridges",
    "rating": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1919/C",
    "contestId": 1919,
    "index": "C",
    "name": "Grouping Increases",
    "rating": 1400,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1499/F",
    "contestId": 1499,
    "index": "F",
    "name": "Diameter Cuts",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "962/B",
    "contestId": 962,
    "index": "B",
    "name": "Students in Railway Carriage",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1924/B",
    "contestId": 1924,
    "index": "B",
    "name": "Space Harbour",
    "rating": 2100,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "938/C",
    "contestId": 938,
    "index": "C",
    "name": "Constructing Tests",
    "rating": 1700,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "1671/B",
    "contestId": 1671,
    "index": "B",
    "name": "Consecutive Points Segment",
    "rating": 1000,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "id": "803/G",
    "contestId": 803,
    "index": "G",
    "name": "Periodic RMQ Problem",
    "rating": 2300,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1744/E2",
    "contestId": 1744,
    "index": "E2",
    "name": "Divisible Numbers (hard version)",
    "rating": 1900,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "39/J",
    "contestId": 39,
    "index": "J",
    "name": "Spelling Check",
    "rating": 1500,
    "tags": [
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "792/A",
    "contestId": 792,
    "index": "A",
    "name": "New Bus Route",
    "rating": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1926/G",
    "contestId": 1926,
    "index": "G",
    "name": "Vlad and Trouble at MIT",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "flows",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1783/D",
    "contestId": 1783,
    "index": "D",
    "name": "Different Arrays",
    "rating": 2000,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1139/E",
    "contestId": 1139,
    "index": "E",
    "name": "Maximize Mex",
    "rating": 2400,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "id": "1109/F",
    "contestId": 1109,
    "index": "F",
    "name": "Sasha and Algorithm of Silence's Sounds",
    "rating": 3200,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1866/K",
    "contestId": 1866,
    "index": "K",
    "name": "Keen Tree Calculation",
    "rating": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "geometry",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1739/C",
    "contestId": 1739,
    "index": "C",
    "name": "Card Game",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dp",
      "games"
    ]
  },
  {
    "id": "650/D",
    "contestId": 650,
    "index": "D",
    "name": "Zip-line",
    "rating": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing"
    ]
  },
  {
    "id": "1401/F",
    "contestId": 1401,
    "index": "F",
    "name": "Reverse and Swap",
    "rating": 2400,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures"
    ]
  },
  {
    "id": "1520/D",
    "contestId": 1520,
    "index": "D",
    "name": "Same Differences",
    "rating": 1200,
    "tags": [
      "data structures",
      "hashing",
      "math"
    ]
  },
  {
    "id": "1930/I",
    "contestId": 1930,
    "index": "I",
    "name": "Counting Is Fun",
    "rating": 3500,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "id": "982/D",
    "contestId": 982,
    "index": "D",
    "name": "Shark",
    "rating": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "id": "1166/F",
    "contestId": 1166,
    "index": "F",
    "name": "Vicky's Delivery Service",
    "rating": 2400,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "hashing"
    ]
  },
  {
    "id": "1849/D",
    "contestId": 1849,
    "index": "D",
    "name": "Array Painting",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1244/B",
    "contestId": 1244,
    "index": "B",
    "name": "Rooms and Staircases",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1528/D",
    "contestId": 1528,
    "index": "D",
    "name": "It's a bird! No, it's a plane! No, it's AaParsa!",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "125/D",
    "contestId": 125,
    "index": "D",
    "name": "Two progressions",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1548/E",
    "contestId": 1548,
    "index": "E",
    "name": "Gregor and the Two Painters",
    "rating": 3400,
    "tags": [
      "data structures",
      "divide and conquer",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "id": "76/A",
    "contestId": 76,
    "index": "A",
    "name": "Gift",
    "rating": 2200,
    "tags": [
      "dsu",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "549/C",
    "contestId": 549,
    "index": "C",
    "name": "The Game Of Parity",
    "rating": 2200,
    "tags": [
      "games"
    ]
  },
  {
    "id": "992/E",
    "contestId": 992,
    "index": "E",
    "name": "Nastya and King-Shamans",
    "rating": 2500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1716/E",
    "contestId": 1716,
    "index": "E",
    "name": "Swap and Maximum Block",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "1554/C",
    "contestId": 1554,
    "index": "C",
    "name": "Mikasa",
    "rating": 1800,
    "tags": [
      "binary search",
      "bitmasks",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1217/B",
    "contestId": 1217,
    "index": "B",
    "name": "Zmei Gorynich",
    "rating": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1031/F",
    "contestId": 1031,
    "index": "F",
    "name": "Familiar Operations",
    "rating": 2800,
    "tags": [
      "brute force",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1734/C",
    "contestId": 1734,
    "index": "C",
    "name": "Removing Smallest Multiples",
    "rating": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "484/D",
    "contestId": 484,
    "index": "D",
    "name": "Kindergarten",
    "rating": 2400,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "374/A",
    "contestId": 374,
    "index": "A",
    "name": "Inna and Pink Pony",
    "rating": 2000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1702/D",
    "contestId": 1702,
    "index": "D",
    "name": "Not a Cheap String",
    "rating": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1374/E2",
    "contestId": 1374,
    "index": "E2",
    "name": "Reading Books (hard version)",
    "rating": 2500,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "id": "1118/E",
    "contestId": 1118,
    "index": "E",
    "name": "Yet Another Ball Problem",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "446/B",
    "contestId": 446,
    "index": "B",
    "name": "DZY Loves Modification",
    "rating": 2000,
    "tags": [
      "brute force",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "865/C",
    "contestId": 865,
    "index": "C",
    "name": "Gotta Go Fast",
    "rating": 2400,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "496/D",
    "contestId": 496,
    "index": "D",
    "name": "Tennis Game",
    "rating": 1900,
    "tags": [
      "binary search"
    ]
  },
  {
    "id": "496/B",
    "contestId": 496,
    "index": "B",
    "name": "Secret Combination",
    "rating": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1525/C",
    "contestId": 1525,
    "index": "C",
    "name": "Robot Collisions",
    "rating": 2000,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1015/E2",
    "contestId": 1015,
    "index": "E2",
    "name": "Stars Drawing (Hard Edition)",
    "rating": 1900,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "889/E",
    "contestId": 889,
    "index": "E",
    "name": "Mod Mod Mod",
    "rating": 3000,
    "tags": [
      "binary search",
      "dp",
      "math"
    ]
  },
  {
    "id": "504/D",
    "contestId": 504,
    "index": "D",
    "name": "Misha and XOR",
    "rating": 2700,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "id": "802/N",
    "contestId": 802,
    "index": "N",
    "name": "April Fools' Problem (medium)",
    "rating": 2400,
    "tags": [
      "binary search",
      "flows",
      "graphs"
    ]
  },
  {
    "id": "1837/B",
    "contestId": 1837,
    "index": "B",
    "name": "Comparison String",
    "rating": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1948/G",
    "contestId": 1948,
    "index": "G",
    "name": "MST with Matching",
    "rating": 3100,
    "tags": [
      "bitmasks",
      "brute force",
      "dsu",
      "graph matchings",
      "trees"
    ]
  },
  {
    "id": "1168/D",
    "contestId": 1168,
    "index": "D",
    "name": "Anagram Paths",
    "rating": 3000,
    "tags": [
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1930/C",
    "contestId": 1930,
    "index": "C",
    "name": "Lexicographically Largest",
    "rating": 1700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1821/D",
    "contestId": 1821,
    "index": "D",
    "name": "Black Cells",
    "rating": 1900,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1979/E",
    "contestId": 1979,
    "index": "E",
    "name": "Manhattan Triangle",
    "rating": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "geometry",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1734/F",
    "contestId": 1734,
    "index": "F",
    "name": "Zeros and Ones",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "id": "938/E",
    "contestId": 938,
    "index": "E",
    "name": "Max History",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "900/C",
    "contestId": 900,
    "index": "C",
    "name": "Remove Extra One",
    "rating": 1700,
    "tags": [
      "brute force",
      "data structures",
      "math"
    ]
  },
  {
    "id": "1133/E",
    "contestId": 1133,
    "index": "E",
    "name": "K Balanced Teams",
    "rating": 1800,
    "tags": [
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1187/F",
    "contestId": 1187,
    "index": "F",
    "name": "Expected Square Beauty",
    "rating": 2500,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "515/E",
    "contestId": 515,
    "index": "E",
    "name": "Drazil and Park",
    "rating": 2300,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1415/C",
    "contestId": 1415,
    "index": "C",
    "name": "Bouncing Ball",
    "rating": 1400,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1550/E",
    "contestId": 1550,
    "index": "E",
    "name": "Stringforces",
    "rating": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1112/C",
    "contestId": 1112,
    "index": "C",
    "name": "Diana and Liana",
    "rating": 1900,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1375/G",
    "contestId": 1375,
    "index": "G",
    "name": "Tree Modification",
    "rating": 2800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graph matchings",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "578/C",
    "contestId": 578,
    "index": "C",
    "name": "Weakness and Poorness",
    "rating": 2000,
    "tags": [
      "ternary search"
    ]
  },
  {
    "id": "1674/G",
    "contestId": 1674,
    "index": "G",
    "name": "Remove Directed Edges",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "815/B",
    "contestId": 815,
    "index": "B",
    "name": "Karen and Test",
    "rating": 2200,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1977/B",
    "contestId": 1977,
    "index": "B",
    "name": "Binary Colouring",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1843/F2",
    "contestId": 1843,
    "index": "F2",
    "name": "Omsk Metro (hard version)",
    "rating": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "641/A",
    "contestId": 641,
    "index": "A",
    "name": "Little Artem and Grasshopper",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1661/D",
    "contestId": 1661,
    "index": "D",
    "name": "Progressions Covering",
    "rating": 1900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "730/D",
    "contestId": 730,
    "index": "D",
    "name": "Running Over The Bridges",
    "rating": 2200,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1440/A",
    "contestId": 1440,
    "index": "A",
    "name": "Buy the String",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1259/C",
    "contestId": 1259,
    "index": "C",
    "name": "As Simple as One and Two",
    "rating": 1400,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1955/A",
    "contestId": 1955,
    "index": "A",
    "name": "Yogurt Sale",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1512/B",
    "contestId": 1512,
    "index": "B",
    "name": "Almost Rectangle",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1114/D",
    "contestId": 1114,
    "index": "D",
    "name": "Flood Fill",
    "rating": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1895/G",
    "contestId": 1895,
    "index": "G",
    "name": "Two Characters, Two Colors",
    "rating": 3100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "id": "1558/F",
    "contestId": 1558,
    "index": "F",
    "name": "Strange Sort",
    "rating": 3300,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1427/C",
    "contestId": 1427,
    "index": "C",
    "name": "The Hard Work of Paparazzi",
    "rating": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1553/D",
    "contestId": 1553,
    "index": "D",
    "name": "Backspace",
    "rating": 1500,
    "tags": [
      "dp",
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1205/D",
    "contestId": 1205,
    "index": "D",
    "name": "Almost All",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "id": "1447/A",
    "contestId": 1447,
    "index": "A",
    "name": "Add Candies",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1458/B",
    "contestId": 1458,
    "index": "B",
    "name": "Glass Half Spilled",
    "rating": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "630/A",
    "contestId": 630,
    "index": "A",
    "name": "Again Twenty Five!",
    "rating": 800,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "1735/E",
    "contestId": 1735,
    "index": "E",
    "name": "House Planning",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "id": "1661/F",
    "contestId": 1661,
    "index": "F",
    "name": "Teleporters",
    "rating": 2600,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "632/E",
    "contestId": 632,
    "index": "E",
    "name": "Thief in a Shop",
    "rating": 2400,
    "tags": [
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "1352/C",
    "contestId": 1352,
    "index": "C",
    "name": "K-th Not Divisible by n",
    "rating": 1200,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "1969/B",
    "contestId": 1969,
    "index": "B",
    "name": "Shifts and Sorting",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "257/B",
    "contestId": 257,
    "index": "B",
    "name": "Playing Cubes",
    "rating": 1300,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "828/A",
    "contestId": 828,
    "index": "A",
    "name": "Restaurant Tables",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1777/B",
    "contestId": 1777,
    "index": "B",
    "name": "Emordnilap",
    "rating": 900,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1559/D1",
    "contestId": 1559,
    "index": "D1",
    "name": "Mocha and Diana (Easy Version)",
    "rating": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "519/B",
    "contestId": 519,
    "index": "B",
    "name": "A and B and Compilation Errors",
    "rating": 1100,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1652/A",
    "contestId": 1652,
    "index": "A",
    "name": "Maximum Cake Tastiness",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "303/C",
    "contestId": 303,
    "index": "C",
    "name": "Minimum Modular",
    "rating": 2400,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1346/F",
    "contestId": 1346,
    "index": "F",
    "name": "Dune II: Battle For Arrakis",
    "rating": 2000,
    "tags": [
      "*special",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "515/A",
    "contestId": 515,
    "index": "A",
    "name": "Drazil and Date",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1796/A",
    "contestId": 1796,
    "index": "A",
    "name": "Typical Interview Problem",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "13/B",
    "contestId": 13,
    "index": "B",
    "name": "Letter A",
    "rating": 2000,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "264/D",
    "contestId": 264,
    "index": "D",
    "name": "Colorful Stones",
    "rating": 2500,
    "tags": [
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "1902/A",
    "contestId": 1902,
    "index": "A",
    "name": "Binary Imbalance",
    "rating": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1971/C",
    "contestId": 1971,
    "index": "C",
    "name": "Clock and Strings",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "445/A",
    "contestId": 445,
    "index": "A",
    "name": "DZY Loves Chessboard",
    "rating": 1200,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "id": "1635/F",
    "contestId": 1635,
    "index": "F",
    "name": "Closest Pair",
    "rating": 2800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "993/C",
    "contestId": 993,
    "index": "C",
    "name": "Careful Maneuvering",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "brute force",
      "geometry"
    ]
  },
  {
    "id": "997/A",
    "contestId": 997,
    "index": "A",
    "name": "Convert to Ones",
    "rating": 1500,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "161/A",
    "contestId": 161,
    "index": "A",
    "name": "Dress'em in Vests!",
    "rating": 1300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "43/D",
    "contestId": 43,
    "index": "D",
    "name": "Journey",
    "rating": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "291/C",
    "contestId": 291,
    "index": "C",
    "name": "Network Mask",
    "rating": 1600,
    "tags": [
      "*special",
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "463/A",
    "contestId": 463,
    "index": "A",
    "name": "Caisa and Sugar",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "272/E",
    "contestId": 272,
    "index": "E",
    "name": "Dima and Horses",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "958/A1",
    "contestId": 958,
    "index": "A1",
    "name": "Death Stars (easy)",
    "rating": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1380/D",
    "contestId": 1380,
    "index": "D",
    "name": "Berserk And Fireball",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1779/G",
    "contestId": 1779,
    "index": "G",
    "name": "The Game of the Century",
    "rating": 3000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1989/F",
    "contestId": 1989,
    "index": "F",
    "name": "Simultaneous Coloring",
    "rating": 3000,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "graphs"
    ]
  },
  {
    "id": "1033/B",
    "contestId": 1033,
    "index": "B",
    "name": "Square Difference",
    "rating": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1839/B",
    "contestId": 1839,
    "index": "B",
    "name": "Lamps",
    "rating": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1714/A",
    "contestId": 1714,
    "index": "A",
    "name": "Everyone Loves to Sleep",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "199/A",
    "contestId": 199,
    "index": "A",
    "name": "Hexadecimal's theorem",
    "rating": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "196/A",
    "contestId": 196,
    "index": "A",
    "name": "Lexicographically Maximum Subsequence",
    "rating": 1100,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "954/F",
    "contestId": 954,
    "index": "F",
    "name": "Runner's Problem",
    "rating": 2100,
    "tags": [
      "dp",
      "matrices",
      "sortings"
    ]
  },
  {
    "id": "1488/H",
    "contestId": 1488,
    "index": "H",
    "name": "Build From Suffixes",
    "rating": 2800,
    "tags": [
      "*special",
      "combinatorics",
      "data structures"
    ]
  },
  {
    "id": "847/M",
    "contestId": 847,
    "index": "M",
    "name": "Weather Tomorrow",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1146/A",
    "contestId": 1146,
    "index": "A",
    "name": "Love \"A\"",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1270/I",
    "contestId": 1270,
    "index": "I",
    "name": "Xor on Figures",
    "rating": 3500,
    "tags": [
      "constructive algorithms",
      "fft",
      "math"
    ]
  },
  {
    "id": "513/E1",
    "contestId": 513,
    "index": "E1",
    "name": "Subarray Cuts",
    "rating": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "290/B",
    "contestId": 290,
    "index": "B",
    "name": "QR code",
    "rating": 1500,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "855/A",
    "contestId": 855,
    "index": "A",
    "name": "Tom Riddle's Diary",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "632/D",
    "contestId": 632,
    "index": "D",
    "name": "Longest Subsequence",
    "rating": 2100,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1844/C",
    "contestId": 1844,
    "index": "C",
    "name": "Particles",
    "rating": 1300,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "524/F",
    "contestId": 524,
    "index": "F",
    "name": "And Yet Another Bracket Sequence",
    "rating": 2700,
    "tags": [
      "data structures",
      "greedy",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1760/A",
    "contestId": 1760,
    "index": "A",
    "name": "Medium Number",
    "rating": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1375/D",
    "contestId": 1375,
    "index": "D",
    "name": "Replace by MEX",
    "rating": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "1914/E2",
    "contestId": 1914,
    "index": "E2",
    "name": "Game with Marbles (Hard Version)",
    "rating": 1400,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "629/B",
    "contestId": 629,
    "index": "B",
    "name": "Far Relative’s Problem",
    "rating": 1100,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1312/B",
    "contestId": 1312,
    "index": "B",
    "name": "Bogosort",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "939/B",
    "contestId": 939,
    "index": "B",
    "name": "Hamster Farm",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1056/D",
    "contestId": 1056,
    "index": "D",
    "name": "Decorate Apple Tree",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "591/B",
    "contestId": 591,
    "index": "B",
    "name": "Rebranding",
    "rating": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1373/A",
    "contestId": 1373,
    "index": "A",
    "name": "Donut Shops",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "678/B",
    "contestId": 678,
    "index": "B",
    "name": "The Same Calendar",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1045/I",
    "contestId": 1045,
    "index": "I",
    "name": "Palindrome Pairs",
    "rating": 1600,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "id": "515/D",
    "contestId": 515,
    "index": "D",
    "name": "Drazil and Tiles",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "732/C",
    "contestId": 732,
    "index": "C",
    "name": "Sanatorium",
    "rating": 1200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1473/G",
    "contestId": 1473,
    "index": "G",
    "name": "Tiles",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "407/B",
    "contestId": 407,
    "index": "B",
    "name": "Long Path",
    "rating": 1600,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "282/B",
    "contestId": 282,
    "index": "B",
    "name": "Painting Eggs",
    "rating": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "552/C",
    "contestId": 552,
    "index": "C",
    "name": "Vanya and Scales",
    "rating": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "id": "1958/H",
    "contestId": 1958,
    "index": "H",
    "name": "Composite Spells",
    "rating": 2600,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "id": "1740/C",
    "contestId": 1740,
    "index": "C",
    "name": "Bricks and Bags",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "486/E",
    "contestId": 486,
    "index": "E",
    "name": "LIS of Sequence",
    "rating": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "hashing",
      "math"
    ]
  },
  {
    "id": "375/E",
    "contestId": 375,
    "index": "E",
    "name": "Red and Black Tree",
    "rating": 3000,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1506/G",
    "contestId": 1506,
    "index": "G",
    "name": "Maximize the Remaining String",
    "rating": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "837/A",
    "contestId": 837,
    "index": "A",
    "name": "Text Volume",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "776/C",
    "contestId": 776,
    "index": "C",
    "name": "Molly's Chemicals",
    "rating": 1800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "id": "357/B",
    "contestId": 357,
    "index": "B",
    "name": "Flag Day",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1182/E",
    "contestId": 1182,
    "index": "E",
    "name": "Product Oriented Recurrence",
    "rating": 2300,
    "tags": [
      "dp",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "id": "1740/I",
    "contestId": 1740,
    "index": "I",
    "name": "Arranging Crystal Balls",
    "rating": 3500,
    "tags": [
      "data structures",
      "divide and conquer",
      "divide and conquer",
      "dp",
      "geometry",
      "graphs",
      "number theory"
    ]
  },
  {
    "id": "1669/D",
    "contestId": 1669,
    "index": "D",
    "name": "Colorful Stamp",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "29/A",
    "contestId": 29,
    "index": "A",
    "name": "Spit Problem",
    "rating": 1000,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "644/C",
    "contestId": 644,
    "index": "C",
    "name": "Hostname Aliases",
    "rating": 2100,
    "tags": [
      "*special",
      "binary search",
      "data structures",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "300/B",
    "contestId": 300,
    "index": "B",
    "name": "Coach",
    "rating": 1500,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1184/C2",
    "contestId": 1184,
    "index": "C2",
    "name": "Heidi and the Turing Test (Medium)",
    "rating": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1045/G",
    "contestId": 1045,
    "index": "G",
    "name": "AI robots",
    "rating": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1474/C",
    "contestId": 1474,
    "index": "C",
    "name": "Array Destruction",
    "rating": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1808/E1",
    "contestId": 1808,
    "index": "E1",
    "name": "Minibuses on Venus (easy version)",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "1552/A",
    "contestId": 1552,
    "index": "A",
    "name": "Subsequence Permutation",
    "rating": 800,
    "tags": [
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1994/G",
    "contestId": 1994,
    "index": "G",
    "name": "Minecraft",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1705/E",
    "contestId": 1705,
    "index": "E",
    "name": "Mark and Professor Koro",
    "rating": 2300,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "combinatorics",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1167/D",
    "contestId": 1167,
    "index": "D",
    "name": "Bicolored RBS",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1705/C",
    "contestId": 1705,
    "index": "C",
    "name": "Mark and His Unfinished Essay",
    "rating": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1561/D1",
    "contestId": 1561,
    "index": "D1",
    "name": "Up the Strip (simplified version)",
    "rating": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1562/B",
    "contestId": 1562,
    "index": "B",
    "name": "Scenes From a Memory",
    "rating": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "58/C",
    "contestId": 58,
    "index": "C",
    "name": "Trees",
    "rating": 1800,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "85/B",
    "contestId": 85,
    "index": "B",
    "name": "Embassy Queue",
    "rating": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1553/C",
    "contestId": 1553,
    "index": "C",
    "name": "Penalty",
    "rating": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1515/I",
    "contestId": 1515,
    "index": "I",
    "name": "Phoenix and Diamonds",
    "rating": 3400,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1136/D",
    "contestId": 1136,
    "index": "D",
    "name": "Nastya Is Buying Lunch",
    "rating": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "69/A",
    "contestId": 69,
    "index": "A",
    "name": "Young Physicist",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1616/G",
    "contestId": 1616,
    "index": "G",
    "name": "Just Add an Edge",
    "rating": 3500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1899/B",
    "contestId": 1899,
    "index": "B",
    "name": "250 Thousand Tons of TNT",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "1826/E",
    "contestId": 1826,
    "index": "E",
    "name": "Walk the Runway",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dp",
      "graphs",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1441/A",
    "contestId": 1441,
    "index": "A",
    "name": "Identify the Operations",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "greedy"
    ]
  },
  {
    "id": "959/E",
    "contestId": 959,
    "index": "E",
    "name": "Mahmoud and Ehab and the xor-MST",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1459/B",
    "contestId": 1459,
    "index": "B",
    "name": "Move and Turn",
    "rating": 1300,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1628/A",
    "contestId": 1628,
    "index": "A",
    "name": "Meximum Array",
    "rating": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1/C",
    "contestId": 1,
    "index": "C",
    "name": "Ancient Berland Circus",
    "rating": 2100,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1528/C",
    "contestId": 1528,
    "index": "C",
    "name": "Trees of Tranquillity",
    "rating": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1712/E2",
    "contestId": 1712,
    "index": "E2",
    "name": "LCM Sum (hard version)",
    "rating": 2500,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "579/A",
    "contestId": 579,
    "index": "A",
    "name": "Raising Bacteria",
    "rating": 1000,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "id": "98/C",
    "contestId": 98,
    "index": "C",
    "name": "Help Greg the Dwarf",
    "rating": 2500,
    "tags": [
      "geometry",
      "ternary search"
    ]
  },
  {
    "id": "1096/F",
    "contestId": 1096,
    "index": "F",
    "name": "Inversion Expectation",
    "rating": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1975/B",
    "contestId": 1975,
    "index": "B",
    "name": "378QAQ and Mocha's Array",
    "rating": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1671/C",
    "contestId": 1671,
    "index": "C",
    "name": "Dolce Vita",
    "rating": 1200,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1916/A",
    "contestId": 1916,
    "index": "A",
    "name": "2023",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "166/B",
    "contestId": 166,
    "index": "B",
    "name": "Polygons",
    "rating": 2100,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "900/E",
    "contestId": 900,
    "index": "E",
    "name": "Maximum Questions",
    "rating": 2100,
    "tags": [
      "data structures",
      "dp",
      "strings"
    ]
  },
  {
    "id": "270/A",
    "contestId": 270,
    "index": "A",
    "name": "Fancy Fence",
    "rating": 1100,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "996/A",
    "contestId": 996,
    "index": "A",
    "name": "Hit the Lottery",
    "rating": 800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1630/E",
    "contestId": 1630,
    "index": "E",
    "name": "Expected Components",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "id": "669/A",
    "contestId": 669,
    "index": "A",
    "name": "Little Artem and Presents",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "681/B",
    "contestId": 681,
    "index": "B",
    "name": "Economy Game",
    "rating": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1264/C",
    "contestId": 1264,
    "index": "C",
    "name": "Beautiful Mirrors with queries",
    "rating": 2400,
    "tags": [
      "data structures",
      "probabilities"
    ]
  },
  {
    "id": "11/C",
    "contestId": 11,
    "index": "C",
    "name": "How Many Squares?",
    "rating": 2200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "105/A",
    "contestId": 105,
    "index": "A",
    "name": "Transmigration",
    "rating": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1328/C",
    "contestId": 1328,
    "index": "C",
    "name": "Ternary XOR",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "830/B",
    "contestId": 830,
    "index": "B",
    "name": "Cards Sorting",
    "rating": 1600,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1215/F",
    "contestId": 1215,
    "index": "F",
    "name": "Radio Stations",
    "rating": 2700,
    "tags": [
      "2-sat"
    ]
  },
  {
    "id": "855/E",
    "contestId": 855,
    "index": "E",
    "name": "Salazar Slytherin's Locket",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "173/B",
    "contestId": 173,
    "index": "B",
    "name": "Chamber of Secrets",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "shortest paths"
    ]
  },
  {
    "id": "1794/D",
    "contestId": 1794,
    "index": "D",
    "name": "Counting Factorizations",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "54/E",
    "contestId": 54,
    "index": "E",
    "name": "Vacuum Сleaner",
    "rating": 2700,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1380/F",
    "contestId": 1380,
    "index": "F",
    "name": "Strange Addition",
    "rating": 2600,
    "tags": [
      "data structures",
      "dp",
      "matrices"
    ]
  },
  {
    "id": "340/A",
    "contestId": 340,
    "index": "A",
    "name": "The Wall",
    "rating": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1882/D",
    "contestId": 1882,
    "index": "D",
    "name": "Tree XOR",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "61/B",
    "contestId": 61,
    "index": "B",
    "name": "Hard Work",
    "rating": 1300,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "6/E",
    "contestId": 6,
    "index": "E",
    "name": "Exposition",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "950/A",
    "contestId": 950,
    "index": "A",
    "name": "Left-handers, Right-handers and Ambidexters",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1882/B",
    "contestId": 1882,
    "index": "B",
    "name": "Sets and Union",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "610/B",
    "contestId": 610,
    "index": "B",
    "name": "Vika and Squares",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1684/D",
    "contestId": 1684,
    "index": "D",
    "name": "Traps",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1521/E",
    "contestId": 1521,
    "index": "E",
    "name": "Nastia and a Beautiful Matrix",
    "rating": 2700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "10/B",
    "contestId": 10,
    "index": "B",
    "name": "Cinema Cashier",
    "rating": 1500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "219/A",
    "contestId": 219,
    "index": "A",
    "name": "k-String",
    "rating": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1910/I",
    "contestId": 1910,
    "index": "I",
    "name": "Inverse Problem",
    "rating": 2700,
    "tags": [
      "*special",
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "521/D",
    "contestId": 521,
    "index": "D",
    "name": "Shop",
    "rating": 2800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "300/E",
    "contestId": 300,
    "index": "E",
    "name": "Empire Strikes Back",
    "rating": 2300,
    "tags": [
      "binary search",
      "math",
      "number theory"
    ]
  },
  {
    "id": "637/D",
    "contestId": 637,
    "index": "D",
    "name": "Running with Obstacles",
    "rating": 1600,
    "tags": [
      "*special",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1764/D",
    "contestId": 1764,
    "index": "D",
    "name": "Doremy's Pegging Game",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "724/F",
    "contestId": 724,
    "index": "F",
    "name": "Uniformly Branched Trees",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1725/C",
    "contestId": 1725,
    "index": "C",
    "name": "Circular Mirror",
    "rating": 2000,
    "tags": [
      "binary search",
      "combinatorics",
      "geometry",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "268/C",
    "contestId": 268,
    "index": "C",
    "name": "Beautiful Sets of Points",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "409/F",
    "contestId": 409,
    "index": "F",
    "name": "000001",
    "rating": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1916/C",
    "contestId": 1916,
    "index": "C",
    "name": "Training Before the Olympiad",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1557/D",
    "contestId": 1557,
    "index": "D",
    "name": "Ezzat and Grid",
    "rating": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "666/C",
    "contestId": 666,
    "index": "C",
    "name": "Codeword",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "strings"
    ]
  },
  {
    "id": "709/B",
    "contestId": 709,
    "index": "B",
    "name": "Checkpoints",
    "rating": 1500,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1866/H",
    "contestId": 1866,
    "index": "H",
    "name": "Happy Sets",
    "rating": 2100,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "id": "66/D",
    "contestId": 66,
    "index": "D",
    "name": "Petya and His Friends",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1268/C",
    "contestId": 1268,
    "index": "C",
    "name": "K Integers",
    "rating": 2300,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1968/D",
    "contestId": 1968,
    "index": "D",
    "name": "Permutation Game",
    "rating": 1300,
    "tags": [
      "brute force",
      "dfs and similar",
      "games",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1167/C",
    "contestId": 1167,
    "index": "C",
    "name": "News Distribution",
    "rating": 1400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1919/G",
    "contestId": 1919,
    "index": "G",
    "name": "Tree LGM",
    "rating": 3500,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "games",
      "trees"
    ]
  },
  {
    "id": "116/B",
    "contestId": 116,
    "index": "B",
    "name": "Little Pigs and Wolves",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1543/E",
    "contestId": 1543,
    "index": "E",
    "name": "The Final Pursuit",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "id": "965/C",
    "contestId": 965,
    "index": "C",
    "name": "Greedy Arkady",
    "rating": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "838/E",
    "contestId": 838,
    "index": "E",
    "name": "Convex Countour",
    "rating": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "374/E",
    "contestId": 374,
    "index": "E",
    "name": "Inna and Babies",
    "rating": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "877/C",
    "contestId": 877,
    "index": "C",
    "name": "Slava and tanks",
    "rating": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "622/C",
    "contestId": 622,
    "index": "C",
    "name": "Not Equal on a Segment",
    "rating": 1700,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "110/A",
    "contestId": 110,
    "index": "A",
    "name": "Nearly Lucky Number",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "741/E",
    "contestId": 741,
    "index": "E",
    "name": "Arpa’s abnormal DNA and Mehrdad’s deep interest",
    "rating": 3400,
    "tags": [
      "data structures",
      "string suffix structures"
    ]
  },
  {
    "id": "990/A",
    "contestId": 990,
    "index": "A",
    "name": "Commentary Boxes",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1202/A",
    "contestId": 1202,
    "index": "A",
    "name": "You Are Given Two Binary Strings...",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "id": "1956/E1",
    "contestId": 1956,
    "index": "E1",
    "name": "Nene vs. Monsters (Easy Version)",
    "rating": 2500,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1793/D",
    "contestId": 1793,
    "index": "D",
    "name": "Moscow Gorillas",
    "rating": 1800,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1490/E",
    "contestId": 1490,
    "index": "E",
    "name": "Accidental Victory",
    "rating": 1400,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "585/E",
    "contestId": 585,
    "index": "E",
    "name": "Present for Vitalik the Philatelist",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1534/F2",
    "contestId": 1534,
    "index": "F2",
    "name": "Falling Sand (Hard Version)",
    "rating": 3000,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "12/D",
    "contestId": 12,
    "index": "D",
    "name": "Ball",
    "rating": 2400,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "847/B",
    "contestId": 847,
    "index": "B",
    "name": "Preparing for Merge Sort",
    "rating": 1600,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "460/A",
    "contestId": 460,
    "index": "A",
    "name": "Vasya and Socks",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1084/A",
    "contestId": 1084,
    "index": "A",
    "name": "The Fair Nut and Elevator",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "835/B",
    "contestId": 835,
    "index": "B",
    "name": "The number on the board",
    "rating": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1201/D",
    "contestId": 1201,
    "index": "D",
    "name": "Treasure Hunting",
    "rating": 2100,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "807/A",
    "contestId": 807,
    "index": "A",
    "name": "Is it rated?",
    "rating": 900,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1582/A",
    "contestId": 1582,
    "index": "A",
    "name": "Luntik and Concerts",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1501/A",
    "contestId": 1501,
    "index": "A",
    "name": "Alexey and Train",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1703/D",
    "contestId": 1703,
    "index": "D",
    "name": "Double Strings",
    "rating": 1100,
    "tags": [
      "brute force",
      "data structures",
      "strings"
    ]
  },
  {
    "id": "96/B",
    "contestId": 96,
    "index": "B",
    "name": "Lucky Numbers (easy)",
    "rating": 1300,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force"
    ]
  },
  {
    "id": "203/A",
    "contestId": 203,
    "index": "A",
    "name": "Two Problems",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "850/B",
    "contestId": 850,
    "index": "B",
    "name": "Arpa and a list of numbers",
    "rating": 2100,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "1628/D1",
    "contestId": 1628,
    "index": "D1",
    "name": "Game on Sum (Easy Version)",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "games",
      "math"
    ]
  },
  {
    "id": "671/B",
    "contestId": 671,
    "index": "B",
    "name": "Robin Hood",
    "rating": 2000,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "862/C",
    "contestId": 862,
    "index": "C",
    "name": "Mahmoud and Ehab and the xor",
    "rating": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "547/E",
    "contestId": 547,
    "index": "E",
    "name": "Mike and Friends",
    "rating": 2800,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1010/C",
    "contestId": 1010,
    "index": "C",
    "name": "Border",
    "rating": 1800,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "1951/B",
    "contestId": 1951,
    "index": "B",
    "name": "Battle Cows",
    "rating": 1200,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "351/A",
    "contestId": 351,
    "index": "A",
    "name": "Jeff and Rounding",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1889/C1",
    "contestId": 1889,
    "index": "C1",
    "name": "Doremy's Drying Plan (Easy Version)",
    "rating": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1926/B",
    "contestId": 1926,
    "index": "B",
    "name": "Vlad and Shapes",
    "rating": 800,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "720/D",
    "contestId": 720,
    "index": "D",
    "name": "Slalom",
    "rating": 3100,
    "tags": [
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "id": "1183/D",
    "contestId": 1183,
    "index": "D",
    "name": "Candy Box (easy version)",
    "rating": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "560/B",
    "contestId": 560,
    "index": "B",
    "name": "Gerald is into Art",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "44/I",
    "contestId": 44,
    "index": "I",
    "name": "Toys",
    "rating": 2300,
    "tags": [
      "brute force",
      "combinatorics"
    ]
  },
  {
    "id": "1092/F",
    "contestId": 1092,
    "index": "F",
    "name": "Tree with Maximum Cost",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1930/D2",
    "contestId": 1930,
    "index": "D2",
    "name": "Sum over all Substrings (Hard Version)",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "656/A",
    "contestId": 656,
    "index": "A",
    "name": "Da Vinci Powers",
    "rating": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1834/D",
    "contestId": 1834,
    "index": "D",
    "name": "Survey in Class",
    "rating": 1900,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "605/B",
    "contestId": 605,
    "index": "B",
    "name": "Lazy Student",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs"
    ]
  },
  {
    "id": "466/B",
    "contestId": 466,
    "index": "B",
    "name": "Wonder Room",
    "rating": 2000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1891/E",
    "contestId": 1891,
    "index": "E",
    "name": "Brukhovich and Exams",
    "rating": 2500,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "592/D",
    "contestId": 592,
    "index": "D",
    "name": "Super M",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1234/E",
    "contestId": 1234,
    "index": "E",
    "name": "Special Permutations",
    "rating": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1971/E",
    "contestId": 1971,
    "index": "E",
    "name": "Find the Car",
    "rating": 1500,
    "tags": [
      "binary search",
      "math",
      "sortings"
    ]
  },
  {
    "id": "612/E",
    "contestId": 612,
    "index": "E",
    "name": "Square Root of Permutation",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "id": "617/A",
    "contestId": 617,
    "index": "A",
    "name": "Elephant",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1713/A",
    "contestId": 1713,
    "index": "A",
    "name": "Traveling Salesman Problem",
    "rating": 800,
    "tags": [
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "53/B",
    "contestId": 53,
    "index": "B",
    "name": "Blog Photo",
    "rating": 1700,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "id": "1846/G",
    "contestId": 1846,
    "index": "G",
    "name": "Rudolf and CodeVid-23",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "49/B",
    "contestId": 49,
    "index": "B",
    "name": "Sum",
    "rating": 1500,
    "tags": [
      "math"
    ]
  },
  {
    "id": "990/B",
    "contestId": 990,
    "index": "B",
    "name": "Micro-World",
    "rating": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1107/D",
    "contestId": 1107,
    "index": "D",
    "name": "Compression",
    "rating": 1800,
    "tags": [
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1777/E",
    "contestId": 1777,
    "index": "E",
    "name": "Edge Reverse",
    "rating": 2200,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1887/D",
    "contestId": 1887,
    "index": "D",
    "name": "Split",
    "rating": 2700,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dsu",
      "math",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "66/A",
    "contestId": 66,
    "index": "A",
    "name": "Petya and Java",
    "rating": 1300,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1085/B",
    "contestId": 1085,
    "index": "B",
    "name": "Div Times Mod",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1140/B",
    "contestId": 1140,
    "index": "B",
    "name": "Good String",
    "rating": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "850/E",
    "contestId": 850,
    "index": "E",
    "name": "Random Elections",
    "rating": 2800,
    "tags": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "fft",
      "math"
    ]
  },
  {
    "id": "1063/B",
    "contestId": 1063,
    "index": "B",
    "name": "Labyrinth",
    "rating": 1800,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1051/C",
    "contestId": 1051,
    "index": "C",
    "name": "Vasya and Multisets",
    "rating": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "627/A",
    "contestId": 627,
    "index": "A",
    "name": "XOR Equation",
    "rating": 1700,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "363/D",
    "contestId": 363,
    "index": "D",
    "name": "Renting Bikes",
    "rating": 1800,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "587/C",
    "contestId": 587,
    "index": "C",
    "name": "Duff in the Army",
    "rating": 2200,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1669/A",
    "contestId": 1669,
    "index": "A",
    "name": "Division?",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1470/B",
    "contestId": 1470,
    "index": "B",
    "name": "Strange Definition",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "graphs",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "id": "558/B",
    "contestId": 558,
    "index": "B",
    "name": "Amr and The Large Array",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "107/A",
    "contestId": 107,
    "index": "A",
    "name": "Dorm Water Supply",
    "rating": 1400,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1399/A",
    "contestId": 1399,
    "index": "A",
    "name": "Remove Smallest",
    "rating": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1583/H",
    "contestId": 1583,
    "index": "H",
    "name": "Omkar and Tours",
    "rating": 3300,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1455/C",
    "contestId": 1455,
    "index": "C",
    "name": "Ping-pong",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "games",
      "math"
    ]
  },
  {
    "id": "1121/B",
    "contestId": 1121,
    "index": "B",
    "name": "Mike and Children",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1097/D",
    "contestId": 1097,
    "index": "D",
    "name": "Makoto and a Blackboard",
    "rating": 2200,
    "tags": [
      "dp",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "id": "403/E",
    "contestId": 403,
    "index": "E",
    "name": "Two Rooted Trees",
    "rating": 2900,
    "tags": [
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "962/E",
    "contestId": 962,
    "index": "E",
    "name": "Byteland, Berland and Disputed Cities",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1656/H",
    "contestId": 1656,
    "index": "H",
    "name": "Equal LCM Subsets",
    "rating": 3200,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "id": "181/B",
    "contestId": 181,
    "index": "B",
    "name": "Number of Triplets",
    "rating": 1300,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "id": "1108/C",
    "contestId": 1108,
    "index": "C",
    "name": "Nice Garland",
    "rating": 1300,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "120/C",
    "contestId": 120,
    "index": "C",
    "name": "Winnie-the-Pooh and honey",
    "rating": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "409/A",
    "contestId": 409,
    "index": "A",
    "name": "The Great Game",
    "rating": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "449/A",
    "contestId": 449,
    "index": "A",
    "name": "Jzzhu and Chocolate",
    "rating": 1700,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1336/F",
    "contestId": 1336,
    "index": "F",
    "name": "Journey",
    "rating": 3500,
    "tags": [
      "data structures",
      "divide and conquer",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "650/B",
    "contestId": 650,
    "index": "B",
    "name": "Image Preview",
    "rating": 1900,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "570/D",
    "contestId": 570,
    "index": "D",
    "name": "Tree Requests",
    "rating": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "677/C",
    "contestId": 677,
    "index": "C",
    "name": "Vanya and Label",
    "rating": 1500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "988/E",
    "contestId": 988,
    "index": "E",
    "name": "Divisibility by 25",
    "rating": 2100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1943/B",
    "contestId": 1943,
    "index": "B",
    "name": "Non-Palindromic Substring",
    "rating": 2000,
    "tags": [
      "hashing",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "id": "1105/A",
    "contestId": 1105,
    "index": "A",
    "name": "Salem and Sticks",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "368/A",
    "contestId": 368,
    "index": "A",
    "name": "Sereja and Coat Rack",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1692/G",
    "contestId": 1692,
    "index": "G",
    "name": "2^Sort",
    "rating": 1400,
    "tags": [
      "data structures",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1632/B",
    "contestId": 1632,
    "index": "B",
    "name": "Roof Construction",
    "rating": 1000,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "id": "1559/A",
    "contestId": 1559,
    "index": "A",
    "name": "Mocha and Math",
    "rating": 900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "145/A",
    "contestId": 145,
    "index": "A",
    "name": "Lucky Conversion",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1554/B",
    "contestId": 1554,
    "index": "B",
    "name": "Cobb",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1855/B",
    "contestId": 1855,
    "index": "B",
    "name": "Longest Divisors Interval",
    "rating": 900,
    "tags": [
      "brute force",
      "combinatorics",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1792/E",
    "contestId": 1792,
    "index": "E",
    "name": "Divisors and Table",
    "rating": 2400,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "number theory"
    ]
  },
  {
    "id": "1221/C",
    "contestId": 1221,
    "index": "C",
    "name": "Perfect Team",
    "rating": 1200,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "1015/B",
    "contestId": 1015,
    "index": "B",
    "name": "Obtaining the String",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1717/C",
    "contestId": 1717,
    "index": "C",
    "name": "Madoka and Formal Statement",
    "rating": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1997/A",
    "contestId": 1997,
    "index": "A",
    "name": "Strong Password",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1384/A",
    "contestId": 1384,
    "index": "A",
    "name": "Common Prefixes",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1618/C",
    "contestId": 1618,
    "index": "C",
    "name": "Paint the Array",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1466/G",
    "contestId": 1466,
    "index": "G",
    "name": "Song of the Sirens",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "hashing",
      "math",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1896/E",
    "contestId": 1896,
    "index": "E",
    "name": "Permutation Sorting",
    "rating": 2100,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1774/C",
    "contestId": 1774,
    "index": "C",
    "name": "Ice and Fire",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1729/F",
    "contestId": 1729,
    "index": "F",
    "name": "Kirei and the Linear Function",
    "rating": 1900,
    "tags": [
      "hashing",
      "math"
    ]
  },
  {
    "id": "1530/C",
    "contestId": 1530,
    "index": "C",
    "name": "Pursuit",
    "rating": 1200,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "645/B",
    "contestId": 645,
    "index": "B",
    "name": "Mischievous Mess Makers",
    "rating": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1152/E",
    "contestId": 1152,
    "index": "E",
    "name": "Neko and Flashback",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "58/D",
    "contestId": 58,
    "index": "D",
    "name": "Calendar",
    "rating": 2000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1558/B",
    "contestId": 1558,
    "index": "B",
    "name": "Up the Strip",
    "rating": 1900,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "293/E",
    "contestId": 293,
    "index": "E",
    "name": "Close Vertices",
    "rating": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "id": "1214/F",
    "contestId": 1214,
    "index": "F",
    "name": "Employment",
    "rating": 2700,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "133/B",
    "contestId": 133,
    "index": "B",
    "name": "Unary",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "158/B",
    "contestId": 158,
    "index": "B",
    "name": "Taxi",
    "rating": 1100,
    "tags": [
      "*special",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "702/D",
    "contestId": 702,
    "index": "D",
    "name": "Road to Post Office",
    "rating": 1900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1680/E",
    "contestId": 1680,
    "index": "E",
    "name": "Moving Chips",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1779/A",
    "contestId": 1779,
    "index": "A",
    "name": "Hall of Fame",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "645/A",
    "contestId": 645,
    "index": "A",
    "name": "Amity Assessment",
    "rating": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "743/B",
    "contestId": 743,
    "index": "B",
    "name": "Chloe and the sequence",
    "rating": 1200,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "755/A",
    "contestId": 755,
    "index": "A",
    "name": "PolandBall and Hypothesis",
    "rating": 800,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1209/C",
    "contestId": 1209,
    "index": "C",
    "name": "Paint the Digits",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "785/A",
    "contestId": 785,
    "index": "A",
    "name": "Anton and Polyhedrons",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1295/E",
    "contestId": 1295,
    "index": "E",
    "name": "Permutation Separation",
    "rating": 2200,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "id": "1921/B",
    "contestId": 1921,
    "index": "B",
    "name": "Arranging Cats",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "865/A",
    "contestId": 865,
    "index": "A",
    "name": "Save the problem!",
    "rating": 1400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1860/A",
    "contestId": 1860,
    "index": "A",
    "name": "Not a Substring",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "1399/C",
    "contestId": 1399,
    "index": "C",
    "name": "Boats Competition",
    "rating": 1200,
    "tags": [
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1693/C",
    "contestId": 1693,
    "index": "C",
    "name": "Keshi in Search of AmShZ",
    "rating": 2300,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "1393/E1",
    "contestId": 1393,
    "index": "E1",
    "name": "Twilight and Ancient Scroll (easier version)",
    "rating": 2800,
    "tags": [
      "dp",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "913/D",
    "contestId": 913,
    "index": "D",
    "name": "Too Easy Problems",
    "rating": 1800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "958/F3",
    "contestId": 958,
    "index": "F3",
    "name": "Lightsabers (hard)",
    "rating": 2600,
    "tags": [
      "fft"
    ]
  },
  {
    "id": "1301/C",
    "contestId": 1301,
    "index": "C",
    "name": "Ayoub's function",
    "rating": 1700,
    "tags": [
      "binary search",
      "combinatorics",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "1514/B",
    "contestId": 1514,
    "index": "B",
    "name": "AND 0, Sum Big",
    "rating": 1200,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "501/D",
    "contestId": 501,
    "index": "D",
    "name": "Misha and Permutations Summation",
    "rating": 2000,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "730/H",
    "contestId": 730,
    "index": "H",
    "name": "Delete Them",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "597/C",
    "contestId": 597,
    "index": "C",
    "name": "Subsequences",
    "rating": 1900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1599/C",
    "contestId": 1599,
    "index": "C",
    "name": "Bubble Strike",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "math",
      "probabilities",
      "ternary search"
    ]
  },
  {
    "id": "911/B",
    "contestId": 911,
    "index": "B",
    "name": "Two Cakes",
    "rating": 1200,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1404/A",
    "contestId": 1404,
    "index": "A",
    "name": "Balanced Bitstring",
    "rating": 1500,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1747/B",
    "contestId": 1747,
    "index": "B",
    "name": "BAN BAN",
    "rating": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "932/F",
    "contestId": 932,
    "index": "F",
    "name": "Escape Through Leaf",
    "rating": 2700,
    "tags": [
      "data structures",
      "dp",
      "geometry"
    ]
  },
  {
    "id": "439/E",
    "contestId": 439,
    "index": "E",
    "name": "Devu and Birthday Celebration",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1439/E",
    "contestId": 1439,
    "index": "E",
    "name": "Cheat and Win",
    "rating": 3500,
    "tags": [
      "bitmasks",
      "data structures",
      "games",
      "trees"
    ]
  },
  {
    "id": "1791/B",
    "contestId": 1791,
    "index": "B",
    "name": "Following Directions",
    "rating": 800,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "689/A",
    "contestId": 689,
    "index": "A",
    "name": "Mike and Cellphone",
    "rating": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1987/B",
    "contestId": 1987,
    "index": "B",
    "name": "K-Sort",
    "rating": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1538/D",
    "contestId": 1538,
    "index": "D",
    "name": "Another Problem About Dividing Numbers",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1735/B",
    "contestId": 1735,
    "index": "B",
    "name": "Tea with Tangerines",
    "rating": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1718/F",
    "contestId": 1718,
    "index": "F",
    "name": "Burenka, an Array and Queries",
    "rating": 3300,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1967/E1",
    "contestId": 1967,
    "index": "E1",
    "name": "Again Counting Arrays (Easy Version)",
    "rating": 3100,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "44/H",
    "contestId": 44,
    "index": "H",
    "name": "Phone Number",
    "rating": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1887/C",
    "contestId": 1887,
    "index": "C",
    "name": "Minimum Array",
    "rating": 2400,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "hashing",
      "two pointers"
    ]
  },
  {
    "id": "1285/C",
    "contestId": 1285,
    "index": "C",
    "name": "Fadi and LCM",
    "rating": 1400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1739/B",
    "contestId": 1739,
    "index": "B",
    "name": "Array Recovery",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "823/A",
    "contestId": 823,
    "index": "A",
    "name": "High Load",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "182/B",
    "contestId": 182,
    "index": "B",
    "name": "Vasya's Calendar",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1113/A",
    "contestId": 1113,
    "index": "A",
    "name": "Sasha and His Trip",
    "rating": 900,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1017/E",
    "contestId": 1017,
    "index": "E",
    "name": "The Supersonic Rocket",
    "rating": 2400,
    "tags": [
      "geometry",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1991/B",
    "contestId": 1991,
    "index": "B",
    "name": "AND Reconstruction",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "859/B",
    "contestId": 859,
    "index": "B",
    "name": "Lazy Security Guard",
    "rating": 1000,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "id": "291/D",
    "contestId": 291,
    "index": "D",
    "name": "Parallel Programming",
    "rating": 1600,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "id": "1567/C",
    "contestId": 1567,
    "index": "C",
    "name": "Carrying Conundrum",
    "rating": 1600,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1511/A",
    "contestId": 1511,
    "index": "A",
    "name": "Review Site",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1891/D",
    "contestId": 1891,
    "index": "D",
    "name": "Suspicious logarithms",
    "rating": 1900,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "id": "1488/B",
    "contestId": 1488,
    "index": "B",
    "name": "RBS Deletion",
    "rating": 1800,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "id": "1651/A",
    "contestId": 1651,
    "index": "A",
    "name": "Playoff",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1469/D",
    "contestId": 1469,
    "index": "D",
    "name": "Ceil Divisions",
    "rating": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "845/E",
    "contestId": 845,
    "index": "E",
    "name": "Fire in the City",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1719/C",
    "contestId": 1719,
    "index": "C",
    "name": "Fighting Tournament",
    "rating": 1400,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1618/B",
    "contestId": 1618,
    "index": "B",
    "name": "Missing Bigram",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1635/E",
    "contestId": 1635,
    "index": "E",
    "name": "Cars",
    "rating": 2200,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "48/G",
    "contestId": 48,
    "index": "G",
    "name": "Galaxy Union",
    "rating": 2700,
    "tags": [
      "dp",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "1801/C",
    "contestId": 1801,
    "index": "C",
    "name": "Music Festival",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1056/B",
    "contestId": 1056,
    "index": "B",
    "name": "Divide Candies",
    "rating": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1139/B",
    "contestId": 1139,
    "index": "B",
    "name": "Chocolates",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "146/A",
    "contestId": 146,
    "index": "A",
    "name": "Lucky Ticket",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "914/G",
    "contestId": 914,
    "index": "G",
    "name": "Sum the Fibonacci",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "228/A",
    "contestId": 228,
    "index": "A",
    "name": "Is your horseshoe on the other hoof?",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1436/C",
    "contestId": 1436,
    "index": "C",
    "name": "Binary Search",
    "rating": 1500,
    "tags": [
      "binary search",
      "combinatorics"
    ]
  },
  {
    "id": "437/C",
    "contestId": 437,
    "index": "C",
    "name": "The Child and Toy",
    "rating": 1400,
    "tags": [
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1788/B",
    "contestId": 1788,
    "index": "B",
    "name": "Sum of Two Numbers",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1783/C",
    "contestId": 1783,
    "index": "C",
    "name": "Yet Another Tournament",
    "rating": 1700,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1706/A",
    "contestId": 1706,
    "index": "A",
    "name": "Another String Minimization Problem",
    "rating": 800,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "greedy",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1454/F",
    "contestId": 1454,
    "index": "F",
    "name": "Array Partition",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1368/B",
    "contestId": 1368,
    "index": "B",
    "name": "Codeforces Subsequences",
    "rating": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "271/B",
    "contestId": 271,
    "index": "B",
    "name": "Prime Matrix",
    "rating": 1300,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1158/D",
    "contestId": 1158,
    "index": "D",
    "name": "Winding polygonal line",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "id": "370/C",
    "contestId": 370,
    "index": "C",
    "name": "Mittens",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "652/C",
    "contestId": 652,
    "index": "C",
    "name": "Foe Pairs",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1488/D",
    "contestId": 1488,
    "index": "D",
    "name": "Problemsolving Marathon",
    "rating": 1900,
    "tags": [
      "*special",
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "1613/D",
    "contestId": 1613,
    "index": "D",
    "name": "MEX Sequences",
    "rating": 1900,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "786/B",
    "contestId": 786,
    "index": "B",
    "name": "Legacy",
    "rating": 2300,
    "tags": [
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "141/C",
    "contestId": 141,
    "index": "C",
    "name": "Queue",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "67/B",
    "contestId": 67,
    "index": "B",
    "name": "Restoration of the Permutation",
    "rating": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1923/D",
    "contestId": 1923,
    "index": "D",
    "name": "Slimes",
    "rating": 1800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "925/A",
    "contestId": 925,
    "index": "A",
    "name": "Stairs and Elevators",
    "rating": 1600,
    "tags": [
      "binary search"
    ]
  },
  {
    "id": "1978/C",
    "contestId": 1978,
    "index": "C",
    "name": "Manhattan Permutations",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "652/D",
    "contestId": 652,
    "index": "D",
    "name": "Nested Segments",
    "rating": 1800,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1870/F",
    "contestId": 1870,
    "index": "F",
    "name": "Lazy Numbers",
    "rating": 2900,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "965/A",
    "contestId": 965,
    "index": "A",
    "name": "Paper Airplanes",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "290/A",
    "contestId": 290,
    "index": "A",
    "name": "Mysterious strings",
    "rating": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "441/C",
    "contestId": 441,
    "index": "C",
    "name": "Valera and Tubes",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "id": "748/A",
    "contestId": 748,
    "index": "A",
    "name": "Santa Claus and a Place in a Class",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1190/D",
    "contestId": 1190,
    "index": "D",
    "name": "Tokitsukaze and Strange Rectangle",
    "rating": 2000,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1863/E",
    "contestId": 1863,
    "index": "E",
    "name": "Speedrun",
    "rating": 2100,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1927/D",
    "contestId": 1927,
    "index": "D",
    "name": "Find the Different Ones!",
    "rating": 1300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "817/B",
    "contestId": 817,
    "index": "B",
    "name": "Makes And The Product",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1775/C",
    "contestId": 1775,
    "index": "C",
    "name": "Interesting Sequence",
    "rating": 1600,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "id": "1513/C",
    "contestId": 1513,
    "index": "C",
    "name": "Add One",
    "rating": 1600,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "1433/A",
    "contestId": 1433,
    "index": "A",
    "name": "Boring Apartments",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1436/F",
    "contestId": 1436,
    "index": "F",
    "name": "Sum Over Subsets",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "627/F",
    "contestId": 627,
    "index": "F",
    "name": "Island Puzzle",
    "rating": 3400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1175/B",
    "contestId": 1175,
    "index": "B",
    "name": "Catch Overflow!",
    "rating": 1600,
    "tags": [
      "data structures",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "id": "45/A",
    "contestId": 45,
    "index": "A",
    "name": "Codecraft III",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1454/B",
    "contestId": 1454,
    "index": "B",
    "name": "Unique Bid Auction",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "884/D",
    "contestId": 884,
    "index": "D",
    "name": "Boxes And Balls",
    "rating": 2300,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1749/C",
    "contestId": 1749,
    "index": "C",
    "name": "Number Game",
    "rating": 1400,
    "tags": [
      "binary search",
      "data structures",
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "232/A",
    "contestId": 232,
    "index": "A",
    "name": "Cycles",
    "rating": 1600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "474/B",
    "contestId": 474,
    "index": "B",
    "name": "Worms",
    "rating": 1200,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "id": "1443/C",
    "contestId": 1443,
    "index": "C",
    "name": "The Delivery Dilemma",
    "rating": 1400,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1132/B",
    "contestId": 1132,
    "index": "B",
    "name": "Discounts",
    "rating": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1076/A",
    "contestId": 1076,
    "index": "A",
    "name": "Minimizing the String",
    "rating": 1200,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "900/B",
    "contestId": 900,
    "index": "B",
    "name": "Position in Fraction",
    "rating": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "78/C",
    "contestId": 78,
    "index": "C",
    "name": "Beaver Game",
    "rating": 2000,
    "tags": [
      "dp",
      "games",
      "number theory"
    ]
  },
  {
    "id": "19/C",
    "contestId": 19,
    "index": "C",
    "name": "Deletion of Repeats",
    "rating": 2200,
    "tags": [
      "greedy",
      "hashing",
      "string suffix structures"
    ]
  },
  {
    "id": "451/D",
    "contestId": 451,
    "index": "D",
    "name": "Count Good Substrings",
    "rating": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "296/A",
    "contestId": 296,
    "index": "A",
    "name": "Yaroslav and Permutations",
    "rating": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "594/C",
    "contestId": 594,
    "index": "C",
    "name": "Edo and Magnets",
    "rating": 2300,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "964/B",
    "contestId": 964,
    "index": "B",
    "name": "Messages",
    "rating": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "id": "922/D",
    "contestId": 922,
    "index": "D",
    "name": "Robot Vacuum Cleaner",
    "rating": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "893/F",
    "contestId": 893,
    "index": "F",
    "name": "Subtree Minimum Query",
    "rating": 2300,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1864/A",
    "contestId": 1864,
    "index": "A",
    "name": "Increasing and Decreasing",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "746/A",
    "contestId": 746,
    "index": "A",
    "name": "Compote",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "272/C",
    "contestId": 272,
    "index": "C",
    "name": "Dima and Staircase",
    "rating": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "848/C",
    "contestId": 848,
    "index": "C",
    "name": "Goodbye Souvenir",
    "rating": 2600,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "id": "802/J",
    "contestId": 802,
    "index": "J",
    "name": "Send the Fool Further! (easy)",
    "rating": 1400,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1753/B",
    "contestId": 1753,
    "index": "B",
    "name": "Factorial Divisibility",
    "rating": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "245/D",
    "contestId": 245,
    "index": "D",
    "name": "Restoring Table",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "658/A",
    "contestId": 658,
    "index": "A",
    "name": "Bear and Reverse Radewoosh",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1772/C",
    "contestId": 1772,
    "index": "C",
    "name": "Different Differences",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1386/C",
    "contestId": 1386,
    "index": "C",
    "name": "Joker",
    "rating": 2800,
    "tags": [
      "*special",
      "bitmasks",
      "data structures",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "id": "990/D",
    "contestId": 990,
    "index": "D",
    "name": "Graph And Its Complement",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "196/C",
    "contestId": 196,
    "index": "C",
    "name": "Paint Tree",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "geometry",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1313/A",
    "contestId": 1313,
    "index": "A",
    "name": "Fast Food Restaurant",
    "rating": 900,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "109/A",
    "contestId": 109,
    "index": "A",
    "name": "Lucky Sum of Digits",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1906/K",
    "contestId": 1906,
    "index": "K",
    "name": "Deck-Building Game",
    "rating": 2500,
    "tags": [
      "divide and conquer",
      "math"
    ]
  },
  {
    "id": "778/A",
    "contestId": 778,
    "index": "A",
    "name": "String Game",
    "rating": 1700,
    "tags": [
      "binary search",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "690/D2",
    "contestId": 690,
    "index": "D2",
    "name": "The Wall (medium)",
    "rating": 1800,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "id": "1365/D",
    "contestId": 1365,
    "index": "D",
    "name": "Solve The Maze",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "1575/G",
    "contestId": 1575,
    "index": "G",
    "name": "GCD Festival",
    "rating": 2200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1496/A",
    "contestId": 1496,
    "index": "A",
    "name": "Split it!",
    "rating": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "245/A",
    "contestId": 245,
    "index": "A",
    "name": "System Administrator",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "245/B",
    "contestId": 245,
    "index": "B",
    "name": "Internet Address",
    "rating": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1763/B",
    "contestId": 1763,
    "index": "B",
    "name": "Incinerate",
    "rating": 1200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1334/E",
    "contestId": 1334,
    "index": "E",
    "name": "Divisor Paths",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "graphs",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1690/C",
    "contestId": 1690,
    "index": "C",
    "name": "Restoring the Duration of Tasks",
    "rating": 800,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "864/B",
    "contestId": 864,
    "index": "B",
    "name": "Polycarp and Letters",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1488/G",
    "contestId": 1488,
    "index": "G",
    "name": "Painting Numbers",
    "rating": 2500,
    "tags": [
      "*special",
      "data structures",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1764/H",
    "contestId": 1764,
    "index": "H",
    "name": "Doremy's Paint 2",
    "rating": 3400,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1647/A",
    "contestId": 1647,
    "index": "A",
    "name": "Madoka and Math Dad",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1042/B",
    "contestId": 1042,
    "index": "B",
    "name": "Vitamins",
    "rating": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "55/A",
    "contestId": 55,
    "index": "A",
    "name": "Flea travel",
    "rating": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1100/A",
    "contestId": 1100,
    "index": "A",
    "name": "Roman and Browser",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "86/A",
    "contestId": 86,
    "index": "A",
    "name": "Reflection",
    "rating": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1651/B",
    "contestId": 1651,
    "index": "B",
    "name": "Prove Him Wrong",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1292/C",
    "contestId": 1292,
    "index": "C",
    "name": "Xenon's Attack on the Gangs",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1370/B",
    "contestId": 1370,
    "index": "B",
    "name": "GCD Compression",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "779/B",
    "contestId": 779,
    "index": "B",
    "name": "Weird Rounding",
    "rating": 1100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1951/H",
    "contestId": 1951,
    "index": "H",
    "name": "Thanos Snap",
    "rating": 3200,
    "tags": [
      "binary search",
      "dp",
      "games",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1430/A",
    "contestId": 1430,
    "index": "A",
    "name": "Number of Apartments",
    "rating": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1254/A",
    "contestId": 1254,
    "index": "A",
    "name": "Feeding Chicken",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "526/D",
    "contestId": 526,
    "index": "D",
    "name": "Om Nom and Necklace",
    "rating": 2200,
    "tags": [
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1849/E",
    "contestId": 1849,
    "index": "E",
    "name": "Max to the Right of Min",
    "rating": 2300,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "dsu",
      "two pointers"
    ]
  },
  {
    "id": "301/C",
    "contestId": 301,
    "index": "C",
    "name": "Yaroslav and Algorithm",
    "rating": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "58/A",
    "contestId": 58,
    "index": "A",
    "name": "Chat room",
    "rating": 1000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1100/E",
    "contestId": 1100,
    "index": "E",
    "name": "Andrew and Taxi",
    "rating": 2200,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "455/E",
    "contestId": 455,
    "index": "E",
    "name": "Function",
    "rating": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1156/F",
    "contestId": 1156,
    "index": "F",
    "name": "Card Bag",
    "rating": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "500/A",
    "contestId": 500,
    "index": "A",
    "name": "New Year Transportation",
    "rating": 1000,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "31/A",
    "contestId": 31,
    "index": "A",
    "name": "Worms Evolution",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1425/C",
    "contestId": 1425,
    "index": "C",
    "name": "Captain of Knights",
    "rating": 3100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "126/A",
    "contestId": 126,
    "index": "A",
    "name": "Hot Bath",
    "rating": 1900,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "id": "141/E",
    "contestId": 141,
    "index": "E",
    "name": "Clearing Up",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "847/D",
    "contestId": 847,
    "index": "D",
    "name": "Dog Show",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1857/E",
    "contestId": 1857,
    "index": "E",
    "name": "Power of Points",
    "rating": 1500,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "id": "1832/C",
    "contestId": 1832,
    "index": "C",
    "name": "Contrast Value",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1211/B",
    "contestId": 1211,
    "index": "B",
    "name": "Traveling Around the Golden Ring of Berland",
    "rating": 1500,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1095/A",
    "contestId": 1095,
    "index": "A",
    "name": "Repeating Cipher",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "243/A",
    "contestId": 243,
    "index": "A",
    "name": "The Brand New Function",
    "rating": 1600,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "id": "1584/B",
    "contestId": 1584,
    "index": "B",
    "name": "Coloring Rectangles",
    "rating": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "452/D",
    "contestId": 452,
    "index": "D",
    "name": "Washer, Dryer, Folder",
    "rating": 1900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1080/A",
    "contestId": 1080,
    "index": "A",
    "name": "Petya and Origami",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "420/C",
    "contestId": 420,
    "index": "C",
    "name": "Bug in Code",
    "rating": 1900,
    "tags": [
      "data structures",
      "graphs",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "286/A",
    "contestId": 286,
    "index": "A",
    "name": "Lucky Permutation",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1866/J",
    "contestId": 1866,
    "index": "J",
    "name": "Jackets and Packets",
    "rating": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "785/E",
    "contestId": 785,
    "index": "E",
    "name": "Anton and Permutation",
    "rating": 2200,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "id": "1923/F",
    "contestId": 1923,
    "index": "F",
    "name": "Shrink-Reverse",
    "rating": 2800,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1994/C",
    "contestId": 1994,
    "index": "C",
    "name": "Hungry Games",
    "rating": 1600,
    "tags": [
      "binary search",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "171/C",
    "contestId": 171,
    "index": "C",
    "name": "A Piece of Cake",
    "rating": 2000,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "223/A",
    "contestId": 223,
    "index": "A",
    "name": "Bracket Sequence",
    "rating": 1700,
    "tags": [
      "data structures",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "id": "1478/C",
    "contestId": 1478,
    "index": "C",
    "name": "Nezzar and Symmetric Array",
    "rating": 1700,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1569/C",
    "contestId": 1569,
    "index": "C",
    "name": "Jury Meeting",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1004/A",
    "contestId": 1004,
    "index": "A",
    "name": "Sonya and Hotels",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "338/D",
    "contestId": 338,
    "index": "D",
    "name": "GCD Table",
    "rating": 2900,
    "tags": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1245/D",
    "contestId": 1245,
    "index": "D",
    "name": "Shichikuji and Power Grid",
    "rating": 1900,
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "1392/I",
    "contestId": 1392,
    "index": "I",
    "name": "Kevin and Grid",
    "rating": 3300,
    "tags": [
      "fft",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1759/G",
    "contestId": 1759,
    "index": "G",
    "name": "Restore the Permutation",
    "rating": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1857/D",
    "contestId": 1857,
    "index": "D",
    "name": "Strong Vertices",
    "rating": 1300,
    "tags": [
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1264/B",
    "contestId": 1264,
    "index": "B",
    "name": "Beautiful Sequence",
    "rating": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "863/D",
    "contestId": 863,
    "index": "D",
    "name": "Yet Another Array Queries Problem",
    "rating": 1800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1760/D",
    "contestId": 1760,
    "index": "D",
    "name": "Challenging Valleys",
    "rating": 1000,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "25/C",
    "contestId": 25,
    "index": "C",
    "name": "Roads in Berland",
    "rating": 1900,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "958/C1",
    "contestId": 958,
    "index": "C1",
    "name": "Encryption (easy)",
    "rating": 1200,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1607/B",
    "contestId": 1607,
    "index": "B",
    "name": "Odd Grasshopper",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "440/B",
    "contestId": 440,
    "index": "B",
    "name": "Balancer",
    "rating": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1907/B",
    "contestId": 1907,
    "index": "B",
    "name": "YetnotherrokenKeoard",
    "rating": 1000,
    "tags": [
      "data structures",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "463/D",
    "contestId": 463,
    "index": "D",
    "name": "Gargari and Permutations",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "794/A",
    "contestId": 794,
    "index": "A",
    "name": "Bank Robbery",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "734/A",
    "contestId": 734,
    "index": "A",
    "name": "Anton and Danik",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "147/B",
    "contestId": 147,
    "index": "B",
    "name": "Smile House",
    "rating": 2500,
    "tags": [
      "binary search",
      "graphs",
      "matrices"
    ]
  },
  {
    "id": "916/A",
    "contestId": 916,
    "index": "A",
    "name": "Jamie and Alarm Snooze",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "575/H",
    "contestId": 575,
    "index": "H",
    "name": "Bots",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "766/B",
    "contestId": 766,
    "index": "B",
    "name": "Mahmoud and a Triangle",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "858/B",
    "contestId": 858,
    "index": "B",
    "name": "Which floor?",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1981/E",
    "contestId": 1981,
    "index": "E",
    "name": "Turtle and Intersected Segments",
    "rating": 2600,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "305/C",
    "contestId": 305,
    "index": "C",
    "name": "Ivan and Powers of Two",
    "rating": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "55/B",
    "contestId": 55,
    "index": "B",
    "name": "Smallest number",
    "rating": 1600,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "911/E",
    "contestId": 911,
    "index": "E",
    "name": "Stack Sorting",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "266/A",
    "contestId": 266,
    "index": "A",
    "name": "Stones on the Table",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "253/E",
    "contestId": 253,
    "index": "E",
    "name": "Printer",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "427/D",
    "contestId": 427,
    "index": "D",
    "name": "Match & Catch",
    "rating": 2200,
    "tags": [
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "109/E",
    "contestId": 109,
    "index": "E",
    "name": "Lucky Interval",
    "rating": 2700,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "774/E",
    "contestId": 774,
    "index": "E",
    "name": "Big Number and Remainder",
    "rating": 2300,
    "tags": [
      "*special",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1537/D",
    "contestId": 1537,
    "index": "D",
    "name": "Deleting Divisors",
    "rating": 1700,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "id": "740/B",
    "contestId": 740,
    "index": "B",
    "name": "Alyona and flowers",
    "rating": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "912/D",
    "contestId": 912,
    "index": "D",
    "name": "Fishes",
    "rating": 2100,
    "tags": [
      "data structures",
      "graphs",
      "greedy",
      "probabilities",
      "shortest paths"
    ]
  },
  {
    "id": "437/A",
    "contestId": 437,
    "index": "A",
    "name": "The Child and Homework",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "286/D",
    "contestId": 286,
    "index": "D",
    "name": "Tourists",
    "rating": 2600,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "543/A",
    "contestId": 543,
    "index": "A",
    "name": "Writing Code",
    "rating": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1354/F",
    "contestId": 1354,
    "index": "F",
    "name": "Summoning Minions",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "dp",
      "flows",
      "graph matchings",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "39/B",
    "contestId": 39,
    "index": "B",
    "name": "Company Income Growth",
    "rating": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1099/C",
    "contestId": 1099,
    "index": "C",
    "name": "Postcard",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1173/B",
    "contestId": 1173,
    "index": "B",
    "name": "Nauuo and Chess",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "425/E",
    "contestId": 425,
    "index": "E",
    "name": "Sereja and Sets",
    "rating": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1558/D",
    "contestId": 1558,
    "index": "D",
    "name": "Top-Notch Insertions",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "data structures"
    ]
  },
  {
    "id": "584/A",
    "contestId": 584,
    "index": "A",
    "name": "Olesya and Rodion",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1725/K",
    "contestId": 1725,
    "index": "K",
    "name": "Kingdom of Criticism",
    "rating": 2500,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "id": "329/A",
    "contestId": 329,
    "index": "A",
    "name": "Purification",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1634/F",
    "contestId": 1634,
    "index": "F",
    "name": "Fibonacci Additions",
    "rating": 2700,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1990/B",
    "contestId": 1990,
    "index": "B",
    "name": "Array Craft",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "297/C",
    "contestId": 297,
    "index": "C",
    "name": "Splitting the Uniqueness",
    "rating": 2400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1428/F",
    "contestId": 1428,
    "index": "F",
    "name": "Fruit Sequences",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "765/G",
    "contestId": 765,
    "index": "G",
    "name": "Math, math everywhere",
    "rating": 3200,
    "tags": [
      "brute force",
      "dp",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "id": "1446/C",
    "contestId": 1446,
    "index": "C",
    "name": "Xor Tree",
    "rating": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "id": "514/A",
    "contestId": 514,
    "index": "A",
    "name": "Chewbaсca and Number",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "787/B",
    "contestId": 787,
    "index": "B",
    "name": "Not Afraid",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1348/C",
    "contestId": 1348,
    "index": "C",
    "name": "Phoenix and Distribution",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1766/E",
    "contestId": 1766,
    "index": "E",
    "name": "Decomposition",
    "rating": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "808/A",
    "contestId": 808,
    "index": "A",
    "name": "Lucky Year",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1594/F",
    "contestId": 1594,
    "index": "F",
    "name": "Ideal Farm",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "580/D",
    "contestId": 580,
    "index": "D",
    "name": "Kefa and Dishes",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1725/I",
    "contestId": 1725,
    "index": "I",
    "name": "Imitating the Key Tree",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "dsu",
      "trees"
    ]
  },
  {
    "id": "1054/F",
    "contestId": 1054,
    "index": "F",
    "name": "Electric Scheme",
    "rating": 2700,
    "tags": [
      "flows",
      "graph matchings"
    ]
  },
  {
    "id": "1840/B",
    "contestId": 1840,
    "index": "B",
    "name": "Binary Cafe",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "192/B",
    "contestId": 192,
    "index": "B",
    "name": "Walking in the Rain",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "77/A",
    "contestId": 77,
    "index": "A",
    "name": "Heroes",
    "rating": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "118/C",
    "contestId": 118,
    "index": "C",
    "name": "Fancy Number",
    "rating": 1900,
    "tags": [
      "brute force",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "196/D",
    "contestId": 196,
    "index": "D",
    "name": "The Next Good String",
    "rating": 2800,
    "tags": [
      "data structures",
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "313/C",
    "contestId": 313,
    "index": "C",
    "name": "Ilya and Matrix",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "935/F",
    "contestId": 935,
    "index": "F",
    "name": "Fafa and Array",
    "rating": 2600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1910/B",
    "contestId": 1910,
    "index": "B",
    "name": "Security Guard",
    "rating": 1600,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "id": "449/C",
    "contestId": 449,
    "index": "C",
    "name": "Jzzhu and Apples",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "id": "855/F",
    "contestId": 855,
    "index": "F",
    "name": "Nagini",
    "rating": 3100,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "400/A",
    "contestId": 400,
    "index": "A",
    "name": "Inna and Choose Options",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1340/B",
    "contestId": 1340,
    "index": "B",
    "name": "Nastya and Scoreboard",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1266/G",
    "contestId": 1266,
    "index": "G",
    "name": "Permutation Concatenation",
    "rating": 3300,
    "tags": [
      "string suffix structures"
    ]
  },
  {
    "id": "1204/D1",
    "contestId": 1204,
    "index": "D1",
    "name": "Kirk and a Binary String (easy version)",
    "rating": 2000,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "767/A",
    "contestId": 767,
    "index": "A",
    "name": "Snacktower",
    "rating": 1100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1350/B",
    "contestId": 1350,
    "index": "B",
    "name": "Orac and Models",
    "rating": 1400,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "719/B",
    "contestId": 719,
    "index": "B",
    "name": "Anatoly and Cockroaches",
    "rating": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "716/A",
    "contestId": 716,
    "index": "A",
    "name": "Crazy Computer",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "917/C",
    "contestId": 917,
    "index": "C",
    "name": "Pollywog",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "matrices"
    ]
  },
  {
    "id": "758/D",
    "contestId": 758,
    "index": "D",
    "name": "Ability To Convert",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "366/D",
    "contestId": 366,
    "index": "D",
    "name": "Dima and Trap Graph",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dsu",
      "shortest paths",
      "two pointers"
    ]
  },
  {
    "id": "1790/D",
    "contestId": 1790,
    "index": "D",
    "name": "Matryoshkas",
    "rating": 1200,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1184/A1",
    "contestId": 1184,
    "index": "A1",
    "name": "Heidi Learns Hashing (Easy)",
    "rating": 1200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "74/E",
    "contestId": 74,
    "index": "E",
    "name": "Shift It!",
    "rating": 2800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "813/C",
    "contestId": 813,
    "index": "C",
    "name": "The Tag Game",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1485/B",
    "contestId": 1485,
    "index": "B",
    "name": "Replace and Keep Sorted",
    "rating": 1200,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "308/B",
    "contestId": 308,
    "index": "B",
    "name": "Context Advertising",
    "rating": 2100,
    "tags": [
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "24/E",
    "contestId": 24,
    "index": "E",
    "name": "Berland collider",
    "rating": 2300,
    "tags": [
      "binary search"
    ]
  },
  {
    "id": "404/D",
    "contestId": 404,
    "index": "D",
    "name": "Minesweeper 1D",
    "rating": 1900,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1191/B",
    "contestId": 1191,
    "index": "B",
    "name": "Tokitsukaze and Mahjong",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1366/G",
    "contestId": 1366,
    "index": "G",
    "name": "Construct the String",
    "rating": 2700,
    "tags": [
      "data structures",
      "dp",
      "strings"
    ]
  },
  {
    "id": "749/C",
    "contestId": 749,
    "index": "C",
    "name": "Voting",
    "rating": 1500,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "55/C",
    "contestId": 55,
    "index": "C",
    "name": "Pie or die",
    "rating": 1900,
    "tags": [
      "games"
    ]
  },
  {
    "id": "1844/B",
    "contestId": 1844,
    "index": "B",
    "name": "Permutations & Primes",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "106/E",
    "contestId": 106,
    "index": "E",
    "name": "Space Rescuers",
    "rating": 2100,
    "tags": [
      "geometry",
      "ternary search"
    ]
  },
  {
    "id": "1327/B",
    "contestId": 1327,
    "index": "B",
    "name": "Princesses and Princes",
    "rating": 1200,
    "tags": [
      "brute force",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1430/B",
    "contestId": 1430,
    "index": "B",
    "name": "Barrels",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "991/C",
    "contestId": 991,
    "index": "C",
    "name": "Candies",
    "rating": 1500,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "id": "1017/G",
    "contestId": 1017,
    "index": "G",
    "name": "The Tree",
    "rating": 3200,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1436/E",
    "contestId": 1436,
    "index": "E",
    "name": "Complicated Computations",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "115/D",
    "contestId": 115,
    "index": "D",
    "name": "Unambiguous Arithmetic Expression",
    "rating": 2600,
    "tags": [
      "dp",
      "expression parsing"
    ]
  },
  {
    "id": "63/E",
    "contestId": 63,
    "index": "E",
    "name": "Sweets Game",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "games",
      "implementation"
    ]
  },
  {
    "id": "41/B",
    "contestId": 41,
    "index": "B",
    "name": "Martian Dollar",
    "rating": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "928/D",
    "contestId": 928,
    "index": "D",
    "name": "Autocompletion",
    "rating": 1900,
    "tags": [
      "*special",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1419/B",
    "contestId": 1419,
    "index": "B",
    "name": "Stairs",
    "rating": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "557/C",
    "contestId": 557,
    "index": "C",
    "name": "Arthur and Table",
    "rating": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "911/G",
    "contestId": 911,
    "index": "G",
    "name": "Mass Change Queries",
    "rating": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1059/B",
    "contestId": 1059,
    "index": "B",
    "name": "Forgery",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1221/E",
    "contestId": 1221,
    "index": "E",
    "name": "Game With String",
    "rating": 2500,
    "tags": [
      "games"
    ]
  },
  {
    "id": "1615/D",
    "contestId": 1615,
    "index": "D",
    "name": "X(or)-mas Tree",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "81/D",
    "contestId": 81,
    "index": "D",
    "name": "Polycarp's Picture Gallery",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "656/G",
    "contestId": 656,
    "index": "G",
    "name": "You're a Professional",
    "rating": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "42/B",
    "contestId": 42,
    "index": "B",
    "name": "Game of chess unfinished",
    "rating": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1554/D",
    "contestId": 1554,
    "index": "D",
    "name": "Diane",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1692/B",
    "contestId": 1692,
    "index": "B",
    "name": "All Distinct",
    "rating": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1657/E",
    "contestId": 1657,
    "index": "E",
    "name": "Star MST",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "graph matchings",
      "math"
    ]
  },
  {
    "id": "92/A",
    "contestId": 92,
    "index": "A",
    "name": "Chips",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1852/E",
    "contestId": 1852,
    "index": "E",
    "name": "Rivalries",
    "rating": 3400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "768/C",
    "contestId": 768,
    "index": "C",
    "name": "Jon Snow and his Favourite Number",
    "rating": 1800,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1983/E",
    "contestId": 1983,
    "index": "E",
    "name": "I Love Balls",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1221/A",
    "contestId": 1221,
    "index": "A",
    "name": "2048 Game",
    "rating": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "982/E",
    "contestId": 982,
    "index": "E",
    "name": "Billiard",
    "rating": 2600,
    "tags": [
      "geometry",
      "number theory"
    ]
  },
  {
    "id": "1030/D",
    "contestId": 1030,
    "index": "D",
    "name": "Vasya and Triangle",
    "rating": 1800,
    "tags": [
      "geometry",
      "number theory"
    ]
  },
  {
    "id": "965/E",
    "contestId": 965,
    "index": "E",
    "name": "Short Code",
    "rating": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1772/G",
    "contestId": 1772,
    "index": "G",
    "name": "Gaining Rating",
    "rating": 2200,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "920/F",
    "contestId": 920,
    "index": "F",
    "name": "SUM and REPLACE",
    "rating": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "number theory"
    ]
  },
  {
    "id": "820/B",
    "contestId": 820,
    "index": "B",
    "name": "Mister B and Angle in Polygon",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "geometry",
      "math"
    ]
  },
  {
    "id": "486/C",
    "contestId": 486,
    "index": "C",
    "name": "Palindrome Transformation",
    "rating": 1700,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "773/E",
    "contestId": 773,
    "index": "E",
    "name": "Blog Post Rating",
    "rating": 3000,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "387/D",
    "contestId": 387,
    "index": "D",
    "name": "George and Interesting Graph",
    "rating": 2200,
    "tags": [
      "graph matchings"
    ]
  },
  {
    "id": "254/E",
    "contestId": 254,
    "index": "E",
    "name": "Dormitory",
    "rating": 2100,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "523/D",
    "contestId": 523,
    "index": "D",
    "name": "Statistics of Recompressing Videos",
    "rating": 1600,
    "tags": [
      "*special",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1895/E",
    "contestId": 1895,
    "index": "E",
    "name": "Infinite Card Game",
    "rating": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "games",
      "graphs",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1163/D",
    "contestId": 1163,
    "index": "D",
    "name": "Mysterious Code",
    "rating": 2100,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "1394/A",
    "contestId": 1394,
    "index": "A",
    "name": "Boboniu Chats with Du",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1133/B",
    "contestId": 1133,
    "index": "B",
    "name": "Preparation for International Women's Day",
    "rating": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "814/A",
    "contestId": 814,
    "index": "A",
    "name": "An abandoned sentiment from past",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "374/D",
    "contestId": 374,
    "index": "D",
    "name": "Inna and Sequence",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1956/E2",
    "contestId": 1956,
    "index": "E2",
    "name": "Nene vs. Monsters (Hard Version)",
    "rating": 2700,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1032/C",
    "contestId": 1032,
    "index": "C",
    "name": "Playing Piano",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "id": "1957/C",
    "contestId": 1957,
    "index": "C",
    "name": "How Does the Rook Move?",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "412/C",
    "contestId": 412,
    "index": "C",
    "name": "Pattern",
    "rating": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "777/C",
    "contestId": 777,
    "index": "C",
    "name": "Alyona and Spreadsheet",
    "rating": 1600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "844/A",
    "contestId": 844,
    "index": "A",
    "name": "Diversity",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "26/D",
    "contestId": 26,
    "index": "D",
    "name": "Tickets",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "47/D",
    "contestId": 47,
    "index": "D",
    "name": "Safe",
    "rating": 2200,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "811/B",
    "contestId": 811,
    "index": "B",
    "name": "Vladik and Complicated Book",
    "rating": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1096/E",
    "contestId": 1096,
    "index": "E",
    "name": "The Top Scorer",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1548/D2",
    "contestId": 1548,
    "index": "D2",
    "name": "Gregor and the Odd Cows (Hard)",
    "rating": 3300,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1037/F",
    "contestId": 1037,
    "index": "F",
    "name": "Maximum Reduction",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "math"
    ]
  },
  {
    "id": "722/B",
    "contestId": 722,
    "index": "B",
    "name": "Verse Pattern",
    "rating": 1200,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1566/D2",
    "contestId": 1566,
    "index": "D2",
    "name": "Seating Arrangements (hard version)",
    "rating": 1600,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "305/D",
    "contestId": 305,
    "index": "D",
    "name": "Olya and Graph",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "926/B",
    "contestId": 926,
    "index": "B",
    "name": "Add Points",
    "rating": 1800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1873/B",
    "contestId": 1873,
    "index": "B",
    "name": "Good Kid",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1851/D",
    "contestId": 1851,
    "index": "D",
    "name": "Prefix Permutation Sums",
    "rating": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "838/A",
    "contestId": 838,
    "index": "A",
    "name": "Binary Blocks",
    "rating": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1958/E",
    "contestId": 1958,
    "index": "E",
    "name": "Yet Another Permutation Constructive",
    "rating": 1900,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "id": "1468/E",
    "contestId": 1468,
    "index": "E",
    "name": "Four Segments",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1791/D",
    "contestId": 1791,
    "index": "D",
    "name": "Distinct Split",
    "rating": 1000,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1881/G",
    "contestId": 1881,
    "index": "G",
    "name": "Anya and the Mysterious String",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1623/C",
    "contestId": 1623,
    "index": "C",
    "name": "Balanced Stone Heaps",
    "rating": 1600,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "713/E",
    "contestId": 713,
    "index": "E",
    "name": "Sonya Partymaker",
    "rating": 3300,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "1091/C",
    "contestId": 1091,
    "index": "C",
    "name": "New Year and the Sphere Transmission",
    "rating": 1400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "133/A",
    "contestId": 133,
    "index": "A",
    "name": "HQ9+",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "607/B",
    "contestId": 607,
    "index": "B",
    "name": "Zuma",
    "rating": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "414/B",
    "contestId": 414,
    "index": "B",
    "name": "Mashmokh and ACM",
    "rating": 1400,
    "tags": [
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "id": "593/E",
    "contestId": 593,
    "index": "E",
    "name": "Strange Calculation and Cats",
    "rating": 2400,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "450/B",
    "contestId": 450,
    "index": "B",
    "name": "Jzzhu and Sequences",
    "rating": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1696/F",
    "contestId": 1696,
    "index": "F",
    "name": "Tree Recovery",
    "rating": 2600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1601/B",
    "contestId": 1601,
    "index": "B",
    "name": "Frog Traveler",
    "rating": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths",
      "two pointers"
    ]
  },
  {
    "id": "1913/C",
    "contestId": 1913,
    "index": "C",
    "name": "Game with Multiset",
    "rating": 1300,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "125/C",
    "contestId": 125,
    "index": "C",
    "name": "Hobbits' Party",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1490/C",
    "contestId": 1490,
    "index": "C",
    "name": "Sum of Cubes",
    "rating": 1100,
    "tags": [
      "binary search",
      "brute force",
      "brute force",
      "math"
    ]
  },
  {
    "id": "1753/F",
    "contestId": 1753,
    "index": "F",
    "name": "Minecraft Series",
    "rating": 3500,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "id": "998/B",
    "contestId": 998,
    "index": "B",
    "name": "Cutting",
    "rating": 1200,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "343/D",
    "contestId": 343,
    "index": "D",
    "name": "Water Tree",
    "rating": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "171/G",
    "contestId": 171,
    "index": "G",
    "name": "Mysterious numbers - 2",
    "rating": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1098/D",
    "contestId": 1098,
    "index": "D",
    "name": "Eels",
    "rating": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "695/F",
    "contestId": 695,
    "index": "F",
    "name": "Coprime Permutation",
    "rating": 3000,
    "tags": [
      "combinatorics",
      "number theory"
    ]
  },
  {
    "id": "1986/C",
    "contestId": 1986,
    "index": "C",
    "name": "Update Queries",
    "rating": 1100,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1188/D",
    "contestId": 1188,
    "index": "D",
    "name": "Make Equal",
    "rating": 3100,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1263/A",
    "contestId": 1263,
    "index": "A",
    "name": "Sweet Problem",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "673/B",
    "contestId": 673,
    "index": "B",
    "name": "Problems for Round",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "909/D",
    "contestId": 909,
    "index": "D",
    "name": "Colorful Points",
    "rating": 2100,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "611/E",
    "contestId": 611,
    "index": "E",
    "name": "New Year and Three Musketeers",
    "rating": 2400,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1260/A",
    "contestId": 1260,
    "index": "A",
    "name": "Heating",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "343/B",
    "contestId": 343,
    "index": "B",
    "name": "Alternating Current",
    "rating": 1600,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1905/B",
    "contestId": 1905,
    "index": "B",
    "name": "Begginer's Zelda",
    "rating": 1100,
    "tags": [
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1231/C",
    "contestId": 1231,
    "index": "C",
    "name": "Increasing Matrix",
    "rating": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "115/E",
    "contestId": 115,
    "index": "E",
    "name": "Linear Kingdom Races",
    "rating": 2400,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "46/C",
    "contestId": 46,
    "index": "C",
    "name": "Hamsters and Tigers",
    "rating": 1600,
    "tags": [
      "two pointers"
    ]
  },
  {
    "id": "833/C",
    "contestId": 833,
    "index": "C",
    "name": "Ever-Hungry Krakozyabra",
    "rating": 2700,
    "tags": [
      "brute force",
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "id": "404/C",
    "contestId": 404,
    "index": "C",
    "name": "Restore Graph",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "sortings"
    ]
  },
  {
    "id": "1025/D",
    "contestId": 1025,
    "index": "D",
    "name": "Recovering BST",
    "rating": 2100,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "570/C",
    "contestId": 570,
    "index": "C",
    "name": "Replacement",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1372/C",
    "contestId": 1372,
    "index": "C",
    "name": "Omkar and Baseball",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "712/B",
    "contestId": 712,
    "index": "B",
    "name": "Memory and Trident",
    "rating": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1442/A",
    "contestId": 1442,
    "index": "A",
    "name": "Extreme Subtraction",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "894/B",
    "contestId": 894,
    "index": "B",
    "name": "Ralph And His Magic Field",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1647/F",
    "contestId": 1647,
    "index": "F",
    "name": "Madoka and Laziness",
    "rating": 3100,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1065/D",
    "contestId": 1065,
    "index": "D",
    "name": "Three Pieces",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "shortest paths"
    ]
  },
  {
    "id": "1218/I",
    "contestId": 1218,
    "index": "I",
    "name": "The Light Square",
    "rating": 2100,
    "tags": [
      "2-sat",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "id": "570/A",
    "contestId": 570,
    "index": "A",
    "name": "Elections",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1466/C",
    "contestId": 1466,
    "index": "C",
    "name": "Canine poetry",
    "rating": 1300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "758/C",
    "contestId": 758,
    "index": "C",
    "name": "Unfair Poll",
    "rating": 1700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1092/D2",
    "contestId": 1092,
    "index": "D2",
    "name": "Great Vova Wall (Version 2)",
    "rating": 2200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "667/B",
    "contestId": 667,
    "index": "B",
    "name": "Coat of Anticubism",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "id": "1203/D1",
    "contestId": 1203,
    "index": "D1",
    "name": "Remove the Substring (easy version)",
    "rating": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1472/G",
    "contestId": 1472,
    "index": "G",
    "name": "Moving to the Capital",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1983/F",
    "contestId": 1983,
    "index": "F",
    "name": "array-value",
    "rating": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1927/F",
    "contestId": 1927,
    "index": "F",
    "name": "Microcycle",
    "rating": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1649/B",
    "contestId": 1649,
    "index": "B",
    "name": "Game of Ball Passing",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "424/A",
    "contestId": 424,
    "index": "A",
    "name": "Squats",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "757/F",
    "contestId": 757,
    "index": "F",
    "name": "Team Rocket Rises Again",
    "rating": 2800,
    "tags": [
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1725/D",
    "contestId": 1725,
    "index": "D",
    "name": "Deducing Sortability",
    "rating": 2900,
    "tags": [
      "binary search",
      "bitmasks",
      "math"
    ]
  },
  {
    "id": "644/A",
    "contestId": 644,
    "index": "A",
    "name": "Parliament of Berland",
    "rating": 1000,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "id": "378/A",
    "contestId": 378,
    "index": "A",
    "name": "Playing with Dice",
    "rating": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "863/F",
    "contestId": 863,
    "index": "F",
    "name": "Almost Permutation",
    "rating": 2200,
    "tags": [
      "flows"
    ]
  },
  {
    "id": "1430/F",
    "contestId": 1430,
    "index": "F",
    "name": "Realistic Gameplay",
    "rating": 2600,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1178/B",
    "contestId": 1178,
    "index": "B",
    "name": "WOW Factor",
    "rating": 1300,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "1062/A",
    "contestId": 1062,
    "index": "A",
    "name": "A Prank",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "456/B",
    "contestId": 456,
    "index": "B",
    "name": "Fedya and Maths",
    "rating": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1368/H1",
    "contestId": 1368,
    "index": "H1",
    "name": "Breadboard Capacity (easy version)",
    "rating": 3300,
    "tags": [
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "id": "954/G",
    "contestId": 954,
    "index": "G",
    "name": "Castle Defense",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "741/C",
    "contestId": 741,
    "index": "C",
    "name": "Arpa’s overnight party and Mehrdad’s silent entering",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1634/E",
    "contestId": 1634,
    "index": "E",
    "name": "Fair Share",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "id": "152/E",
    "contestId": 152,
    "index": "E",
    "name": "Garden",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "683/G",
    "contestId": 683,
    "index": "G",
    "name": "The Fraction",
    "rating": 1900,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "472/F",
    "contestId": 472,
    "index": "F",
    "name": "Design Tutorial: Change the Goal",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "math",
      "matrices"
    ]
  },
  {
    "id": "237/C",
    "contestId": 237,
    "index": "C",
    "name": "Primes on Interval",
    "rating": 1600,
    "tags": [
      "binary search",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1492/B",
    "contestId": 1492,
    "index": "B",
    "name": "Card Deck",
    "rating": 1100,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1974/F",
    "contestId": 1974,
    "index": "F",
    "name": "Cutting Game",
    "rating": 1900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1326/C",
    "contestId": 1326,
    "index": "C",
    "name": "Permutation Partitions",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1916/D",
    "contestId": 1916,
    "index": "D",
    "name": "Mathematical Problem",
    "rating": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "math"
    ]
  },
  {
    "id": "1945/G",
    "contestId": 1945,
    "index": "G",
    "name": "Cook and Porridge",
    "rating": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "720/F",
    "contestId": 720,
    "index": "F",
    "name": "Array Covering",
    "rating": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1900/B",
    "contestId": 1900,
    "index": "B",
    "name": "Laura and Operations",
    "rating": 900,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1239/E",
    "contestId": 1239,
    "index": "E",
    "name": "Turtle",
    "rating": 3100,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1156/B",
    "contestId": 1156,
    "index": "B",
    "name": "Ugly Pairs",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1296/C",
    "contestId": 1296,
    "index": "C",
    "name": "Yet Another Walking Robot",
    "rating": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1579/C",
    "contestId": 1579,
    "index": "C",
    "name": "Ticks",
    "rating": 1500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1630/A",
    "contestId": 1630,
    "index": "A",
    "name": "And Matching",
    "rating": 1500,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "id": "1109/A",
    "contestId": 1109,
    "index": "A",
    "name": "Sasha and a Bit of Relax",
    "rating": 1600,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "75/A",
    "contestId": 75,
    "index": "A",
    "name": "Life Without Zeros",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1333/A",
    "contestId": 1333,
    "index": "A",
    "name": "Little Artem",
    "rating": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1854/E",
    "contestId": 1854,
    "index": "E",
    "name": "Game Bundles",
    "rating": 3000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1225/D",
    "contestId": 1225,
    "index": "D",
    "name": "Power Products",
    "rating": 1800,
    "tags": [
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1359/A",
    "contestId": 1359,
    "index": "A",
    "name": "Berland Poker",
    "rating": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1769/D2",
    "contestId": 1769,
    "index": "D2",
    "name": "Игра в Девятку II",
    "rating": 2200,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "id": "1835/C",
    "contestId": 1835,
    "index": "C",
    "name": "Twin Clusters",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1878/D",
    "contestId": 1878,
    "index": "D",
    "name": "Reverse Madness",
    "rating": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1918/D",
    "contestId": 1918,
    "index": "D",
    "name": "Blocking Elements",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "444/E",
    "contestId": 444,
    "index": "E",
    "name": "DZY Loves Planting",
    "rating": 2700,
    "tags": [
      "binary search",
      "dsu",
      "trees"
    ]
  },
  {
    "id": "1445/A",
    "contestId": 1445,
    "index": "A",
    "name": "Array Rearrangment",
    "rating": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "401/B",
    "contestId": 401,
    "index": "B",
    "name": "Sereja and Contests",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "870/B",
    "contestId": 870,
    "index": "B",
    "name": "Maximum of Maximums of Minimums",
    "rating": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1750/A",
    "contestId": 1750,
    "index": "A",
    "name": "Indirect Sort",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1101/B",
    "contestId": 1101,
    "index": "B",
    "name": "Accordion",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "476/D",
    "contestId": 476,
    "index": "D",
    "name": "Dreamoon and Sets",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "961/C",
    "contestId": 961,
    "index": "C",
    "name": "Chessboard",
    "rating": 1400,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1946/B",
    "contestId": 1946,
    "index": "B",
    "name": "Maximum Sum",
    "rating": 1100,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1878/A",
    "contestId": 1878,
    "index": "A",
    "name": "How Much Does Daytona Cost?",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "980/B",
    "contestId": 980,
    "index": "B",
    "name": "Marlin",
    "rating": 1600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1056/H",
    "contestId": 1056,
    "index": "H",
    "name": "Detect Robots",
    "rating": 3200,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "id": "1260/C",
    "contestId": 1260,
    "index": "C",
    "name": "Infinite Fence",
    "rating": 1700,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "862/A",
    "contestId": 862,
    "index": "A",
    "name": "Mahmoud and Ehab and the MEX",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1824/D",
    "contestId": 1824,
    "index": "D",
    "name": "LuoTianyi and the Function",
    "rating": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "678/D",
    "contestId": 678,
    "index": "D",
    "name": "Iterated Linear Function",
    "rating": 1700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1194/G",
    "contestId": 1194,
    "index": "G",
    "name": "Another Meme Problem",
    "rating": 2700,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1991/A",
    "contestId": 1991,
    "index": "A",
    "name": "Maximize the Last Element",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1694/B",
    "contestId": 1694,
    "index": "B",
    "name": "Paranoid String",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "204/E",
    "contestId": 204,
    "index": "E",
    "name": "Little Elephant and Strings",
    "rating": 2800,
    "tags": [
      "data structures",
      "implementation",
      "string suffix structures",
      "two pointers"
    ]
  },
  {
    "id": "118/B",
    "contestId": 118,
    "index": "B",
    "name": "Present from Lena",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1288/C",
    "contestId": 1288,
    "index": "C",
    "name": "Two Arrays",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1915/B",
    "contestId": 1915,
    "index": "B",
    "name": "Not Quite Latin Square",
    "rating": 800,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "71/D",
    "contestId": 71,
    "index": "D",
    "name": "Solitaire",
    "rating": 2200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1511/C",
    "contestId": 1511,
    "index": "C",
    "name": "Yet Another Card Deck",
    "rating": 1100,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "486/D",
    "contestId": 486,
    "index": "D",
    "name": "Valid Sets",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "623/B",
    "contestId": 623,
    "index": "B",
    "name": "Array GCD",
    "rating": 2300,
    "tags": [
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1260/F",
    "contestId": 1260,
    "index": "F",
    "name": "Colored Tree",
    "rating": 2700,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "42/E",
    "contestId": 42,
    "index": "E",
    "name": "Baldman and the military",
    "rating": 2700,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "225/A",
    "contestId": 225,
    "index": "A",
    "name": "Dice Tower",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1213/F",
    "contestId": 1213,
    "index": "F",
    "name": "Unstable String Sort",
    "rating": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "814/D",
    "contestId": 814,
    "index": "D",
    "name": "An overnight dance in discotheque",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "geometry",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "360/B",
    "contestId": 360,
    "index": "B",
    "name": "Levko and Array",
    "rating": 2000,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "1473/C",
    "contestId": 1473,
    "index": "C",
    "name": "No More Inversions",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1704/C",
    "contestId": 1704,
    "index": "C",
    "name": "Virus",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "234/G",
    "contestId": 234,
    "index": "G",
    "name": "Practice",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "id": "617/D",
    "contestId": 617,
    "index": "D",
    "name": "Polyline",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "34/C",
    "contestId": 34,
    "index": "C",
    "name": "Page Numbers",
    "rating": 1300,
    "tags": [
      "expression parsing",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "701/B",
    "contestId": 701,
    "index": "B",
    "name": "Cells Not Under Attack",
    "rating": 1200,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "id": "841/A",
    "contestId": 841,
    "index": "A",
    "name": "Generous Kefa",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1606/B",
    "contestId": 1606,
    "index": "B",
    "name": "Update Files",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "52/A",
    "contestId": 52,
    "index": "A",
    "name": "123-sequence",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "939/A",
    "contestId": 939,
    "index": "A",
    "name": "Love Triangle",
    "rating": 800,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "304/B",
    "contestId": 304,
    "index": "B",
    "name": "Calendar",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1187/D",
    "contestId": 1187,
    "index": "D",
    "name": "Subarray Sorting",
    "rating": 2400,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "863/B",
    "contestId": 863,
    "index": "B",
    "name": "Kayaking",
    "rating": 1500,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "938/F",
    "contestId": 938,
    "index": "F",
    "name": "Erasing Substrings",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "103/A",
    "contestId": 103,
    "index": "A",
    "name": "Testing Pants for Sadness",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1945/F",
    "contestId": 1945,
    "index": "F",
    "name": "Kirill and Mushrooms",
    "rating": 1900,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "903/C",
    "contestId": 903,
    "index": "C",
    "name": "Boxes Packing",
    "rating": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "584/C",
    "contestId": 584,
    "index": "C",
    "name": "Marina and Vasya",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "274/D",
    "contestId": 274,
    "index": "D",
    "name": "Lovely Matrix",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1110/B",
    "contestId": 1110,
    "index": "B",
    "name": "Tape",
    "rating": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1468/I",
    "contestId": 1468,
    "index": "I",
    "name": "Plane Tiling",
    "rating": 2500,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1238/F",
    "contestId": 1238,
    "index": "F",
    "name": "The Maximum Subtree",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "603/A",
    "contestId": 603,
    "index": "A",
    "name": "Alternative Thinking",
    "rating": 1600,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1600/J",
    "contestId": 1600,
    "index": "J",
    "name": "Robot Factory",
    "rating": 1400,
    "tags": [
      "bitmasks",
      "dfs and similar"
    ]
  },
  {
    "id": "748/B",
    "contestId": 748,
    "index": "B",
    "name": "Santa Claus and Keyboard Check",
    "rating": 1500,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "923/A",
    "contestId": 923,
    "index": "A",
    "name": "Primal Sport",
    "rating": 1700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "809/D",
    "contestId": 809,
    "index": "D",
    "name": "Hitchhiking in the Baltic States",
    "rating": 2900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "474/F",
    "contestId": 474,
    "index": "F",
    "name": "Ant colony",
    "rating": 2100,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1685/B",
    "contestId": 1685,
    "index": "B",
    "name": "Linguistics",
    "rating": 2000,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "900/D",
    "contestId": 900,
    "index": "D",
    "name": "Unusual Sequences",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "120/B",
    "contestId": 120,
    "index": "B",
    "name": "Quiz League",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "624/B",
    "contestId": 624,
    "index": "B",
    "name": "Making a String",
    "rating": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "510/D",
    "contestId": 510,
    "index": "D",
    "name": "Fox And Jumping",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "id": "1806/B",
    "contestId": 1806,
    "index": "B",
    "name": "Mex Master",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1973/B",
    "contestId": 1973,
    "index": "B",
    "name": "Cat, Fox and the Lonely Array",
    "rating": 1300,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "24/A",
    "contestId": 24,
    "index": "A",
    "name": "Ring road",
    "rating": 1400,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "894/E",
    "contestId": 894,
    "index": "E",
    "name": "Ralph and Mushrooms",
    "rating": 2100,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1182/A",
    "contestId": 1182,
    "index": "A",
    "name": "Filling Shapes",
    "rating": 1000,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1013/B",
    "contestId": 1013,
    "index": "B",
    "name": "And",
    "rating": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "44/J",
    "contestId": 44,
    "index": "J",
    "name": "Triminoes",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1301/F",
    "contestId": 1301,
    "index": "F",
    "name": "Super Jaber",
    "rating": 2600,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "1800/E2",
    "contestId": 1800,
    "index": "E2",
    "name": "Unforgivable Curse (hard version)",
    "rating": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1567/A",
    "contestId": 1567,
    "index": "A",
    "name": "Domino Disaster",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "436/B",
    "contestId": 436,
    "index": "B",
    "name": "Om Nom and Spiders",
    "rating": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "303/E",
    "contestId": 303,
    "index": "E",
    "name": "Random Ranking",
    "rating": 3000,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1431/D",
    "contestId": 1431,
    "index": "D",
    "name": "Used Markers",
    "rating": 1500,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "id": "1347/C",
    "contestId": 1347,
    "index": "C",
    "name": "Sum of Round Numbers",
    "rating": 800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "733/B",
    "contestId": 733,
    "index": "B",
    "name": "Parade",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1918/G",
    "contestId": 1918,
    "index": "G",
    "name": "Permutation of Given",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1579/E1",
    "contestId": 1579,
    "index": "E1",
    "name": "Permutation Minimization by Deque",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "26/E",
    "contestId": 26,
    "index": "E",
    "name": "Multithreading",
    "rating": 2400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "854/B",
    "contestId": 854,
    "index": "B",
    "name": "Maxim Buys an Apartment",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1676/B",
    "contestId": 1676,
    "index": "B",
    "name": "Equal Candies",
    "rating": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "366/C",
    "contestId": 366,
    "index": "C",
    "name": "Dima and Salad",
    "rating": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1407/D",
    "contestId": 1407,
    "index": "D",
    "name": "Discrete Centrifugal Jumps",
    "rating": 2200,
    "tags": [
      "data structures",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1879/A",
    "contestId": 1879,
    "index": "A",
    "name": "Rigged!",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "333/B",
    "contestId": 333,
    "index": "B",
    "name": "Chips",
    "rating": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "316/E1",
    "contestId": 316,
    "index": "E1",
    "name": "Summer Homework",
    "rating": 1500,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "id": "1372/E",
    "contestId": 1372,
    "index": "E",
    "name": "Omkar and Last Floor",
    "rating": 2900,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1393/D",
    "contestId": 1393,
    "index": "D",
    "name": "Rarity and New Dress",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "578/A",
    "contestId": 578,
    "index": "A",
    "name": "A Problem about Polyline",
    "rating": 1700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "276/B",
    "contestId": 276,
    "index": "B",
    "name": "Little Girl and Game",
    "rating": 1300,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "id": "1620/F",
    "contestId": 1620,
    "index": "F",
    "name": "Bipartite Array",
    "rating": 2800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "282/E",
    "contestId": 282,
    "index": "E",
    "name": "Sausage Maximization",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1925/D",
    "contestId": 1925,
    "index": "D",
    "name": "Good Trip",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1249/B2",
    "contestId": 1249,
    "index": "B2",
    "name": "Books Exchange (hard version)",
    "rating": 1300,
    "tags": [
      "dfs and similar",
      "dsu",
      "math"
    ]
  },
  {
    "id": "897/A",
    "contestId": 897,
    "index": "A",
    "name": "Scarborough Fair",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1979/D",
    "contestId": 1979,
    "index": "D",
    "name": "Fixing a Binary String",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1698/C",
    "contestId": 1698,
    "index": "C",
    "name": "3SUM Closure",
    "rating": 1300,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "id": "1981/A",
    "contestId": 1981,
    "index": "A",
    "name": "Turtle and Piggy Are Playing a Game",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1958/B",
    "contestId": 1958,
    "index": "B",
    "name": "Clock in the Pool",
    "rating": 1400,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "id": "1536/F",
    "contestId": 1536,
    "index": "F",
    "name": "Omkar and Akmar",
    "rating": 2600,
    "tags": [
      "chinese remainder theorem",
      "combinatorics",
      "constructive algorithms",
      "fft",
      "games",
      "geometry",
      "math",
      "meet-in-the-middle",
      "string suffix structures"
    ]
  },
  {
    "id": "1037/E",
    "contestId": 1037,
    "index": "E",
    "name": "Trips",
    "rating": 2200,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "1787/D",
    "contestId": 1787,
    "index": "D",
    "name": "Game on Axis",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1450/B",
    "contestId": 1450,
    "index": "B",
    "name": "Balls of Steel",
    "rating": 1000,
    "tags": [
      "brute force",
      "geometry",
      "greedy"
    ]
  },
  {
    "id": "1186/D",
    "contestId": 1186,
    "index": "D",
    "name": "Vus the Cossack and Numbers",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1776/L",
    "contestId": 1776,
    "index": "L",
    "name": "Controllers",
    "rating": 1500,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "768/E",
    "contestId": 768,
    "index": "E",
    "name": "Game of Stones",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "dp",
      "games"
    ]
  },
  {
    "id": "1184/E3",
    "contestId": 1184,
    "index": "E3",
    "name": "Daleks' Invasion (hard)",
    "rating": 2400,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "992/A",
    "contestId": 992,
    "index": "A",
    "name": "Nastya and an Array",
    "rating": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1397/A",
    "contestId": 1397,
    "index": "A",
    "name": "Juggling Letters",
    "rating": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "255/A",
    "contestId": 255,
    "index": "A",
    "name": "Greg's Workout",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "213/C",
    "contestId": 213,
    "index": "C",
    "name": "Relay Race",
    "rating": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "386/D",
    "contestId": 386,
    "index": "D",
    "name": "Game with Points",
    "rating": 2100,
    "tags": [
      "dp",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "1551/D2",
    "contestId": 1551,
    "index": "D2",
    "name": "Domino (hard version)",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1602/B",
    "contestId": 1602,
    "index": "B",
    "name": "Divine Array",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "895/D",
    "contestId": 895,
    "index": "D",
    "name": "String Mark",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "math",
      "strings"
    ]
  },
  {
    "id": "243/B",
    "contestId": 243,
    "index": "B",
    "name": "Hydra",
    "rating": 2000,
    "tags": [
      "graphs",
      "sortings"
    ]
  },
  {
    "id": "1184/A2",
    "contestId": 1184,
    "index": "A2",
    "name": "Heidi Learns Hashing (Medium)",
    "rating": 2100,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "id": "817/A",
    "contestId": 817,
    "index": "A",
    "name": "Treasure Hunt",
    "rating": 1200,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "101/C",
    "contestId": 101,
    "index": "C",
    "name": "Vectors",
    "rating": 2000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1498/D",
    "contestId": 1498,
    "index": "D",
    "name": "Bananas in a Microwave",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1208/G",
    "contestId": 1208,
    "index": "G",
    "name": "Polygons",
    "rating": 2800,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "582/C",
    "contestId": 582,
    "index": "C",
    "name": "Superior Periodic Subarrays",
    "rating": 2400,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "1556/G",
    "contestId": 1556,
    "index": "G",
    "name": "Gates to Another World",
    "rating": 3300,
    "tags": [
      "bitmasks",
      "data structures",
      "dsu",
      "two pointers"
    ]
  },
  {
    "id": "540/A",
    "contestId": 540,
    "index": "A",
    "name": "Combination Lock",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1433/F",
    "contestId": 1433,
    "index": "F",
    "name": "Zero Remainder Sum",
    "rating": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "205/A",
    "contestId": 205,
    "index": "A",
    "name": "Little Elephant and Rozdil",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1209/A",
    "contestId": 1209,
    "index": "A",
    "name": "Paint the Numbers",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "643/F",
    "contestId": 643,
    "index": "F",
    "name": "Bears and Juice",
    "rating": 2900,
    "tags": [
      "dp",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1822/D",
    "contestId": 1822,
    "index": "D",
    "name": "Super-Permutation",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "379/D",
    "contestId": 379,
    "index": "D",
    "name": "New Year Letter",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "id": "1579/F",
    "contestId": 1579,
    "index": "F",
    "name": "Array Stabilization (AND version)",
    "rating": 1700,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "id": "926/J",
    "contestId": 926,
    "index": "J",
    "name": "Segments",
    "rating": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1667/C",
    "contestId": 1667,
    "index": "C",
    "name": "Half Queen Cover",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "823/D",
    "contestId": 823,
    "index": "D",
    "name": "Rusty String",
    "rating": 2700,
    "tags": [
      "fft",
      "math",
      "strings"
    ]
  },
  {
    "id": "34/E",
    "contestId": 34,
    "index": "E",
    "name": "Collisions",
    "rating": 2000,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "88/A",
    "contestId": 88,
    "index": "A",
    "name": "Chord",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1516/C",
    "contestId": 1516,
    "index": "C",
    "name": "Baby Ehab Partitions Again",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "id": "1637/G",
    "contestId": 1637,
    "index": "G",
    "name": "Birthday",
    "rating": 3000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "814/B",
    "contestId": 814,
    "index": "B",
    "name": "An express train to reveries",
    "rating": 1300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "89/D",
    "contestId": 89,
    "index": "D",
    "name": "Space mines",
    "rating": 2500,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1248/D1",
    "contestId": 1248,
    "index": "D1",
    "name": "The World Is Just a Programming Task (Easy Version)",
    "rating": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1136/A",
    "contestId": 1136,
    "index": "A",
    "name": "Nastya Is Reading a Book",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "295/B",
    "contestId": 295,
    "index": "B",
    "name": "Greg and Graph",
    "rating": 1700,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "615/D",
    "contestId": 615,
    "index": "D",
    "name": "Multipliers",
    "rating": 2000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1811/B",
    "contestId": 1811,
    "index": "B",
    "name": "Conveyor Belts",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "372/A",
    "contestId": 372,
    "index": "A",
    "name": "Counting Kangaroos is Fun",
    "rating": 1600,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "85/A",
    "contestId": 85,
    "index": "A",
    "name": "Domino",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1061/C",
    "contestId": 1061,
    "index": "C",
    "name": "Multiplicity",
    "rating": 1700,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "712/A",
    "contestId": 712,
    "index": "A",
    "name": "Memory and Crow",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1650/C",
    "contestId": 1650,
    "index": "C",
    "name": "Weight of the System of Nested Segments",
    "rating": 1200,
    "tags": [
      "greedy",
      "hashing",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1367/B",
    "contestId": 1367,
    "index": "B",
    "name": "Even Array",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "691/C",
    "contestId": 691,
    "index": "C",
    "name": "Exponential notation",
    "rating": 1800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1918/F",
    "contestId": 1918,
    "index": "F",
    "name": "Caterpillar on a Tree",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1517/A",
    "contestId": 1517,
    "index": "A",
    "name": "Sum of 2050",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1009/A",
    "contestId": 1009,
    "index": "A",
    "name": "Game Shopping",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "551/A",
    "contestId": 551,
    "index": "A",
    "name": "GukiZ and Contest",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "612/C",
    "contestId": 612,
    "index": "C",
    "name": "Replace To Make Regular Bracket Sequence",
    "rating": 1400,
    "tags": [
      "data structures",
      "expression parsing",
      "math"
    ]
  },
  {
    "id": "1905/D",
    "contestId": 1905,
    "index": "D",
    "name": "Cyclic MEX",
    "rating": 2000,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "314/C",
    "contestId": 314,
    "index": "C",
    "name": "Sereja and Subsequences",
    "rating": 2000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "822/E",
    "contestId": 822,
    "index": "E",
    "name": "Liar",
    "rating": 2400,
    "tags": [
      "binary search",
      "dp",
      "hashing",
      "string suffix structures"
    ]
  },
  {
    "id": "761/F",
    "contestId": 761,
    "index": "F",
    "name": "Dasha and Photos",
    "rating": 2600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1971/D",
    "contestId": 1971,
    "index": "D",
    "name": "Binary Cut",
    "rating": 1100,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "717/G",
    "contestId": 717,
    "index": "G",
    "name": "Underfail",
    "rating": 2400,
    "tags": [
      "flows"
    ]
  },
  {
    "id": "1494/C",
    "contestId": 1494,
    "index": "C",
    "name": "1D Sokoban",
    "rating": 1900,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1584/G",
    "contestId": 1584,
    "index": "G",
    "name": "Eligible Segments",
    "rating": 3200,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "193/B",
    "contestId": 193,
    "index": "B",
    "name": "Xor",
    "rating": 2000,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1478/B",
    "contestId": 1478,
    "index": "B",
    "name": "Nezzar and Lucky Number",
    "rating": 1100,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "868/F",
    "contestId": 868,
    "index": "F",
    "name": "Yet Another Minimization Problem",
    "rating": 2500,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "1509/A",
    "contestId": 1509,
    "index": "A",
    "name": "Average Height",
    "rating": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "79/C",
    "contestId": 79,
    "index": "C",
    "name": "Beaver",
    "rating": 1800,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1266/C",
    "contestId": 1266,
    "index": "C",
    "name": "Diverse Matrix",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "18/D",
    "contestId": 18,
    "index": "D",
    "name": "Seller Bob",
    "rating": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "553/A",
    "contestId": 553,
    "index": "A",
    "name": "Kyoya and Colored Balls",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1850/A",
    "contestId": 1850,
    "index": "A",
    "name": "To My Critics",
    "rating": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "25/E",
    "contestId": 25,
    "index": "E",
    "name": "Test",
    "rating": 2200,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "id": "633/D",
    "contestId": 633,
    "index": "D",
    "name": "Fibonacci-ish",
    "rating": 2000,
    "tags": [
      "brute force",
      "dp",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "id": "278/A",
    "contestId": 278,
    "index": "A",
    "name": "Circle Line",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "348/D",
    "contestId": 348,
    "index": "D",
    "name": "Turtles",
    "rating": 2500,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "1876/F",
    "contestId": 1876,
    "index": "F",
    "name": "Indefinite Clownfish",
    "rating": 3500,
    "tags": [
      "binary search",
      "graphs"
    ]
  },
  {
    "id": "1765/A",
    "contestId": 1765,
    "index": "A",
    "name": "Access Levels",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "dsu",
      "flows",
      "graph matchings"
    ]
  },
  {
    "id": "909/A",
    "contestId": 909,
    "index": "A",
    "name": "Generate Login",
    "rating": 1000,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1857/A",
    "contestId": 1857,
    "index": "A",
    "name": "Array Coloring",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "362/A",
    "contestId": 362,
    "index": "A",
    "name": "Two Semiknights Meet",
    "rating": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "837/G",
    "contestId": 837,
    "index": "G",
    "name": "Functions On The Segments",
    "rating": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "859/G",
    "contestId": 859,
    "index": "G",
    "name": "Circle of Numbers",
    "rating": 3000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1700/A",
    "contestId": 1700,
    "index": "A",
    "name": "Optimal Path",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "41/D",
    "contestId": 41,
    "index": "D",
    "name": "Pawn",
    "rating": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1799/F",
    "contestId": 1799,
    "index": "F",
    "name": "Halve or Subtract",
    "rating": 2700,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1177/B",
    "contestId": 1177,
    "index": "B",
    "name": "Digits Sequence (Hard Edition)",
    "rating": 1800,
    "tags": [
      "binary search",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "id": "898/E",
    "contestId": 898,
    "index": "E",
    "name": "Squares and not squares",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "508/D",
    "contestId": 508,
    "index": "D",
    "name": "Tanya and Password",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1676/C",
    "contestId": 1676,
    "index": "C",
    "name": "Most Similar Words",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "id": "1310/C",
    "contestId": 1310,
    "index": "C",
    "name": "Au Pont Rouge",
    "rating": 2800,
    "tags": [
      "binary search",
      "dp",
      "strings"
    ]
  },
  {
    "id": "761/C",
    "contestId": 761,
    "index": "C",
    "name": "Dasha and Password",
    "rating": 1500,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1303/A",
    "contestId": 1303,
    "index": "A",
    "name": "Erasing Zeroes",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "932/E",
    "contestId": 932,
    "index": "E",
    "name": "Team Work",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "375/A",
    "contestId": 375,
    "index": "A",
    "name": "Divisible by Seven",
    "rating": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "990/F",
    "contestId": 990,
    "index": "F",
    "name": "Flow Control",
    "rating": 2400,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "33/C",
    "contestId": 33,
    "index": "C",
    "name": "Wonderful Randomized Sum",
    "rating": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1242/D",
    "contestId": 1242,
    "index": "D",
    "name": "Number Discovery",
    "rating": 3400,
    "tags": [
      "math"
    ]
  },
  {
    "id": "230/B",
    "contestId": 230,
    "index": "B",
    "name": "T-primes",
    "rating": 1300,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "524/C",
    "contestId": 524,
    "index": "C",
    "name": "The Art of Dealing with ATM",
    "rating": 1900,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "id": "1675/C",
    "contestId": 1675,
    "index": "C",
    "name": "Detective Task",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1190/A",
    "contestId": 1190,
    "index": "A",
    "name": "Tokitsukaze and Discard Items",
    "rating": 1400,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "792/E",
    "contestId": 792,
    "index": "E",
    "name": "Colored Balls",
    "rating": 2500,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1786/B",
    "contestId": 1786,
    "index": "B",
    "name": "Cake Assembly Line",
    "rating": 1300,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "id": "1957/A",
    "contestId": 1957,
    "index": "A",
    "name": "Stickogon",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "883/E",
    "contestId": 883,
    "index": "E",
    "name": "Field of Wonders",
    "rating": 1500,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "47/A",
    "contestId": 47,
    "index": "A",
    "name": "Triangular numbers",
    "rating": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "248/B",
    "contestId": 248,
    "index": "B",
    "name": "Chilly Willy",
    "rating": 1400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1003/F",
    "contestId": 1003,
    "index": "F",
    "name": "Abbreviation",
    "rating": 2200,
    "tags": [
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1423/B",
    "contestId": 1423,
    "index": "B",
    "name": "Valuable Paper",
    "rating": 1900,
    "tags": [
      "binary search",
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "id": "121/E",
    "contestId": 121,
    "index": "E",
    "name": "Lucky Array",
    "rating": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1688/B",
    "contestId": 1688,
    "index": "B",
    "name": "Patchouli's Magical Talisman",
    "rating": 800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1195/E",
    "contestId": 1195,
    "index": "E",
    "name": "OpenStreetMap",
    "rating": 2100,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "585/F",
    "contestId": 585,
    "index": "F",
    "name": "Digits of Number Pi",
    "rating": 3200,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1893/E",
    "contestId": 1893,
    "index": "E",
    "name": "Cacti Symphony",
    "rating": 3500,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1846/E1",
    "contestId": 1846,
    "index": "E1",
    "name": "Rudolf and Snowflakes (simple version)",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1837/E",
    "contestId": 1837,
    "index": "E",
    "name": "Playoff Fixing",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "trees"
    ]
  },
  {
    "id": "1455/B",
    "contestId": 1455,
    "index": "B",
    "name": "Jumps",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1810/A",
    "contestId": 1810,
    "index": "A",
    "name": "Beautiful Sequence",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "569/A",
    "contestId": 569,
    "index": "A",
    "name": "Music",
    "rating": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1984/D",
    "contestId": 1984,
    "index": "D",
    "name": "\"a\" String Problem",
    "rating": 2000,
    "tags": [
      "brute force",
      "hashing",
      "implementation",
      "math",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1515/H",
    "contestId": 1515,
    "index": "H",
    "name": "Phoenix and Bits",
    "rating": 3500,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "957/A",
    "contestId": 957,
    "index": "A",
    "name": "Tritonic Iridescence",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1862/C",
    "contestId": 1862,
    "index": "C",
    "name": "Flower City Fence",
    "rating": 1100,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "216/B",
    "contestId": 216,
    "index": "B",
    "name": "Forming Teams",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "id": "1416/E",
    "contestId": 1416,
    "index": "E",
    "name": "Split",
    "rating": 3200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "183/B",
    "contestId": 183,
    "index": "B",
    "name": "Zoo",
    "rating": 1700,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "id": "1894/B",
    "contestId": 1894,
    "index": "B",
    "name": "Two Out of Three",
    "rating": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "200/E",
    "contestId": 200,
    "index": "E",
    "name": "Tractor College",
    "rating": 2400,
    "tags": [
      "implementation",
      "math",
      "number theory",
      "ternary search"
    ]
  },
  {
    "id": "847/A",
    "contestId": 847,
    "index": "A",
    "name": "Union of Doubly Linked Lists",
    "rating": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1370/C",
    "contestId": 1370,
    "index": "C",
    "name": "Number Game",
    "rating": 1400,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1268/D",
    "contestId": 1268,
    "index": "D",
    "name": "Invertation in Tournament",
    "rating": 3200,
    "tags": [
      "brute force",
      "divide and conquer",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1155/B",
    "contestId": 1155,
    "index": "B",
    "name": "Game with Telephone Numbers",
    "rating": 1200,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1271/A",
    "contestId": 1271,
    "index": "A",
    "name": "Suits",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1560/C",
    "contestId": 1560,
    "index": "C",
    "name": "Infinity Table",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1944/A",
    "contestId": 1944,
    "index": "A",
    "name": "Destroying Bridges",
    "rating": 800,
    "tags": [
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1092/A",
    "contestId": 1092,
    "index": "A",
    "name": "Uniform String",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "955/B",
    "contestId": 955,
    "index": "B",
    "name": "Not simply beatiful strings",
    "rating": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "917/B",
    "contestId": 917,
    "index": "B",
    "name": "MADMAX",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "graphs"
    ]
  },
  {
    "id": "1387/C",
    "contestId": 1387,
    "index": "C",
    "name": "Viruses",
    "rating": 2900,
    "tags": [
      "*special",
      "dp",
      "shortest paths",
      "string suffix structures"
    ]
  },
  {
    "id": "1747/A",
    "contestId": 1747,
    "index": "A",
    "name": "Two Groups",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1540/D",
    "contestId": 1540,
    "index": "D",
    "name": "Inverse Inversions",
    "rating": 3200,
    "tags": [
      "binary search",
      "brute force",
      "data structures"
    ]
  },
  {
    "id": "217/B",
    "contestId": 217,
    "index": "B",
    "name": "Blackboard Fibonacci",
    "rating": 2100,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1794/B",
    "contestId": 1794,
    "index": "B",
    "name": "Not Dividing",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1081/A",
    "contestId": 1081,
    "index": "A",
    "name": "Definite Game",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1404/E",
    "contestId": 1404,
    "index": "E",
    "name": "Bricks",
    "rating": 2800,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "id": "1580/B",
    "contestId": 1580,
    "index": "B",
    "name": "Mathematics Curriculum",
    "rating": 2600,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1151/D",
    "contestId": 1151,
    "index": "D",
    "name": "Stas and the Queue at the Buffet",
    "rating": 1600,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1374/A",
    "contestId": 1374,
    "index": "A",
    "name": "Required Remainder",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1894/A",
    "contestId": 1894,
    "index": "A",
    "name": "Secret Sport",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1709/B",
    "contestId": 1709,
    "index": "B",
    "name": "Also Try Minecraft",
    "rating": 900,
    "tags": [
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "21/A",
    "contestId": 21,
    "index": "A",
    "name": "Jabber ID",
    "rating": 1900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "159/A",
    "contestId": 159,
    "index": "A",
    "name": "Friends or Not",
    "rating": 1400,
    "tags": [
      "*special",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1850/H",
    "contestId": 1850,
    "index": "H",
    "name": "The Third Letter",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1762/F",
    "contestId": 1762,
    "index": "F",
    "name": "Good Pairs",
    "rating": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1028/E",
    "contestId": 1028,
    "index": "E",
    "name": "Restore Array",
    "rating": 2400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "124/B",
    "contestId": 124,
    "index": "B",
    "name": "Permutations",
    "rating": 1400,
    "tags": [
      "brute force",
      "combinatorics",
      "implementation"
    ]
  },
  {
    "id": "613/B",
    "contestId": 613,
    "index": "B",
    "name": "Skills",
    "rating": 1900,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "294/B",
    "contestId": 294,
    "index": "B",
    "name": "Shaass and Bookshelf",
    "rating": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "260/A",
    "contestId": 260,
    "index": "A",
    "name": "Adding Digits",
    "rating": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "832/D",
    "contestId": 832,
    "index": "D",
    "name": "Misha, Grisha and Underground",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1149/D",
    "contestId": 1149,
    "index": "D",
    "name": "Abandoning Roads",
    "rating": 3000,
    "tags": [
      "brute force",
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1725/B",
    "contestId": 1725,
    "index": "B",
    "name": "Basketball Together",
    "rating": 1000,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1864/D",
    "contestId": 1864,
    "index": "D",
    "name": "Matrix Cascade",
    "rating": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "520/A",
    "contestId": 520,
    "index": "A",
    "name": "Pangram",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1928/E",
    "contestId": 1928,
    "index": "E",
    "name": "Modular Sequence",
    "rating": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "graphs",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "222/A",
    "contestId": 222,
    "index": "A",
    "name": "Shooshuns and Sequence",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1269/A",
    "contestId": 1269,
    "index": "A",
    "name": "Equation",
    "rating": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1009/F",
    "contestId": 1009,
    "index": "F",
    "name": "Dominant Indices",
    "rating": 2300,
    "tags": [
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "id": "1103/E",
    "contestId": 1103,
    "index": "E",
    "name": "Radix sum",
    "rating": 3400,
    "tags": [
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "id": "813/E",
    "contestId": 813,
    "index": "E",
    "name": "Army Creation",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1717/A",
    "contestId": 1717,
    "index": "A",
    "name": "Madoka and Strange Thoughts",
    "rating": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1749/A",
    "contestId": 1749,
    "index": "A",
    "name": "Cowardly Rooks",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "48/D",
    "contestId": 48,
    "index": "D",
    "name": "Permutations",
    "rating": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1369/C",
    "contestId": 1369,
    "index": "C",
    "name": "RationalLee",
    "rating": 1400,
    "tags": [
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "264/C",
    "contestId": 264,
    "index": "C",
    "name": "Choosing Balls",
    "rating": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1685/A",
    "contestId": 1685,
    "index": "A",
    "name": "Circular Local MiniMax",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1175/F",
    "contestId": 1175,
    "index": "F",
    "name": "The Number of Subpermutations",
    "rating": 2500,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "hashing",
      "math"
    ]
  },
  {
    "id": "628/A",
    "contestId": 628,
    "index": "A",
    "name": "Tennis Tournament",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1516/D",
    "contestId": 1516,
    "index": "D",
    "name": "Cut",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "graphs",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1364/B",
    "contestId": 1364,
    "index": "B",
    "name": "Most socially-distanced subsequence",
    "rating": 1300,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1025/C",
    "contestId": 1025,
    "index": "C",
    "name": "Plasticine zebra",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1391/C",
    "contestId": 1391,
    "index": "C",
    "name": "Cyclic Permutations",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1729/B",
    "contestId": 1729,
    "index": "B",
    "name": "Decode String",
    "rating": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1238/D",
    "contestId": 1238,
    "index": "D",
    "name": "AB-string",
    "rating": 1900,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "strings"
    ]
  },
  {
    "id": "40/D",
    "contestId": 40,
    "index": "D",
    "name": "Interesting Sequence",
    "rating": 2600,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1612/A",
    "contestId": 1612,
    "index": "A",
    "name": "Distance",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "1408/E",
    "contestId": 1408,
    "index": "E",
    "name": "Avoid Rainbow Cycles",
    "rating": 2400,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1601/F",
    "contestId": 1601,
    "index": "F",
    "name": "Two Sorts",
    "rating": 3400,
    "tags": [
      "binary search",
      "dfs and similar",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1305/G",
    "contestId": 1305,
    "index": "G",
    "name": "Kuroni and Antihype",
    "rating": 3500,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1/A",
    "contestId": 1,
    "index": "A",
    "name": "Theatre Square",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "327/A",
    "contestId": 327,
    "index": "A",
    "name": "Flipping Game",
    "rating": 1200,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "131/D",
    "contestId": 131,
    "index": "D",
    "name": "Subway",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1083/C",
    "contestId": 1083,
    "index": "C",
    "name": "Max Mex",
    "rating": 2900,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "45/F",
    "contestId": 45,
    "index": "F",
    "name": "Goats and Wolves",
    "rating": 2500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "914/A",
    "contestId": 914,
    "index": "A",
    "name": "Perfect Squares",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1301/A",
    "contestId": 1301,
    "index": "A",
    "name": "Three Strings",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1208/D",
    "contestId": 1208,
    "index": "D",
    "name": "Restore Permutation",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "456/A",
    "contestId": 456,
    "index": "A",
    "name": "Laptops",
    "rating": 1100,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "273/D",
    "contestId": 273,
    "index": "D",
    "name": "Dima and Figure",
    "rating": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "155/B",
    "contestId": 155,
    "index": "B",
    "name": "Combination",
    "rating": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1585/C",
    "contestId": 1585,
    "index": "C",
    "name": "Minimize Distance",
    "rating": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "240/E",
    "contestId": 240,
    "index": "E",
    "name": "Road Repairs",
    "rating": 2800,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "733/A",
    "contestId": 733,
    "index": "A",
    "name": "Grasshopper And the String",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "777/B",
    "contestId": 777,
    "index": "B",
    "name": "Game of Credit Cards",
    "rating": 1300,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "520/D",
    "contestId": 520,
    "index": "D",
    "name": "Cubes",
    "rating": 2100,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "584/B",
    "contestId": 584,
    "index": "B",
    "name": "Kolya and Tanya",
    "rating": 1500,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "id": "1088/A",
    "contestId": 1088,
    "index": "A",
    "name": "Ehab and another construction problem",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "834/A",
    "contestId": 834,
    "index": "A",
    "name": "The Useless Toy",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1851/A",
    "contestId": 1851,
    "index": "A",
    "name": "Escalator Conversations",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1984/B",
    "contestId": 1984,
    "index": "B",
    "name": "Large Addition",
    "rating": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1141/A",
    "contestId": 1141,
    "index": "A",
    "name": "Game 23",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "886/A",
    "contestId": 886,
    "index": "A",
    "name": "ACM ICPC",
    "rating": 1000,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1776/J",
    "contestId": 1776,
    "index": "J",
    "name": "Italian Data Centers",
    "rating": 2500,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1701/E",
    "contestId": 1701,
    "index": "E",
    "name": "Text Editor",
    "rating": 2500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1980/E",
    "contestId": 1980,
    "index": "E",
    "name": "Permutation of Rows and Columns",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "hashing",
      "implementation",
      "math",
      "matrices",
      "sortings"
    ]
  },
  {
    "id": "1098/B",
    "contestId": 1098,
    "index": "B",
    "name": "Nice table",
    "rating": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1416/A",
    "contestId": 1416,
    "index": "A",
    "name": "k-Amazing Numbers",
    "rating": 1500,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "723/A",
    "contestId": 723,
    "index": "A",
    "name": "The New Year: Meeting Friends",
    "rating": 800,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "47/B",
    "contestId": 47,
    "index": "B",
    "name": "Coins",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1601/D",
    "contestId": 1601,
    "index": "D",
    "name": "Difficult Mountain",
    "rating": 2700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "715/E",
    "contestId": 715,
    "index": "E",
    "name": "Complete the Permutations",
    "rating": 3400,
    "tags": [
      "combinatorics",
      "fft",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1293/B",
    "contestId": 1293,
    "index": "B",
    "name": "JOE is on TV!",
    "rating": 1000,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1462/B",
    "contestId": 1462,
    "index": "B",
    "name": "Last Year's Substring",
    "rating": 800,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "461/D",
    "contestId": 461,
    "index": "D",
    "name": "Appleman and Complicated Task",
    "rating": 2800,
    "tags": [
      "dsu",
      "math"
    ]
  },
  {
    "id": "765/A",
    "contestId": 765,
    "index": "A",
    "name": "Neverending competitions",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1392/G",
    "contestId": 1392,
    "index": "G",
    "name": "Omkar and Pies",
    "rating": 2900,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "math",
      "shortest paths"
    ]
  },
  {
    "id": "1220/B",
    "contestId": 1220,
    "index": "B",
    "name": "Multiplication Table",
    "rating": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1900/C",
    "contestId": 1900,
    "index": "C",
    "name": "Anji's Binary Tree",
    "rating": 1300,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "262/A",
    "contestId": 262,
    "index": "A",
    "name": "Roma and Lucky Numbers",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1931/D",
    "contestId": 1931,
    "index": "D",
    "name": "Divisible Pairs",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1987/F1",
    "contestId": 1987,
    "index": "F1",
    "name": "Interesting Problem (Easy Version)",
    "rating": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "32/A",
    "contestId": 32,
    "index": "A",
    "name": "Reconnaissance",
    "rating": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1475/G",
    "contestId": 1475,
    "index": "G",
    "name": "Strange Beauty",
    "rating": 1900,
    "tags": [
      "dp",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "1065/B",
    "contestId": 1065,
    "index": "B",
    "name": "Vasya and Isolated Vertices",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "1920/B",
    "contestId": 1920,
    "index": "B",
    "name": "Summation Game",
    "rating": 1100,
    "tags": [
      "games",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "379/B",
    "contestId": 379,
    "index": "B",
    "name": "New Year Present",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1104/B",
    "contestId": 1104,
    "index": "B",
    "name": "Game with string",
    "rating": 1200,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "id": "60/D",
    "contestId": 60,
    "index": "D",
    "name": "Savior",
    "rating": 2500,
    "tags": [
      "brute force",
      "dsu",
      "math"
    ]
  },
  {
    "id": "46/G",
    "contestId": 46,
    "index": "G",
    "name": "Emperor's Problem",
    "rating": 2500,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1214/C",
    "contestId": 1214,
    "index": "C",
    "name": "Bad Sequence",
    "rating": 1200,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1907/G",
    "contestId": 1907,
    "index": "G",
    "name": "Lights",
    "rating": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "111/C",
    "contestId": 111,
    "index": "C",
    "name": "Petya and Spiders",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "dp",
      "dsu"
    ]
  },
  {
    "id": "475/C",
    "contestId": 475,
    "index": "C",
    "name": "Kamal-ol-molk's Painting",
    "rating": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1108/B",
    "contestId": 1108,
    "index": "B",
    "name": "Divisors of Two Integers",
    "rating": 1100,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1379/C",
    "contestId": 1379,
    "index": "C",
    "name": "Choosing flowers",
    "rating": 2000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "131/C",
    "contestId": 131,
    "index": "C",
    "name": "The World is a Theatre",
    "rating": 1400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1980/A",
    "contestId": 1980,
    "index": "A",
    "name": "Problem Generator",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "618/D",
    "contestId": 618,
    "index": "D",
    "name": "Hamiltonian Spanning Tree",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graph matchings",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1843/A",
    "contestId": 1843,
    "index": "A",
    "name": "Sasha and Array Coloring",
    "rating": 800,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1539/D",
    "contestId": 1539,
    "index": "D",
    "name": "PriceFixed",
    "rating": 1600,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "784/B",
    "contestId": 784,
    "index": "B",
    "name": "Kids' Riddle",
    "rating": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1512/E",
    "contestId": 1512,
    "index": "E",
    "name": "Permutation by Sum",
    "rating": 1600,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1777/A",
    "contestId": 1777,
    "index": "A",
    "name": "Everybody Likes Good Arrays!",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "283/C",
    "contestId": 283,
    "index": "C",
    "name": "Coin Troubles",
    "rating": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "111/D",
    "contestId": 111,
    "index": "D",
    "name": "Petya and Coloring",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1771/C",
    "contestId": 1771,
    "index": "C",
    "name": "Hossam and Trainees",
    "rating": 1600,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1528/B",
    "contestId": 1528,
    "index": "B",
    "name": "Kavi on Pairing Duty",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "319/D",
    "contestId": 319,
    "index": "D",
    "name": "Have You Ever Heard About the Word?",
    "rating": 2800,
    "tags": [
      "greedy",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1249/E",
    "contestId": 1249,
    "index": "E",
    "name": "By Elevator or Stairs?",
    "rating": 1700,
    "tags": [
      "dp",
      "shortest paths"
    ]
  },
  {
    "id": "1279/D",
    "contestId": 1279,
    "index": "D",
    "name": "Santa's Bot",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "901/B",
    "contestId": 901,
    "index": "B",
    "name": "GCD of Polynomials",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1830/A",
    "contestId": 1830,
    "index": "A",
    "name": "Copil Copac Draws Trees",
    "rating": 1400,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1950/C",
    "contestId": 1950,
    "index": "C",
    "name": "Clock Conversion",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1705/D",
    "contestId": 1705,
    "index": "D",
    "name": "Mark and Lightbulbs",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1981/D",
    "contestId": 1981,
    "index": "D",
    "name": "Turtle and Multiplication",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "number theory"
    ]
  },
  {
    "id": "1626/B",
    "contestId": 1626,
    "index": "B",
    "name": "Minor Reduction",
    "rating": 1100,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "575/B",
    "contestId": 575,
    "index": "B",
    "name": "Bribes",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1682/B",
    "contestId": 1682,
    "index": "B",
    "name": "AND Sorting",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "666/D",
    "contestId": 666,
    "index": "D",
    "name": "Chain Reaction",
    "rating": 3000,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "id": "1152/F1",
    "contestId": 1152,
    "index": "F1",
    "name": "Neko Rules the Catniverse (Small Version)",
    "rating": 2800,
    "tags": [
      "bitmasks",
      "dp",
      "matrices"
    ]
  },
  {
    "id": "756/A",
    "contestId": 756,
    "index": "A",
    "name": "Pavel and barbecue",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar"
    ]
  },
  {
    "id": "1629/B",
    "contestId": 1629,
    "index": "B",
    "name": "GCD Arrays",
    "rating": 800,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1696/G",
    "contestId": 1696,
    "index": "G",
    "name": "Fishingprince Plays With Array Again",
    "rating": 3300,
    "tags": [
      "brute force",
      "data structures",
      "geometry",
      "math"
    ]
  },
  {
    "id": "175/A",
    "contestId": 175,
    "index": "A",
    "name": "Robot Bicorn Attack",
    "rating": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "82/C",
    "contestId": 82,
    "index": "C",
    "name": "General Mobilization",
    "rating": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "sortings"
    ]
  },
  {
    "id": "534/A",
    "contestId": 534,
    "index": "A",
    "name": "Exam",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "909/F",
    "contestId": 909,
    "index": "F",
    "name": "AND-permutations",
    "rating": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1800/C2",
    "contestId": 1800,
    "index": "C2",
    "name": "Powering the Hero (hard version)",
    "rating": 1100,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1129/D",
    "contestId": 1129,
    "index": "D",
    "name": "Isolation",
    "rating": 2900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1889/B",
    "contestId": 1889,
    "index": "B",
    "name": "Doremy's Connecting Plan",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "961/B",
    "contestId": 961,
    "index": "B",
    "name": "Lecture Sleep",
    "rating": 1200,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1592/B",
    "contestId": 1592,
    "index": "B",
    "name": "Hemose Shopping",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "dsu",
      "math",
      "sortings"
    ]
  },
  {
    "id": "141/B",
    "contestId": 141,
    "index": "B",
    "name": "Hopscotch",
    "rating": 1400,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1157/D",
    "contestId": 1157,
    "index": "D",
    "name": "N Problems During K Days",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "798/B",
    "contestId": 798,
    "index": "B",
    "name": "Mike and strings",
    "rating": 1300,
    "tags": [
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "id": "1684/G",
    "contestId": 1684,
    "index": "G",
    "name": "Euclid Guess",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "math",
      "number theory"
    ]
  },
  {
    "id": "327/B",
    "contestId": 327,
    "index": "B",
    "name": "Hungry Sequence",
    "rating": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "id": "883/M",
    "contestId": 883,
    "index": "M",
    "name": "Quadcopter Competition",
    "rating": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "495/B",
    "contestId": 495,
    "index": "B",
    "name": "Modular Equations",
    "rating": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1854/B",
    "contestId": 1854,
    "index": "B",
    "name": "Earn or Unlock",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "id": "1055/F",
    "contestId": 1055,
    "index": "F",
    "name": "Tree and XOR",
    "rating": 2900,
    "tags": [
      "strings",
      "trees"
    ]
  },
  {
    "id": "73/A",
    "contestId": 73,
    "index": "A",
    "name": "The Elder Trolls IV: Oblivon",
    "rating": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "67/D",
    "contestId": 67,
    "index": "D",
    "name": "Optical Experiment",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1838/E",
    "contestId": 1838,
    "index": "E",
    "name": "Count Supersequences",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "650/E",
    "contestId": 650,
    "index": "E",
    "name": "Clockwork Bomb",
    "rating": 3200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "38/A",
    "contestId": 38,
    "index": "A",
    "name": "Army",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1425/E",
    "contestId": 1425,
    "index": "E",
    "name": "Excitation of Atoms",
    "rating": 2200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "213/E",
    "contestId": 213,
    "index": "E",
    "name": "Two Permutations",
    "rating": 2700,
    "tags": [
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "291/A",
    "contestId": 291,
    "index": "A",
    "name": "Spyke Talks",
    "rating": 800,
    "tags": [
      "*special",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "603/B",
    "contestId": 603,
    "index": "B",
    "name": "Moodular Arithmetic",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1151/E",
    "contestId": 1151,
    "index": "E",
    "name": "Number of Components",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "id": "1280/E",
    "contestId": 1280,
    "index": "E",
    "name": "Kirchhoff's Current Loss",
    "rating": 2900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "487/C",
    "contestId": 487,
    "index": "C",
    "name": "Prefix Product Sequence",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "585/A",
    "contestId": 585,
    "index": "A",
    "name": "Gennady the Dentist",
    "rating": 1800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "115/B",
    "contestId": 115,
    "index": "B",
    "name": "Lawnmower",
    "rating": 1500,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1799/G",
    "contestId": 1799,
    "index": "G",
    "name": "Count Voting",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "235/A",
    "contestId": 235,
    "index": "A",
    "name": "LCM Challenge",
    "rating": 1600,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "1637/A",
    "contestId": 1637,
    "index": "A",
    "name": "Sorting Parts",
    "rating": 800,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "id": "83/B",
    "contestId": 83,
    "index": "B",
    "name": "Doctor",
    "rating": 1800,
    "tags": [
      "binary search",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1710/B",
    "contestId": 1710,
    "index": "B",
    "name": "Rain",
    "rating": 2100,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "geometry",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1634/B",
    "contestId": 1634,
    "index": "B",
    "name": "Fortune Telling",
    "rating": 1400,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "id": "1958/G",
    "contestId": 1958,
    "index": "G",
    "name": "Observation Towers",
    "rating": 2400,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "455/C",
    "contestId": 455,
    "index": "C",
    "name": "Civilization",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "ternary search",
      "trees"
    ]
  },
  {
    "id": "1251/C",
    "contestId": 1251,
    "index": "C",
    "name": "Minimize The Integer",
    "rating": 1600,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "877/D",
    "contestId": 877,
    "index": "D",
    "name": "Olya and Energy Drinks",
    "rating": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "185/E",
    "contestId": 185,
    "index": "E",
    "name": "Soap Time! - 2",
    "rating": 3000,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1285/E",
    "contestId": 1285,
    "index": "E",
    "name": "Delete a Segment",
    "rating": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "graphs",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "1100/B",
    "contestId": 1100,
    "index": "B",
    "name": "Build a Contest",
    "rating": 1300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1698/B",
    "contestId": 1698,
    "index": "B",
    "name": "Rising Sand",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1556/A",
    "contestId": 1556,
    "index": "A",
    "name": "A Variety of Operations",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "98/A",
    "contestId": 98,
    "index": "A",
    "name": "Help Victoria the Wise",
    "rating": 1700,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1560/B",
    "contestId": 1560,
    "index": "B",
    "name": "Who's Opposite?",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "526/A",
    "contestId": 526,
    "index": "A",
    "name": "King of Thieves",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "616/B",
    "contestId": 616,
    "index": "B",
    "name": "Dinner with Emma",
    "rating": 1000,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "id": "1726/C",
    "contestId": 1726,
    "index": "C",
    "name": "Jatayu's Balanced Bracket Sequence",
    "rating": 1300,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "336/A",
    "contestId": 336,
    "index": "A",
    "name": "Vasily the Bear and Triangle",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "525/E",
    "contestId": 525,
    "index": "E",
    "name": "Anya and Cubes",
    "rating": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1400/G",
    "contestId": 1400,
    "index": "G",
    "name": "Mercenaries",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "dsu",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "82/E",
    "contestId": 82,
    "index": "E",
    "name": "Corridor",
    "rating": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1551/E",
    "contestId": 1551,
    "index": "E",
    "name": "Fixed Points",
    "rating": 2000,
    "tags": [
      "binary search",
      "brute force",
      "dp"
    ]
  },
  {
    "id": "608/B",
    "contestId": 608,
    "index": "B",
    "name": "Hamming Distance Sum",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "strings"
    ]
  },
  {
    "id": "1974/A",
    "contestId": 1974,
    "index": "A",
    "name": "Phone Desktop",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1257/C",
    "contestId": 1257,
    "index": "C",
    "name": "Dominated Subarray",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1867/A",
    "contestId": 1867,
    "index": "A",
    "name": "green_gold_dog, array and permutation",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "931/C",
    "contestId": 931,
    "index": "C",
    "name": "Laboratory Work",
    "rating": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "98/E",
    "contestId": 98,
    "index": "E",
    "name": "Help Shrek and Donkey",
    "rating": 2700,
    "tags": [
      "dp",
      "games",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "630/L",
    "contestId": 630,
    "index": "L",
    "name": "Cracking the Code",
    "rating": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "267/C",
    "contestId": 267,
    "index": "C",
    "name": "Berland Traffic",
    "rating": 2700,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "id": "1514/A",
    "contestId": 1514,
    "index": "A",
    "name": "Perfectly Imperfect Array",
    "rating": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "486/B",
    "contestId": 486,
    "index": "B",
    "name": "OR in Matrix",
    "rating": 1300,
    "tags": [
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "id": "743/A",
    "contestId": 743,
    "index": "A",
    "name": "Vladik and flights",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1856/A",
    "contestId": 1856,
    "index": "A",
    "name": "Tales of a Sort",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "638/A",
    "contestId": 638,
    "index": "A",
    "name": "Home Numbers",
    "rating": 1100,
    "tags": [
      "*special",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "847/I",
    "contestId": 847,
    "index": "I",
    "name": "Noise Level",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1644/C",
    "contestId": 1644,
    "index": "C",
    "name": "Increase Subarray Sums",
    "rating": 1400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "71/C",
    "contestId": 71,
    "index": "C",
    "name": "Round Table Knights",
    "rating": 1600,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "89/C",
    "contestId": 89,
    "index": "C",
    "name": "Chip Play",
    "rating": 2300,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1404/C",
    "contestId": 1404,
    "index": "C",
    "name": "Fixed Point Removal",
    "rating": 2300,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1826/A",
    "contestId": 1826,
    "index": "A",
    "name": "Trust Nobody",
    "rating": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "580/B",
    "contestId": 580,
    "index": "B",
    "name": "Kefa and Company",
    "rating": 1500,
    "tags": [
      "binary search",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "317/A",
    "contestId": 317,
    "index": "A",
    "name": "Perfect Pair",
    "rating": 1600,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "799/A",
    "contestId": 799,
    "index": "A",
    "name": "Carrot Cakes",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1383/A",
    "contestId": 1383,
    "index": "A",
    "name": "String Transformation 1",
    "rating": 1700,
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "strings",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "362/B",
    "contestId": 362,
    "index": "B",
    "name": "Petya and Staircases",
    "rating": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "733/C",
    "contestId": 733,
    "index": "C",
    "name": "Epidemic in Monstropolis",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "689/D",
    "contestId": 689,
    "index": "D",
    "name": "Friends and Subsequences",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "364/B",
    "contestId": 364,
    "index": "B",
    "name": "Free Market",
    "rating": 2200,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "704/A",
    "contestId": 704,
    "index": "A",
    "name": "Thor",
    "rating": 1600,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "725/B",
    "contestId": 725,
    "index": "B",
    "name": "Food on the Plane",
    "rating": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "482/D",
    "contestId": 482,
    "index": "D",
    "name": "Random Function and Tree",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1992/F",
    "contestId": 1992,
    "index": "F",
    "name": "Valuable Cards",
    "rating": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1239/C",
    "contestId": 1239,
    "index": "C",
    "name": "Queue in the Train",
    "rating": 2300,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1978/D",
    "contestId": 1978,
    "index": "D",
    "name": "Elections",
    "rating": 1600,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1847/C",
    "contestId": 1847,
    "index": "C",
    "name": "Vampiric Powers, anyone?",
    "rating": 1400,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "285/A",
    "contestId": 285,
    "index": "A",
    "name": "Slightly Decreasing Permutations",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "940/B",
    "contestId": 940,
    "index": "B",
    "name": "Our Tanya is Crying Out Loud",
    "rating": 1400,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "825/C",
    "contestId": 825,
    "index": "C",
    "name": "Multi-judge Solving",
    "rating": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1554/A",
    "contestId": 1554,
    "index": "A",
    "name": "Cherry",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "474/C",
    "contestId": 474,
    "index": "C",
    "name": "Captain Marmot",
    "rating": 2000,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "id": "1659/A",
    "contestId": 1659,
    "index": "A",
    "name": "Red Versus Blue",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "452/E",
    "contestId": 452,
    "index": "E",
    "name": "Three strings",
    "rating": 2400,
    "tags": [
      "data structures",
      "dsu",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1245/F",
    "contestId": 1245,
    "index": "F",
    "name": "Daniel and Spring Cleaning",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "648/B",
    "contestId": 648,
    "index": "B",
    "name": "Собери стол",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "1493/D",
    "contestId": 1493,
    "index": "D",
    "name": "GCD of an Array",
    "rating": 2100,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1878/E",
    "contestId": 1878,
    "index": "E",
    "name": "Iva & Pav",
    "rating": 1400,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1003/C",
    "contestId": 1003,
    "index": "C",
    "name": "Intense Heat",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "659/G",
    "contestId": 659,
    "index": "G",
    "name": "Fence Divercity",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "id": "1082/G",
    "contestId": 1082,
    "index": "G",
    "name": "Petya and Graph",
    "rating": 2400,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "id": "858/A",
    "contestId": 858,
    "index": "A",
    "name": "k-rounding",
    "rating": 1100,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "74/D",
    "contestId": 74,
    "index": "D",
    "name": "Hanger",
    "rating": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "261/A",
    "contestId": 261,
    "index": "A",
    "name": "Maxim and Discounts",
    "rating": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "552/D",
    "contestId": 552,
    "index": "D",
    "name": "Vanya and Triangles",
    "rating": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1131/A",
    "contestId": 1131,
    "index": "A",
    "name": "Sea Battle",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1343/F",
    "contestId": 1343,
    "index": "F",
    "name": "Restore the Permutation by Sorted Segments",
    "rating": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "478/D",
    "contestId": 478,
    "index": "D",
    "name": "Red-Green Towers",
    "rating": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1767/D",
    "contestId": 1767,
    "index": "D",
    "name": "Playoff",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "128/E",
    "contestId": 128,
    "index": "E",
    "name": "Birthday",
    "rating": 2900,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "653/A",
    "contestId": 653,
    "index": "A",
    "name": "Bear and Three Balls",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "195/D",
    "contestId": 195,
    "index": "D",
    "name": "Analyzing Polyline",
    "rating": 1900,
    "tags": [
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "id": "499/A",
    "contestId": 499,
    "index": "A",
    "name": "Watching a movie",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1766/C",
    "contestId": 1766,
    "index": "C",
    "name": "Hamiltonian Wall",
    "rating": 1300,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "888/G",
    "contestId": 888,
    "index": "G",
    "name": "Xor-MST",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "id": "1808/D",
    "contestId": 1808,
    "index": "D",
    "name": "Petya, Petya, Petr, and Palindromes",
    "rating": 2100,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "612/A",
    "contestId": 612,
    "index": "A",
    "name": "The Text Splitting",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "190/A",
    "contestId": 190,
    "index": "A",
    "name": "Vasya and the Bus",
    "rating": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "36/C",
    "contestId": 36,
    "index": "C",
    "name": "Bowls",
    "rating": 2200,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "1996/G",
    "contestId": 1996,
    "index": "G",
    "name": "Penacony",
    "rating": 2200,
    "tags": [
      "brute force",
      "data structures",
      "graphs",
      "greedy",
      "hashing"
    ]
  },
  {
    "id": "53/D",
    "contestId": 53,
    "index": "D",
    "name": "Physical Education",
    "rating": 1500,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "1421/E",
    "contestId": 1421,
    "index": "E",
    "name": "Swedish Heroes",
    "rating": 2700,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1034/D",
    "contestId": 1034,
    "index": "D",
    "name": "Intervals of Intervals",
    "rating": 3500,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "995/F",
    "contestId": 995,
    "index": "F",
    "name": "Cowmpany Cowmpensation",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "489/A",
    "contestId": 489,
    "index": "A",
    "name": "SwapSort",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1419/D1",
    "contestId": 1419,
    "index": "D1",
    "name": "Sage's Birthday (easy version)",
    "rating": 1000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "878/C",
    "contestId": 878,
    "index": "C",
    "name": "Tournament",
    "rating": 2700,
    "tags": [
      "data structures",
      "graphs"
    ]
  },
  {
    "id": "534/B",
    "contestId": 534,
    "index": "B",
    "name": "Covered Path",
    "rating": 1400,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "232/B",
    "contestId": 232,
    "index": "B",
    "name": "Table",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "805/B",
    "contestId": 805,
    "index": "B",
    "name": "3-palindrome",
    "rating": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1139/A",
    "contestId": 1139,
    "index": "A",
    "name": "Even Substrings",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1698/G",
    "contestId": 1698,
    "index": "G",
    "name": "Long Binary String",
    "rating": 2900,
    "tags": [
      "bitmasks",
      "math",
      "matrices",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "id": "910/A",
    "contestId": 910,
    "index": "A",
    "name": "The Way to Home",
    "rating": 800,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "630/I",
    "contestId": 630,
    "index": "I",
    "name": "Parking Lot",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "903/B",
    "contestId": 903,
    "index": "B",
    "name": "The Modcrab",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1556/C",
    "contestId": 1556,
    "index": "C",
    "name": "Compressed Bracket Sequence",
    "rating": 1800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "145/E",
    "contestId": 145,
    "index": "E",
    "name": "Lucky Queries",
    "rating": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1975/F",
    "contestId": 1975,
    "index": "F",
    "name": "Set",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "id": "18/E",
    "contestId": 18,
    "index": "E",
    "name": "Flag 2",
    "rating": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1934/E",
    "contestId": 1934,
    "index": "E",
    "name": "Weird LCM Operations",
    "rating": 3000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "id": "41/A",
    "contestId": 41,
    "index": "A",
    "name": "Translation",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "735/A",
    "contestId": 735,
    "index": "A",
    "name": "Ostap and Grasshopper",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1409/B",
    "contestId": 1409,
    "index": "B",
    "name": "Minimum Product",
    "rating": 1100,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1085/C",
    "contestId": 1085,
    "index": "C",
    "name": "Connect Three",
    "rating": 1600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "255/C",
    "contestId": 255,
    "index": "C",
    "name": "Almost Arithmetical Progression",
    "rating": 1500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "1345/A",
    "contestId": 1345,
    "index": "A",
    "name": "Puzzle Pieces",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1067/B",
    "contestId": 1067,
    "index": "B",
    "name": "Multihedgehog",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1007/A",
    "contestId": 1007,
    "index": "A",
    "name": "Reorder the Array",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "data structures",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1878/G",
    "contestId": 1878,
    "index": "G",
    "name": "wxhtzdy ORO Tree",
    "rating": 2300,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "dfs and similar",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1574/C",
    "contestId": 1574,
    "index": "C",
    "name": "Slay the Dragon",
    "rating": 1300,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "ternary search"
    ]
  },
  {
    "id": "1720/D2",
    "contestId": 1720,
    "index": "D2",
    "name": "Xor-Subsequence (hard version)",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "dp",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1130/A",
    "contestId": 1130,
    "index": "A",
    "name": "Be Positive",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "545/A",
    "contestId": 545,
    "index": "A",
    "name": "Toy Cars",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1811/D",
    "contestId": 1811,
    "index": "D",
    "name": "Umka and a Long Flight",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "626/E",
    "contestId": 626,
    "index": "E",
    "name": "Simple Skewness",
    "rating": 2400,
    "tags": [
      "binary search",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "916/B",
    "contestId": 916,
    "index": "B",
    "name": "Jamie and Binary Sequence (changed after round)",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1552/I",
    "contestId": 1552,
    "index": "I",
    "name": "Organizing a Music Festival",
    "rating": 3400,
    "tags": [
      "dfs and similar",
      "math"
    ]
  },
  {
    "id": "1256/F",
    "contestId": 1256,
    "index": "F",
    "name": "Equalizing Two Strings",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "650/C",
    "contestId": 650,
    "index": "C",
    "name": "Table Compression",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "924/C",
    "contestId": 924,
    "index": "C",
    "name": "Riverside Curio",
    "rating": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1778/E",
    "contestId": 1778,
    "index": "E",
    "name": "The Tree Has Fallen!",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "math",
      "trees"
    ]
  },
  {
    "id": "774/J",
    "contestId": 774,
    "index": "J",
    "name": "Stepan's Series",
    "rating": 2000,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "id": "455/A",
    "contestId": 455,
    "index": "A",
    "name": "Boredom",
    "rating": 1500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1616/H",
    "contestId": 1616,
    "index": "H",
    "name": "Keep XOR Low",
    "rating": 3000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "data structures",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "id": "1800/A",
    "contestId": 1800,
    "index": "A",
    "name": "Is It a Cat?",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "883/D",
    "contestId": 883,
    "index": "D",
    "name": "Packmen Strike Back",
    "rating": 2500,
    "tags": [
      "binary search",
      "dp",
      "math"
    ]
  },
  {
    "id": "1717/D",
    "contestId": 1717,
    "index": "D",
    "name": "Madoka and The Corruption Scheme",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1771/D",
    "contestId": 1771,
    "index": "D",
    "name": "Hossam and (sub-)palindromic tree",
    "rating": 2100,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "strings",
      "trees"
    ]
  },
  {
    "id": "933/E",
    "contestId": 933,
    "index": "E",
    "name": "A Preponderant Reunion",
    "rating": 3200,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "id": "1056/G",
    "contestId": 1056,
    "index": "G",
    "name": "Take Metro",
    "rating": 2900,
    "tags": [
      "brute force",
      "data structures",
      "graphs"
    ]
  },
  {
    "id": "314/E",
    "contestId": 314,
    "index": "E",
    "name": "Sereja and Squares",
    "rating": 2900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "763/A",
    "contestId": 763,
    "index": "A",
    "name": "Timofey and a tree",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "811/A",
    "contestId": 811,
    "index": "A",
    "name": "Vladik and Courtesy",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "998/A",
    "contestId": 998,
    "index": "A",
    "name": "Balloons",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1612/G",
    "contestId": 1612,
    "index": "G",
    "name": "Max Sum Array",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1767/E",
    "contestId": 1767,
    "index": "E",
    "name": "Algebra Flash",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "graphs",
      "math",
      "meet-in-the-middle",
      "trees"
    ]
  },
  {
    "id": "1099/A",
    "contestId": 1099,
    "index": "A",
    "name": "Snowball",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1553/B",
    "contestId": 1553,
    "index": "B",
    "name": "Reverse String",
    "rating": 1300,
    "tags": [
      "brute force",
      "dp",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1669/E",
    "contestId": 1669,
    "index": "E",
    "name": "2-Letter Strings",
    "rating": 1200,
    "tags": [
      "data structures",
      "math",
      "strings"
    ]
  },
  {
    "id": "1793/B",
    "contestId": 1793,
    "index": "B",
    "name": "Fedya and Array",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1675/B",
    "contestId": 1675,
    "index": "B",
    "name": "Make It Increasing",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1373/C",
    "contestId": 1373,
    "index": "C",
    "name": "Pluses and Minuses",
    "rating": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1422/C",
    "contestId": 1422,
    "index": "C",
    "name": "Bargain",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1846/A",
    "contestId": 1846,
    "index": "A",
    "name": "Rudolph and Cut the Rope",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "464/E",
    "contestId": 464,
    "index": "E",
    "name": "The Classic Problem",
    "rating": 3000,
    "tags": [
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1499/E",
    "contestId": 1499,
    "index": "E",
    "name": "Chaotic Merge",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "strings"
    ]
  },
  {
    "id": "568/E",
    "contestId": 568,
    "index": "E",
    "name": "Longest Increasing Subsequence",
    "rating": 3000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1742/E",
    "contestId": 1742,
    "index": "E",
    "name": "Scuza",
    "rating": 1200,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "id": "760/A",
    "contestId": 760,
    "index": "A",
    "name": "Petr and a calendar",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "611/D",
    "contestId": 611,
    "index": "D",
    "name": "New Year and Ancient Prophecy",
    "rating": 2000,
    "tags": [
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1158/A",
    "contestId": 1158,
    "index": "A",
    "name": "The Party and Sweets",
    "rating": 1500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "774/C",
    "contestId": 774,
    "index": "C",
    "name": "Maximum Number",
    "rating": 1200,
    "tags": [
      "*special",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "685/B",
    "contestId": 685,
    "index": "B",
    "name": "Kay and Snowflake",
    "rating": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "151/A",
    "contestId": 151,
    "index": "A",
    "name": "Soft Drinking",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1413/A",
    "contestId": 1413,
    "index": "A",
    "name": "Finding Sasuke",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1062/C",
    "contestId": 1062,
    "index": "C",
    "name": "Banh-mi",
    "rating": 1600,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "761/B",
    "contestId": 761,
    "index": "B",
    "name": "Dasha and friends",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "327/C",
    "contestId": 327,
    "index": "C",
    "name": "Magic Five",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1607/G",
    "contestId": 1607,
    "index": "G",
    "name": "Banquet Preparations 1",
    "rating": 2200,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "85/E",
    "contestId": 85,
    "index": "E",
    "name": "Guard Towers",
    "rating": 2600,
    "tags": [
      "binary search",
      "dsu",
      "geometry",
      "graphs",
      "sortings"
    ]
  },
  {
    "id": "217/E",
    "contestId": 217,
    "index": "E",
    "name": "Alien DNA",
    "rating": 2800,
    "tags": [
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "id": "1765/E",
    "contestId": 1765,
    "index": "E",
    "name": "Exchange",
    "rating": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1155/A",
    "contestId": 1155,
    "index": "A",
    "name": "Reverse a Substring",
    "rating": 1000,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "567/B",
    "contestId": 567,
    "index": "B",
    "name": "Berland National Library",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1918/C",
    "contestId": 1918,
    "index": "C",
    "name": "XOR-distance",
    "rating": 1400,
    "tags": [
      "bitmasks",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1840/A",
    "contestId": 1840,
    "index": "A",
    "name": "Cipher Shifer",
    "rating": 800,
    "tags": [
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1327/F",
    "contestId": 1327,
    "index": "F",
    "name": "AND Segments",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "1965/A",
    "contestId": 1965,
    "index": "A",
    "name": "Everything Nim",
    "rating": 1400,
    "tags": [
      "games",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "929/B",
    "contestId": 929,
    "index": "B",
    "name": "Места в самолёте",
    "rating": 1300,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1835/F",
    "contestId": 1835,
    "index": "F",
    "name": "Good Graph",
    "rating": 3500,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "graph matchings",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1080/B",
    "contestId": 1080,
    "index": "B",
    "name": "Margarite and the best present",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1896/H2",
    "contestId": 1896,
    "index": "H2",
    "name": "Cyclic Hamming (Hard Version)",
    "rating": 3500,
    "tags": [
      "brute force",
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1172/F",
    "contestId": 1172,
    "index": "F",
    "name": "Nauuo and Bug",
    "rating": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1185/G1",
    "contestId": 1185,
    "index": "G1",
    "name": "Playlist for Polycarp (easy version)",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "290/C",
    "contestId": 290,
    "index": "C",
    "name": "WTF?",
    "rating": 1700,
    "tags": [
      "*special",
      "graph matchings",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1650/B",
    "contestId": 1650,
    "index": "B",
    "name": "DIV + MOD",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "729/D",
    "contestId": 729,
    "index": "D",
    "name": "Sea Battle",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1525/E",
    "contestId": 1525,
    "index": "E",
    "name": "Assimilation IV",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "id": "321/D",
    "contestId": 321,
    "index": "D",
    "name": "Ciel and Flipboard",
    "rating": 2900,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "788/A",
    "contestId": 788,
    "index": "A",
    "name": "Functions again",
    "rating": 1600,
    "tags": [
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "383/E",
    "contestId": 383,
    "index": "E",
    "name": "Vowels",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "1806/F2",
    "contestId": 1806,
    "index": "F2",
    "name": "GCD Master (hard version)",
    "rating": 2900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1895/C",
    "contestId": 1895,
    "index": "C",
    "name": "Torn Lucky Ticket",
    "rating": 1400,
    "tags": [
      "brute force",
      "dp",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "id": "883/G",
    "contestId": 883,
    "index": "G",
    "name": "Orientation of Edges",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1204/B",
    "contestId": 1204,
    "index": "B",
    "name": "Mislove Has Lost an Array",
    "rating": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "628/F",
    "contestId": 628,
    "index": "F",
    "name": "Bear and Fair Set",
    "rating": 2500,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "id": "105/B",
    "contestId": 105,
    "index": "B",
    "name": "Dark Assembly",
    "rating": 1800,
    "tags": [
      "brute force",
      "probabilities"
    ]
  },
  {
    "id": "1594/B",
    "contestId": 1594,
    "index": "B",
    "name": "Special Numbers",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "id": "1830/E",
    "contestId": 1830,
    "index": "E",
    "name": "Bully Sort",
    "rating": 3500,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "id": "1017/D",
    "contestId": 1017,
    "index": "D",
    "name": "The Wu",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures"
    ]
  },
  {
    "id": "490/B",
    "contestId": 490,
    "index": "B",
    "name": "Queue",
    "rating": 1500,
    "tags": [
      "dsu",
      "implementation"
    ]
  },
  {
    "id": "588/A",
    "contestId": 588,
    "index": "A",
    "name": "Duff and Meat",
    "rating": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1225/A",
    "contestId": 1225,
    "index": "A",
    "name": "Forgetting Things",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1657/A",
    "contestId": 1657,
    "index": "A",
    "name": "Integer Moves",
    "rating": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1858/D",
    "contestId": 1858,
    "index": "D",
    "name": "Trees and Segments",
    "rating": 2200,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1848/E",
    "contestId": 1848,
    "index": "E",
    "name": "Vika and Stone Skipping",
    "rating": 2600,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "999/A",
    "contestId": 999,
    "index": "A",
    "name": "Mishka and Contest",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1174/A",
    "contestId": 1174,
    "index": "A",
    "name": "Ehab Fails to Be Thanos",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1691/D",
    "contestId": 1691,
    "index": "D",
    "name": "Max GEQ Sum",
    "rating": 1800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1283/F",
    "contestId": 1283,
    "index": "F",
    "name": "DIY Garland",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1468/M",
    "contestId": 1468,
    "index": "M",
    "name": "Similar Sets",
    "rating": 2300,
    "tags": [
      "data structures",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1571/B",
    "contestId": 1571,
    "index": "B",
    "name": "Epic Novel",
    "rating": 1300,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "id": "380/C",
    "contestId": 380,
    "index": "C",
    "name": "Sereja and Brackets",
    "rating": 2000,
    "tags": [
      "data structures",
      "schedules"
    ]
  },
  {
    "id": "922/C",
    "contestId": 922,
    "index": "C",
    "name": "Cave Painting",
    "rating": 1600,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "id": "1801/A",
    "contestId": 1801,
    "index": "A",
    "name": "The Very Beautiful Blanket",
    "rating": 1600,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "id": "1261/F",
    "contestId": 1261,
    "index": "F",
    "name": "Xor-Set",
    "rating": 3100,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "math"
    ]
  },
  {
    "id": "558/D",
    "contestId": 558,
    "index": "D",
    "name": "Guess Your Way Out! II",
    "rating": 2300,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1970/E2",
    "contestId": 1970,
    "index": "E2",
    "name": "Trails (Medium)",
    "rating": 2000,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "1288/A",
    "contestId": 1288,
    "index": "A",
    "name": "Deadline",
    "rating": 1100,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "1316/A",
    "contestId": 1316,
    "index": "A",
    "name": "Grade Allocation",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1441/C",
    "contestId": 1441,
    "index": "C",
    "name": "Sum",
    "rating": 2800,
    "tags": [
      "divide and conquer",
      "greedy"
    ]
  },
  {
    "id": "1088/B",
    "contestId": 1088,
    "index": "B",
    "name": "Ehab and subtraction",
    "rating": 1000,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "446/E",
    "contestId": 446,
    "index": "E",
    "name": "DZY Loves Bridges",
    "rating": 3100,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "id": "1622/D",
    "contestId": 1622,
    "index": "D",
    "name": "Shuffle",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1060/A",
    "contestId": 1060,
    "index": "A",
    "name": "Phone Numbers",
    "rating": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1846/E2",
    "contestId": 1846,
    "index": "E2",
    "name": "Rudolf and Snowflakes (hard version)",
    "rating": 1800,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "361/B",
    "contestId": 361,
    "index": "B",
    "name": "Levko and Permutation",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1131/E",
    "contestId": 1131,
    "index": "E",
    "name": "String Multiplication",
    "rating": 2300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "221/A",
    "contestId": 221,
    "index": "A",
    "name": "Little Elephant and Function",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1746/G",
    "contestId": 1746,
    "index": "G",
    "name": "Olympiad Training",
    "rating": 3500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "flows",
      "geometry",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "793/A",
    "contestId": 793,
    "index": "A",
    "name": "Oleg and shares",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1175/A",
    "contestId": 1175,
    "index": "A",
    "name": "From Hero to Zero",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "93/C",
    "contestId": 93,
    "index": "C",
    "name": "Azembler",
    "rating": 2500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "417/C",
    "contestId": 417,
    "index": "C",
    "name": "Football",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1848/A",
    "contestId": 1848,
    "index": "A",
    "name": "Vika and Her Friends",
    "rating": 900,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "1849/B",
    "contestId": 1849,
    "index": "B",
    "name": "Monsters",
    "rating": 1000,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1986/A",
    "contestId": 1986,
    "index": "A",
    "name": "X Axis",
    "rating": 800,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "id": "985/C",
    "contestId": 985,
    "index": "C",
    "name": "Liebig's Barrels",
    "rating": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1374/B",
    "contestId": 1374,
    "index": "B",
    "name": "Multiply by 2, divide by 6",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "416/B",
    "contestId": 416,
    "index": "B",
    "name": "Art Union",
    "rating": 1300,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1043/A",
    "contestId": 1043,
    "index": "A",
    "name": "Elections",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1748/E",
    "contestId": 1748,
    "index": "E",
    "name": "Yet Another Array Counting Problem",
    "rating": 2300,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "flows",
      "math",
      "trees"
    ]
  },
  {
    "id": "1630/F",
    "contestId": 1630,
    "index": "F",
    "name": "Making It Bipartite",
    "rating": 3400,
    "tags": [
      "flows",
      "graph matchings",
      "graphs",
      "number theory"
    ]
  },
  {
    "id": "1244/F",
    "contestId": 1244,
    "index": "F",
    "name": "Chips",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1854/F",
    "contestId": 1854,
    "index": "F",
    "name": "Mark and Spaceship",
    "rating": 3500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "988/D",
    "contestId": 988,
    "index": "D",
    "name": "Points and Powers of Two",
    "rating": 1800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "633/H",
    "contestId": 633,
    "index": "H",
    "name": "Fibonacci-ish II",
    "rating": 3100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1805/F1",
    "contestId": 1805,
    "index": "F1",
    "name": "Survival of the Weakest (easy version)",
    "rating": 2600,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "819/B",
    "contestId": 819,
    "index": "B",
    "name": "Mister B and PR Shifts",
    "rating": 1900,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "id": "756/C",
    "contestId": 756,
    "index": "C",
    "name": "Nikita and stack",
    "rating": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "28/A",
    "contestId": 28,
    "index": "A",
    "name": "Bender Problem",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1166/C",
    "contestId": 1166,
    "index": "C",
    "name": "A Tale of Two Lands",
    "rating": 1500,
    "tags": [
      "binary search",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "215/B",
    "contestId": 215,
    "index": "B",
    "name": "Olympic Medal",
    "rating": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1876/G",
    "contestId": 1876,
    "index": "G",
    "name": "Clubstep",
    "rating": 3500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "995/B",
    "contestId": 995,
    "index": "B",
    "name": "Suit and Tie",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "670/D1",
    "contestId": 670,
    "index": "D1",
    "name": "Magic Powder - 1",
    "rating": 1400,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "864/F",
    "contestId": 864,
    "index": "F",
    "name": "Cities Excursions",
    "rating": 2700,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "319/E",
    "contestId": 319,
    "index": "E",
    "name": "Ping-Pong",
    "rating": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "903/E",
    "contestId": 903,
    "index": "E",
    "name": "Swapping Characters",
    "rating": 2200,
    "tags": [
      "brute force",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "976/E",
    "contestId": 976,
    "index": "E",
    "name": "Well played!",
    "rating": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "687/D",
    "contestId": 687,
    "index": "D",
    "name": "Dividing Kingdom II",
    "rating": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "graphs",
      "sortings"
    ]
  },
  {
    "id": "271/A",
    "contestId": 271,
    "index": "A",
    "name": "Beautiful Year",
    "rating": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1535/F",
    "contestId": 1535,
    "index": "F",
    "name": "String Distance",
    "rating": 3000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1316/F",
    "contestId": 1316,
    "index": "F",
    "name": "Battalion Strength",
    "rating": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "probabilities"
    ]
  },
  {
    "id": "136/A",
    "contestId": 136,
    "index": "A",
    "name": "Presents",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1067/A",
    "contestId": 1067,
    "index": "A",
    "name": "Array Without Local Maximums",
    "rating": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1284/C",
    "contestId": 1284,
    "index": "C",
    "name": "New Year and Permutation",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1791/G1",
    "contestId": 1791,
    "index": "G1",
    "name": "Teleporters (Easy Version)",
    "rating": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1286/B",
    "contestId": 1286,
    "index": "B",
    "name": "Numbers on Tree",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "23/B",
    "contestId": 23,
    "index": "B",
    "name": "Party",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "id": "777/D",
    "contestId": 777,
    "index": "D",
    "name": "Cloud of Hashtags",
    "rating": 1800,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1102/B",
    "contestId": 1102,
    "index": "B",
    "name": "Array K-Coloring",
    "rating": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "987/A",
    "contestId": 987,
    "index": "A",
    "name": "Infinity Gauntlet",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1030/B",
    "contestId": 1030,
    "index": "B",
    "name": "Vasya and Cornfield",
    "rating": 1100,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1848/B",
    "contestId": 1848,
    "index": "B",
    "name": "Vika and the Bridge",
    "rating": 1200,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "708/E",
    "contestId": 708,
    "index": "E",
    "name": "Student's Camp",
    "rating": 3100,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "621/D",
    "contestId": 621,
    "index": "D",
    "name": "Rat Kwesh and Cheese",
    "rating": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1468/C",
    "contestId": 1468,
    "index": "C",
    "name": "Berpizza",
    "rating": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "630/M",
    "contestId": 630,
    "index": "M",
    "name": "Turn",
    "rating": 1800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1661/C",
    "contestId": 1661,
    "index": "C",
    "name": "Water the Trees",
    "rating": 1700,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1534/F1",
    "contestId": 1534,
    "index": "F1",
    "name": "Falling Sand (Easy Version)",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1670/E",
    "contestId": 1670,
    "index": "E",
    "name": "Hemose on the Tree",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1758/C",
    "contestId": 1758,
    "index": "C",
    "name": "Almost All Multiples",
    "rating": 1400,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "103/C",
    "contestId": 103,
    "index": "C",
    "name": "Russian Roulette",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1028/H",
    "contestId": 1028,
    "index": "H",
    "name": "Make Square",
    "rating": 2900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "54/B",
    "contestId": 54,
    "index": "B",
    "name": "Cutting Jigsaw Puzzle",
    "rating": 1800,
    "tags": [
      "hashing",
      "implementation"
    ]
  },
  {
    "id": "1764/C",
    "contestId": 1764,
    "index": "C",
    "name": "Doremy's City Construction",
    "rating": 1400,
    "tags": [
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1495/B",
    "contestId": 1495,
    "index": "B",
    "name": "Let's Go Hiking",
    "rating": 1900,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "id": "1490/D",
    "contestId": 1490,
    "index": "D",
    "name": "Permutation Transformation",
    "rating": 1200,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "id": "400/D",
    "contestId": 400,
    "index": "D",
    "name": "Dima and Bacteria",
    "rating": 2000,
    "tags": [
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "803/B",
    "contestId": 803,
    "index": "B",
    "name": "Distances to Zero",
    "rating": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1571/A",
    "contestId": 1571,
    "index": "A",
    "name": "Sequence of Comparisons",
    "rating": 800,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1082/C",
    "contestId": 1082,
    "index": "C",
    "name": "Multi-Subject Competition",
    "rating": 1600,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1669/H",
    "contestId": 1669,
    "index": "H",
    "name": "Maximal AND",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1242/C",
    "contestId": 1242,
    "index": "C",
    "name": "Sum Balance",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "226/D",
    "contestId": 226,
    "index": "D",
    "name": "The table",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1781/F",
    "contestId": 1781,
    "index": "F",
    "name": "Bracket Insertion",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "537/F",
    "contestId": 537,
    "index": "F",
    "name": "A Heap of Heaps",
    "rating": 2200,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1328/B",
    "contestId": 1328,
    "index": "B",
    "name": "K-th Beautiful String",
    "rating": 1300,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "id": "547/B",
    "contestId": 547,
    "index": "B",
    "name": "Mike and Feet",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "dsu"
    ]
  },
  {
    "id": "1503/C",
    "contestId": 1503,
    "index": "C",
    "name": "Travelling Salesman Problem",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "shortest paths",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1367/C",
    "contestId": 1367,
    "index": "C",
    "name": "Social Distance",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1910/C",
    "contestId": 1910,
    "index": "C",
    "name": "Poisonous Swamp",
    "rating": 1600,
    "tags": [
      "*special",
      "*special",
      "implementation",
      "implementation"
    ]
  },
  {
    "id": "982/B",
    "contestId": 982,
    "index": "B",
    "name": "Bus of Characters",
    "rating": 1300,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "475/A",
    "contestId": 475,
    "index": "A",
    "name": "Bayan Bus",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "677/B",
    "contestId": 677,
    "index": "B",
    "name": "Vanya and Food Processor",
    "rating": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1383/E",
    "contestId": 1383,
    "index": "E",
    "name": "Strange Operation",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1713/C",
    "contestId": 1713,
    "index": "C",
    "name": "Build Permutation",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "id": "744/A",
    "contestId": 744,
    "index": "A",
    "name": "Hongcow Builds A Nation",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "334/B",
    "contestId": 334,
    "index": "B",
    "name": "Eight Point Sets",
    "rating": 1400,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "618/B",
    "contestId": 618,
    "index": "B",
    "name": "Guess the Permutation",
    "rating": 1100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1411/B",
    "contestId": 1411,
    "index": "B",
    "name": "Fair Numbers",
    "rating": 1000,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "id": "1797/A",
    "contestId": 1797,
    "index": "A",
    "name": "Li Hua and Maze",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1029/F",
    "contestId": 1029,
    "index": "F",
    "name": "Multicolored Markers",
    "rating": 2000,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "489/C",
    "contestId": 489,
    "index": "C",
    "name": "Given Length and Sum of Digits...",
    "rating": 1400,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1768/B",
    "contestId": 1768,
    "index": "B",
    "name": "Quick Sort",
    "rating": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1675/A",
    "contestId": 1675,
    "index": "A",
    "name": "Food for Animals",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "377/B",
    "contestId": 377,
    "index": "B",
    "name": "Preparing for the Contest",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "171/B",
    "contestId": 171,
    "index": "B",
    "name": "Star",
    "rating": 1300,
    "tags": [
      "*special",
      "combinatorics"
    ]
  },
  {
    "id": "148/D",
    "contestId": 148,
    "index": "D",
    "name": "Bag of mice",
    "rating": 1800,
    "tags": [
      "dp",
      "games",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "251/B",
    "contestId": 251,
    "index": "B",
    "name": "Playing with Permutations",
    "rating": 1800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "28/D",
    "contestId": 28,
    "index": "D",
    "name": "Don't fear, DravDe is kind",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing"
    ]
  },
  {
    "id": "638/D",
    "contestId": 638,
    "index": "D",
    "name": "Three-dimensional Turtle Super Computer",
    "rating": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1989/E",
    "contestId": 1989,
    "index": "E",
    "name": "Distance to Different",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "677/E",
    "contestId": 677,
    "index": "E",
    "name": "Vanya and Balloons",
    "rating": 2300,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1920/C",
    "contestId": 1920,
    "index": "C",
    "name": "Partitioning the Array",
    "rating": 1600,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1505/F",
    "contestId": 1505,
    "index": "F",
    "name": "Math",
    "rating": 2200,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "id": "1909/F1",
    "contestId": 1909,
    "index": "F1",
    "name": "Small Permutation Problem (Easy Version)",
    "rating": 2200,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "276/D",
    "contestId": 276,
    "index": "D",
    "name": "Little Girl and Maximum XOR",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "24/C",
    "contestId": 24,
    "index": "C",
    "name": "Sequence of points",
    "rating": 1800,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1973/E",
    "contestId": 1973,
    "index": "E",
    "name": "Cat, Fox and Swaps",
    "rating": 2500,
    "tags": [
      "graphs",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1609/E",
    "contestId": 1609,
    "index": "E",
    "name": "William The Oblivious",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "dp",
      "matrices"
    ]
  },
  {
    "id": "1132/A",
    "contestId": 1132,
    "index": "A",
    "name": "Regular Bracket Sequence",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "641/D",
    "contestId": 641,
    "index": "D",
    "name": "Little Artem and Random Variable",
    "rating": 2400,
    "tags": [
      "dp",
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1609/F",
    "contestId": 1609,
    "index": "F",
    "name": "Interesting Sections",
    "rating": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "meet-in-the-middle",
      "two pointers"
    ]
  },
  {
    "id": "721/D",
    "contestId": 721,
    "index": "D",
    "name": "Maxim and Array",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "590/E",
    "contestId": 590,
    "index": "E",
    "name": "Birthday",
    "rating": 3200,
    "tags": [
      "graph matchings",
      "strings"
    ]
  },
  {
    "id": "891/B",
    "contestId": 891,
    "index": "B",
    "name": "Gluttony",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "710/A",
    "contestId": 710,
    "index": "A",
    "name": "King Moves",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "803/C",
    "contestId": 803,
    "index": "C",
    "name": "Maximal GCD",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "562/E",
    "contestId": 562,
    "index": "E",
    "name": "Max and Min",
    "rating": 2500,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1365/A",
    "contestId": 1365,
    "index": "A",
    "name": "Matrix Game",
    "rating": 1100,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "773/C",
    "contestId": 773,
    "index": "C",
    "name": "Prairie Partition",
    "rating": 2200,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1279/E",
    "contestId": 1279,
    "index": "E",
    "name": "New Year Permutations",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1209/G1",
    "contestId": 1209,
    "index": "G1",
    "name": "Into Blocks (easy version)",
    "rating": 2000,
    "tags": [
      "data structures",
      "dsu",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1415/D",
    "contestId": 1415,
    "index": "D",
    "name": "XOR-gun",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "1057/B",
    "contestId": 1057,
    "index": "B",
    "name": "DDoS",
    "rating": 1400,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "id": "923/C",
    "contestId": 923,
    "index": "C",
    "name": "Perfect Security",
    "rating": 1800,
    "tags": [
      "data structures",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1994/E",
    "contestId": 1994,
    "index": "E",
    "name": "Wooden Game",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "id": "1903/D1",
    "contestId": 1903,
    "index": "D1",
    "name": "Maximum And Queries (easy version)",
    "rating": 1700,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "773/B",
    "contestId": 773,
    "index": "B",
    "name": "Dynamic Problem Scoring",
    "rating": 2000,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1695/D2",
    "contestId": 1695,
    "index": "D2",
    "name": "Tree Queries (Hard Version)",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1985/B",
    "contestId": 1985,
    "index": "B",
    "name": "Maximum Multiple Sum",
    "rating": 800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1181/C",
    "contestId": 1181,
    "index": "C",
    "name": "Flag",
    "rating": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "318/B",
    "contestId": 318,
    "index": "B",
    "name": "Strings of Power",
    "rating": 1300,
    "tags": [
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "325/D",
    "contestId": 325,
    "index": "D",
    "name": "Reclamation",
    "rating": 2900,
    "tags": [
      "dsu"
    ]
  },
  {
    "id": "56/E",
    "contestId": 56,
    "index": "E",
    "name": "Domino Principle",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "965/D",
    "contestId": 965,
    "index": "D",
    "name": "Single-use Stones",
    "rating": 1900,
    "tags": [
      "binary search",
      "flows",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1307/A",
    "contestId": 1307,
    "index": "A",
    "name": "Cow and Haybales",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1408/I",
    "contestId": 1408,
    "index": "I",
    "name": "Bitwise Magic",
    "rating": 3200,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "958/B1",
    "contestId": 958,
    "index": "B1",
    "name": "Maximum Control (easy)",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1950/A",
    "contestId": 1950,
    "index": "A",
    "name": "Stair, Peak, or Neither?",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1789/F",
    "contestId": 1789,
    "index": "F",
    "name": "Serval and Brain Power",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "51/A",
    "contestId": 51,
    "index": "A",
    "name": "Cheaterius's Problem",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "537/G",
    "contestId": 537,
    "index": "G",
    "name": "Berserk Robot",
    "rating": 3100,
    "tags": [
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1368/A",
    "contestId": 1368,
    "index": "A",
    "name": "C+=",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "772/C",
    "contestId": 772,
    "index": "C",
    "name": "Vulnerable Kerbals",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1646/F",
    "contestId": 1646,
    "index": "F",
    "name": "Playing Around the Table",
    "rating": 2900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1098/E",
    "contestId": 1098,
    "index": "E",
    "name": "Fedya the Potter",
    "rating": 3400,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "379/F",
    "contestId": 379,
    "index": "F",
    "name": "New Year Tree",
    "rating": 2400,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "id": "1041/F",
    "contestId": 1041,
    "index": "F",
    "name": "Ray in the tube",
    "rating": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "id": "526/E",
    "contestId": 526,
    "index": "E",
    "name": "Transmitting Levels",
    "rating": 2400,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1506/D",
    "contestId": 1506,
    "index": "D",
    "name": "Epic Transformation",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "724/B",
    "contestId": 724,
    "index": "B",
    "name": "Batch Sort",
    "rating": 1500,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1380/C",
    "contestId": 1380,
    "index": "C",
    "name": "Create The Teams",
    "rating": 1400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1884/B",
    "contestId": 1884,
    "index": "B",
    "name": "Haunted House",
    "rating": 1100,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1369/D",
    "contestId": 1369,
    "index": "D",
    "name": "TediousLee",
    "rating": 1900,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "id": "1792/F2",
    "contestId": 1792,
    "index": "F2",
    "name": "Graph Coloring (hard version)",
    "rating": 2900,
    "tags": [
      "brute force",
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "graphs"
    ]
  },
  {
    "id": "1430/D",
    "contestId": 1430,
    "index": "D",
    "name": "String Deletion",
    "rating": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1396/B",
    "contestId": 1396,
    "index": "B",
    "name": "Stoned Game",
    "rating": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "games",
      "greedy"
    ]
  },
  {
    "id": "1281/B",
    "contestId": 1281,
    "index": "B",
    "name": "Azamon Web Services",
    "rating": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1354/E",
    "contestId": 1354,
    "index": "E",
    "name": "Graph Coloring",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1669/B",
    "contestId": 1669,
    "index": "B",
    "name": "Triple",
    "rating": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "175/D",
    "contestId": 175,
    "index": "D",
    "name": "Plane of Tanks: Duel",
    "rating": 2400,
    "tags": [
      "brute force",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1613/A",
    "contestId": 1613,
    "index": "A",
    "name": "Long Comparison",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "224/A",
    "contestId": 224,
    "index": "A",
    "name": "Parallelepiped",
    "rating": 1100,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "id": "332/D",
    "contestId": 332,
    "index": "D",
    "name": "Theft of Blueprints",
    "rating": 2400,
    "tags": [
      "graphs",
      "math"
    ]
  },
  {
    "id": "1141/B",
    "contestId": 1141,
    "index": "B",
    "name": "Maximal Continuous Rest",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "500/C",
    "contestId": 500,
    "index": "C",
    "name": "New Year Book Reading",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "744/C",
    "contestId": 744,
    "index": "C",
    "name": "Hongcow Buys a Deck of Cards",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "id": "1045/A",
    "contestId": 1045,
    "index": "A",
    "name": "Last chance",
    "rating": 2500,
    "tags": [
      "data structures",
      "flows",
      "graph matchings",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1454/D",
    "contestId": 1454,
    "index": "D",
    "name": "Number into Sequence",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1119/H",
    "contestId": 1119,
    "index": "H",
    "name": "Triple",
    "rating": 3200,
    "tags": [
      "fft",
      "math"
    ]
  },
  {
    "id": "791/A",
    "contestId": 791,
    "index": "A",
    "name": "Bear and Big Brother",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1295/D",
    "contestId": 1295,
    "index": "D",
    "name": "Same GCDs",
    "rating": 1800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1097/B",
    "contestId": 1097,
    "index": "B",
    "name": "Petr and a Combination Lock",
    "rating": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "id": "1141/G",
    "contestId": 1141,
    "index": "G",
    "name": "Privatization of Roads in Treeland",
    "rating": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "535/C",
    "contestId": 535,
    "index": "C",
    "name": "Tavas and Karafs",
    "rating": 1900,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "id": "433/C",
    "contestId": 433,
    "index": "C",
    "name": "Ryouko's Memory Note",
    "rating": 1800,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1539/F",
    "contestId": 1539,
    "index": "F",
    "name": "Strange Array",
    "rating": 2600,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1106/E",
    "contestId": 1106,
    "index": "E",
    "name": "Lunar New Year and Red Envelopes",
    "rating": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "488/B",
    "contestId": 488,
    "index": "B",
    "name": "Candy Boxes",
    "rating": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "551/D",
    "contestId": 551,
    "index": "D",
    "name": "GukiZ and Binary Operations",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "implementation",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "id": "1646/D",
    "contestId": 1646,
    "index": "D",
    "name": "Weight the Tree",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1525/D",
    "contestId": 1525,
    "index": "D",
    "name": "Armchairs",
    "rating": 1800,
    "tags": [
      "dp",
      "flows",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "id": "584/D",
    "contestId": 584,
    "index": "D",
    "name": "Dima and Lisa",
    "rating": 1800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "899/E",
    "contestId": 899,
    "index": "E",
    "name": "Segments Removal",
    "rating": 2000,
    "tags": [
      "data structures",
      "dsu",
      "flows",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1015/D",
    "contestId": 1015,
    "index": "D",
    "name": "Walking Between Houses",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "246/C",
    "contestId": 246,
    "index": "C",
    "name": "Beauty Pageant",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "799/E",
    "contestId": 799,
    "index": "E",
    "name": "Aquarium decoration",
    "rating": 2500,
    "tags": [
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1804/C",
    "contestId": 1804,
    "index": "C",
    "name": "Pull Your Luck",
    "rating": 1500,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1822/A",
    "contestId": 1822,
    "index": "A",
    "name": "TubeTube Feed",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "804/A",
    "contestId": 804,
    "index": "A",
    "name": "Find Amir",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1349/D",
    "contestId": 1349,
    "index": "D",
    "name": "Slime and Biscuits",
    "rating": 3200,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1860/C",
    "contestId": 1860,
    "index": "C",
    "name": "Game on Permutation",
    "rating": 1400,
    "tags": [
      "data structures",
      "dp",
      "games",
      "greedy"
    ]
  },
  {
    "id": "797/C",
    "contestId": 797,
    "index": "C",
    "name": "Minimal string",
    "rating": 1700,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "629/A",
    "contestId": 629,
    "index": "A",
    "name": "Far Relative’s Birthday Cake",
    "rating": 800,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "758/F",
    "contestId": 758,
    "index": "F",
    "name": "Geometrical Progression",
    "rating": 2400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "710/C",
    "contestId": 710,
    "index": "C",
    "name": "Magic Odd Square",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1466/F",
    "contestId": 1466,
    "index": "F",
    "name": "Euclid's nightmare",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1954/B",
    "contestId": 1954,
    "index": "B",
    "name": "Make It Ugly",
    "rating": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "106/D",
    "contestId": 106,
    "index": "D",
    "name": "Treasure Island",
    "rating": 1700,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "4/A",
    "contestId": 4,
    "index": "A",
    "name": "Watermelon",
    "rating": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1948/C",
    "contestId": 1948,
    "index": "C",
    "name": "Arrow Path",
    "rating": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "385/B",
    "contestId": 385,
    "index": "B",
    "name": "Bear and Strings",
    "rating": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "id": "434/D",
    "contestId": 434,
    "index": "D",
    "name": "Nanami's Power Plant",
    "rating": 2900,
    "tags": [
      "flows"
    ]
  },
  {
    "id": "1623/A",
    "contestId": 1623,
    "index": "A",
    "name": "Robot Cleaner",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1924/E",
    "contestId": 1924,
    "index": "E",
    "name": "Paper Cutting Again",
    "rating": 3100,
    "tags": [
      "combinatorics",
      "probabilities"
    ]
  },
  {
    "id": "409/C",
    "contestId": 409,
    "index": "C",
    "name": "Magnum Opus",
    "rating": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "784/F",
    "contestId": 784,
    "index": "F",
    "name": "Crunching Numbers Just for You",
    "rating": 1900,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "786/C",
    "contestId": 786,
    "index": "C",
    "name": "Till I Collapse",
    "rating": 2400,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "id": "1868/F",
    "contestId": 1868,
    "index": "F",
    "name": "LIS?",
    "rating": 3500,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1027/A",
    "contestId": 1027,
    "index": "A",
    "name": "Palindromic Twist",
    "rating": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1530/G",
    "contestId": 1530,
    "index": "G",
    "name": "What a Reversal",
    "rating": 3300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1806/F1",
    "contestId": 1806,
    "index": "F1",
    "name": "GCD Master (easy version)",
    "rating": 2900,
    "tags": [
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "1713/B",
    "contestId": 1713,
    "index": "B",
    "name": "Optimal Reduction",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "665/C",
    "contestId": 665,
    "index": "C",
    "name": "Simple Strings",
    "rating": 1300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "704/E",
    "contestId": 704,
    "index": "E",
    "name": "Iron Man",
    "rating": 3300,
    "tags": [
      "data structures",
      "geometry",
      "trees"
    ]
  },
  {
    "id": "297/D",
    "contestId": 297,
    "index": "D",
    "name": "Color the Carpet",
    "rating": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "180/A",
    "contestId": 180,
    "index": "A",
    "name": "Defragmentation",
    "rating": 1800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1333/D",
    "contestId": 1333,
    "index": "D",
    "name": "Challenges in school №41",
    "rating": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "games",
      "graphs",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1927/C",
    "contestId": 1927,
    "index": "C",
    "name": "Choose the Different Ones!",
    "rating": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "323/C",
    "contestId": 323,
    "index": "C",
    "name": "Two permutations",
    "rating": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1685/C",
    "contestId": 1685,
    "index": "C",
    "name": "Bring Balance",
    "rating": 2600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1691/B",
    "contestId": 1691,
    "index": "B",
    "name": "Shoe Shuffling",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1433/B",
    "contestId": 1433,
    "index": "B",
    "name": "Yet Another Bookshelf",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1652/D",
    "contestId": 1652,
    "index": "D",
    "name": "Potion Brewing Class",
    "rating": 2100,
    "tags": [
      "implementation",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "484/C",
    "contestId": 484,
    "index": "C",
    "name": "Strange Sorting",
    "rating": 2600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1915/A",
    "contestId": 1915,
    "index": "A",
    "name": "Odd One Out",
    "rating": 800,
    "tags": [
      "bitmasks",
      "implementation"
    ]
  },
  {
    "id": "1450/A",
    "contestId": 1450,
    "index": "A",
    "name": "Avoid Trygub",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "1749/E",
    "contestId": 1749,
    "index": "E",
    "name": "Cactus Wall",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1073/C",
    "contestId": 1073,
    "index": "C",
    "name": "Vasya and Robot",
    "rating": 1800,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "id": "1556/H",
    "contestId": 1556,
    "index": "H",
    "name": "DIY Tree",
    "rating": 3300,
    "tags": [
      "graphs",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "45/G",
    "contestId": 45,
    "index": "G",
    "name": "Prime Problem",
    "rating": 2200,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "60/A",
    "contestId": 60,
    "index": "A",
    "name": "Where Are My Flakes?",
    "rating": 1300,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1505/B",
    "contestId": 1505,
    "index": "B",
    "name": "DMCA",
    "rating": 1600,
    "tags": [
      "*special",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "1214/A",
    "contestId": 1214,
    "index": "A",
    "name": "Optimal Currency Exchange",
    "rating": 1400,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "932/G",
    "contestId": 932,
    "index": "G",
    "name": "Palindrome Partition",
    "rating": 2900,
    "tags": [
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1152/D",
    "contestId": 1152,
    "index": "D",
    "name": "Neko and Aki's Prank",
    "rating": 2100,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "355/A",
    "contestId": 355,
    "index": "A",
    "name": "Vasya and Digital Root",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "762/C",
    "contestId": 762,
    "index": "C",
    "name": "Two strings",
    "rating": 2100,
    "tags": [
      "binary search",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1805/C",
    "contestId": 1805,
    "index": "C",
    "name": "Place for a Selfie",
    "rating": 1400,
    "tags": [
      "binary search",
      "data structures",
      "geometry",
      "math"
    ]
  },
  {
    "id": "1795/D",
    "contestId": 1795,
    "index": "D",
    "name": "Triangle Coloring",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1571/D",
    "contestId": 1571,
    "index": "D",
    "name": "Sweepstake",
    "rating": 1800,
    "tags": [
      "*special",
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "899/F",
    "contestId": 899,
    "index": "F",
    "name": "Letters Removing",
    "rating": 2100,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "id": "812/B",
    "contestId": 812,
    "index": "B",
    "name": "Sagheer, the Hausmeister",
    "rating": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "id": "1313/C1",
    "contestId": 1313,
    "index": "C1",
    "name": "Skyscrapers (easy version)",
    "rating": 1500,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "40/C",
    "contestId": 40,
    "index": "C",
    "name": "Berland Square",
    "rating": 2300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "605/D",
    "contestId": 605,
    "index": "D",
    "name": "Board Game",
    "rating": 2500,
    "tags": [
      "data structures",
      "dfs and similar"
    ]
  },
  {
    "id": "535/B",
    "contestId": 535,
    "index": "B",
    "name": "Tavas and SaDDas",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "implementation"
    ]
  },
  {
    "id": "1968/A",
    "contestId": 1968,
    "index": "A",
    "name": "Maximize?",
    "rating": 800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "835/D",
    "contestId": 835,
    "index": "D",
    "name": "Palindromic characteristics",
    "rating": 1900,
    "tags": [
      "brute force",
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "913/E",
    "contestId": 913,
    "index": "E",
    "name": "Logical Expression",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "shortest paths"
    ]
  },
  {
    "id": "1234/B1",
    "contestId": 1234,
    "index": "B1",
    "name": "Social Network (easy version)",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1284/D",
    "contestId": 1284,
    "index": "D",
    "name": "New Year and Conference",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "hashing",
      "sortings"
    ]
  },
  {
    "id": "298/B",
    "contestId": 298,
    "index": "B",
    "name": "Sail",
    "rating": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "730/C",
    "contestId": 730,
    "index": "C",
    "name": "Bulmart",
    "rating": 2100,
    "tags": [
      "binary search",
      "dfs and similar"
    ]
  },
  {
    "id": "1353/A",
    "contestId": 1353,
    "index": "A",
    "name": "Most Unstable Array",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "622/D",
    "contestId": 622,
    "index": "D",
    "name": "Optimal Number Permutation",
    "rating": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "922/B",
    "contestId": 922,
    "index": "B",
    "name": "Magic Forest",
    "rating": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1491/D",
    "contestId": 1491,
    "index": "D",
    "name": "Zookeeper and The Infinite Zoo",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1771/F",
    "contestId": 1771,
    "index": "F",
    "name": "Hossam and Range Minimum Query",
    "rating": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "hashing",
      "probabilities",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1743/D",
    "contestId": 1743,
    "index": "D",
    "name": "Problem with Random Tests",
    "rating": 1700,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "probabilities"
    ]
  },
  {
    "id": "156/B",
    "contestId": 156,
    "index": "B",
    "name": "Suspects",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1272/C",
    "contestId": 1272,
    "index": "C",
    "name": "Yet Another Broken Keyboard",
    "rating": 1200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1690/B",
    "contestId": 1690,
    "index": "B",
    "name": "Array Decrements",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "721/B",
    "contestId": 721,
    "index": "B",
    "name": "Passwords",
    "rating": 1100,
    "tags": [
      "implementation",
      "math",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "234/A",
    "contestId": 234,
    "index": "A",
    "name": "Lefthanders and Righthanders",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1873/C",
    "contestId": 1873,
    "index": "C",
    "name": "Target Practice",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1148/E",
    "contestId": 1148,
    "index": "E",
    "name": "Earth Wind and Fire",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1676/A",
    "contestId": 1676,
    "index": "A",
    "name": "Lucky?",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1538/A",
    "contestId": 1538,
    "index": "A",
    "name": "Stone Game",
    "rating": 800,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "467/B",
    "contestId": 467,
    "index": "B",
    "name": "Fedor and New Game",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1796/F",
    "contestId": 1796,
    "index": "F",
    "name": "Strange Triples",
    "rating": 2900,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1172/A",
    "contestId": 1172,
    "index": "A",
    "name": "Nauuo and Cards",
    "rating": 1800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "454/A",
    "contestId": 454,
    "index": "A",
    "name": "Little Pony and Crystal Mine",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1413/D",
    "contestId": 1413,
    "index": "D",
    "name": "Shurikens",
    "rating": 1700,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1714/C",
    "contestId": 1714,
    "index": "C",
    "name": "Minimum Varied Number",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "546/B",
    "contestId": 546,
    "index": "B",
    "name": "Soldier and Badges",
    "rating": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1165/E",
    "contestId": 1165,
    "index": "E",
    "name": "Two Arrays and Sum of Functions",
    "rating": 1600,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1251/B",
    "contestId": 1251,
    "index": "B",
    "name": "Binary Palindromes",
    "rating": 1400,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "735/C",
    "contestId": 735,
    "index": "C",
    "name": "Tennis Championship",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "34/D",
    "contestId": 34,
    "index": "D",
    "name": "Road Map",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "681/A",
    "contestId": 681,
    "index": "A",
    "name": "A Good Contest",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1539/A",
    "contestId": 1539,
    "index": "A",
    "name": "Contest Start",
    "rating": 1000,
    "tags": [
      "combinatorics",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "id": "837/C",
    "contestId": 837,
    "index": "C",
    "name": "Two Seals",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1358/A",
    "contestId": 1358,
    "index": "A",
    "name": "Park Lighting",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1111/E",
    "contestId": 1111,
    "index": "E",
    "name": "Tree",
    "rating": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1163/B1",
    "contestId": 1163,
    "index": "B1",
    "name": "Cat Party (Easy Edition)",
    "rating": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1041/A",
    "contestId": 1041,
    "index": "A",
    "name": "Heist",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1826/B",
    "contestId": 1826,
    "index": "B",
    "name": "Lunatic Never Content",
    "rating": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "192/A",
    "contestId": 192,
    "index": "A",
    "name": "Funky Numbers",
    "rating": 1300,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "350/E",
    "contestId": 350,
    "index": "E",
    "name": "Wrong Floyd",
    "rating": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1360/C",
    "contestId": 1360,
    "index": "C",
    "name": "Similar Pairs",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "graph matchings",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "79/E",
    "contestId": 79,
    "index": "E",
    "name": "Security System",
    "rating": 2900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1988/C",
    "contestId": 1988,
    "index": "C",
    "name": "Increasing Sequence with Fixed OR",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1617/A",
    "contestId": 1617,
    "index": "A",
    "name": "Forbidden Subsequence",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1166/B",
    "contestId": 1166,
    "index": "B",
    "name": "All the Vowels Please",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "154/E",
    "contestId": 154,
    "index": "E",
    "name": "Martian Colony",
    "rating": 3000,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1523/E",
    "contestId": 1523,
    "index": "E",
    "name": "Crypto Lights",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1216/B",
    "contestId": 1216,
    "index": "B",
    "name": "Shooting",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "628/E",
    "contestId": 628,
    "index": "E",
    "name": "Zbazi in Zeydabad",
    "rating": 2300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1528/E",
    "contestId": 1528,
    "index": "E",
    "name": "Mashtali and Hagh Trees",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "id": "845/C",
    "contestId": 845,
    "index": "C",
    "name": "Two TVs",
    "rating": 1500,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1270/B",
    "contestId": 1270,
    "index": "B",
    "name": "Interesting Subarray",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1859/F",
    "contestId": 1859,
    "index": "F",
    "name": "Teleportation in Byteland",
    "rating": 3200,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "1105/E",
    "contestId": 1105,
    "index": "E",
    "name": "Helping Hiasat",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1006/B",
    "contestId": 1006,
    "index": "B",
    "name": "Polycarp's Practice",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1808/E2",
    "contestId": 1808,
    "index": "E2",
    "name": "Minibuses on Venus (medium version)",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "matrices"
    ]
  },
  {
    "id": "915/G",
    "contestId": 915,
    "index": "G",
    "name": "Coprime Arrays",
    "rating": 2300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1096/C",
    "contestId": 1096,
    "index": "C",
    "name": "Polygon for the Angle",
    "rating": 1600,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "id": "1823/E",
    "contestId": 1823,
    "index": "E",
    "name": "Removing Graph",
    "rating": 2500,
    "tags": [
      "brute force",
      "dp",
      "games",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1515/G",
    "contestId": 1515,
    "index": "G",
    "name": "Phoenix and Odometers",
    "rating": 2700,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "id": "235/E",
    "contestId": 235,
    "index": "E",
    "name": "Number Challenge",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1937/A",
    "contestId": 1937,
    "index": "A",
    "name": "Shuffle Party",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1767/B",
    "contestId": 1767,
    "index": "B",
    "name": "Block Towers",
    "rating": 800,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "186/B",
    "contestId": 186,
    "index": "B",
    "name": "Growing Mushrooms",
    "rating": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1618/F",
    "contestId": 1618,
    "index": "F",
    "name": "Reverse",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "id": "1000/E",
    "contestId": 1000,
    "index": "E",
    "name": "We Need More Bosses",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1511/B",
    "contestId": 1511,
    "index": "B",
    "name": "GCD Length",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1929/F",
    "contestId": 1929,
    "index": "F",
    "name": "Sasha and the Wedding Binary Search Tree",
    "rating": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "dfs and similar",
      "math",
      "trees"
    ]
  },
  {
    "id": "1284/G",
    "contestId": 1284,
    "index": "G",
    "name": "Seollal",
    "rating": 3300,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "1930/D1",
    "contestId": 1930,
    "index": "D1",
    "name": "Sum over all Substrings (Easy Version)",
    "rating": 1800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1847/A",
    "contestId": 1847,
    "index": "A",
    "name": "The Man who became a God",
    "rating": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1299/D",
    "contestId": 1299,
    "index": "D",
    "name": "Around the World",
    "rating": 3000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dfs and similar",
      "dp",
      "graphs",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "id": "1221/B",
    "contestId": 1221,
    "index": "B",
    "name": "Knights",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "65/B",
    "contestId": 65,
    "index": "B",
    "name": "Harry Potter and the History of Magic",
    "rating": 1700,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1920/A",
    "contestId": 1920,
    "index": "A",
    "name": "Satisfying Constraints",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1098/C",
    "contestId": 1098,
    "index": "C",
    "name": "Construct a tree",
    "rating": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1731/B",
    "contestId": 1731,
    "index": "B",
    "name": "Kill Demodogs",
    "rating": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1571/C",
    "contestId": 1571,
    "index": "C",
    "name": "Rhyme",
    "rating": 1800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "714/A",
    "contestId": 714,
    "index": "A",
    "name": "Meeting of Old Friends",
    "rating": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1828/A",
    "contestId": 1828,
    "index": "A",
    "name": "Divisible Array",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "965/B",
    "contestId": 965,
    "index": "B",
    "name": "Battleship",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1933/G",
    "contestId": 1933,
    "index": "G",
    "name": "Turtle Magic: Royal Turtle Shell Pattern",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "math"
    ]
  },
  {
    "id": "1552/D",
    "contestId": 1552,
    "index": "D",
    "name": "Array Differentiation",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "id": "469/A",
    "contestId": 469,
    "index": "A",
    "name": "I Wanna Be the Guy",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "776/F",
    "contestId": 776,
    "index": "F",
    "name": "Sherlock's bet to Moriarty",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "geometry",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "55/E",
    "contestId": 55,
    "index": "E",
    "name": "Very simple problem",
    "rating": 2500,
    "tags": [
      "geometry",
      "two pointers"
    ]
  },
  {
    "id": "1630/B",
    "contestId": 1630,
    "index": "B",
    "name": "Range and Partition",
    "rating": 1800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "448/D",
    "contestId": 448,
    "index": "D",
    "name": "Multiplication Table",
    "rating": 1800,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "id": "226/C",
    "contestId": 226,
    "index": "C",
    "name": "Anniversary",
    "rating": 2400,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "id": "1111/C",
    "contestId": 1111,
    "index": "C",
    "name": "Creative Snap",
    "rating": 1700,
    "tags": [
      "binary search",
      "brute force",
      "divide and conquer",
      "math"
    ]
  },
  {
    "id": "1555/E",
    "contestId": 1555,
    "index": "E",
    "name": "Boring Segments",
    "rating": 2100,
    "tags": [
      "data structures",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "839/B",
    "contestId": 839,
    "index": "B",
    "name": "Game of the Rows",
    "rating": 1900,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1902/B",
    "contestId": 1902,
    "index": "B",
    "name": "Getting Points",
    "rating": 1100,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1430/C",
    "contestId": 1430,
    "index": "C",
    "name": "Numbers on Whiteboard",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "164/B",
    "contestId": 164,
    "index": "B",
    "name": "Ancient Berland Hieroglyphs",
    "rating": 2000,
    "tags": [
      "two pointers"
    ]
  },
  {
    "id": "1398/E",
    "contestId": 1398,
    "index": "E",
    "name": "Two Types of Spells",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1133/C",
    "contestId": 1133,
    "index": "C",
    "name": "Balanced Team",
    "rating": 1200,
    "tags": [
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1864/H",
    "contestId": 1864,
    "index": "H",
    "name": "Asterism Stream",
    "rating": 3200,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "id": "1923/B",
    "contestId": 1923,
    "index": "B",
    "name": "Monsters Attack!",
    "rating": 1100,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1776/K",
    "contestId": 1776,
    "index": "K",
    "name": "Uniform Chemistry",
    "rating": 3200,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "173/D",
    "contestId": 173,
    "index": "D",
    "name": "Deputies",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "778/B",
    "contestId": 778,
    "index": "B",
    "name": "Bitwise Formula",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "id": "1386/B",
    "contestId": 1386,
    "index": "B",
    "name": "Mixture",
    "rating": 2900,
    "tags": [
      "*special",
      "data structures",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "id": "229/B",
    "contestId": 229,
    "index": "B",
    "name": "Planets",
    "rating": 1700,
    "tags": [
      "binary search",
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1367/F2",
    "contestId": 1367,
    "index": "F2",
    "name": "Flying Sort (Hard Version)",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "284/A",
    "contestId": 284,
    "index": "A",
    "name": "Cows and Primitive Roots",
    "rating": 1400,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "265/B",
    "contestId": 265,
    "index": "B",
    "name": "Roadside Trees (Simplified Edition)",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1753/E",
    "contestId": 1753,
    "index": "E",
    "name": "N Machines",
    "rating": 3300,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1096/G",
    "contestId": 1096,
    "index": "G",
    "name": "Lucky Tickets",
    "rating": 2400,
    "tags": [
      "divide and conquer",
      "dp",
      "fft"
    ]
  },
  {
    "id": "721/C",
    "contestId": 721,
    "index": "C",
    "name": "Journey",
    "rating": 1800,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1618/G",
    "contestId": 1618,
    "index": "G",
    "name": "Trader Problem",
    "rating": 2200,
    "tags": [
      "data structures",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "367/A",
    "contestId": 367,
    "index": "A",
    "name": "Sereja and Algorithm",
    "rating": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "959/D",
    "contestId": 959,
    "index": "D",
    "name": "Mahmoud and Ehab and another array construction task",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1476/C",
    "contestId": 1476,
    "index": "C",
    "name": "Longest Simple Cycle",
    "rating": 1600,
    "tags": [
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "991/B",
    "contestId": 991,
    "index": "B",
    "name": "Getting an A",
    "rating": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1765/I",
    "contestId": 1765,
    "index": "I",
    "name": "Infinite Chess",
    "rating": 2800,
    "tags": [
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "266/C",
    "contestId": 266,
    "index": "C",
    "name": "Below the Diagonal",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "705/A",
    "contestId": 705,
    "index": "A",
    "name": "Hulk",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1738/B",
    "contestId": 1738,
    "index": "B",
    "name": "Prefix Sum Addicts",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1722/F",
    "contestId": 1722,
    "index": "F",
    "name": "L-shapes",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "id": "679/B",
    "contestId": 679,
    "index": "B",
    "name": "Bear and Tower of Cubes",
    "rating": 2200,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "837/F",
    "contestId": 837,
    "index": "F",
    "name": "Prefix Sums",
    "rating": 2400,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "matrices"
    ]
  },
  {
    "id": "1684/C",
    "contestId": 1684,
    "index": "C",
    "name": "Column Swapping",
    "rating": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1832/E",
    "contestId": 1832,
    "index": "E",
    "name": "Combinatorics Problem",
    "rating": 2200,
    "tags": [
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1327/A",
    "contestId": 1327,
    "index": "A",
    "name": "Sum of Odd Integers",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "25/D",
    "contestId": 25,
    "index": "D",
    "name": "Roads not only in Berland",
    "rating": 1900,
    "tags": [
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "416/E",
    "contestId": 416,
    "index": "E",
    "name": "President's Path",
    "rating": 2500,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "729/E",
    "contestId": 729,
    "index": "E",
    "name": "Subordinates",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "436/C",
    "contestId": 436,
    "index": "C",
    "name": "Dungeons and Candies",
    "rating": 1800,
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1695/B",
    "contestId": 1695,
    "index": "B",
    "name": "Circle Game",
    "rating": 1000,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "id": "771/E",
    "contestId": 771,
    "index": "E",
    "name": "Bear and Rectangle Strips",
    "rating": 3000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1877/C",
    "contestId": 1877,
    "index": "C",
    "name": "Joyboard",
    "rating": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1187/C",
    "contestId": 1187,
    "index": "C",
    "name": "Vasya And Array",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "4/B",
    "contestId": 4,
    "index": "B",
    "name": "Before an Exam",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "754/B",
    "contestId": 754,
    "index": "B",
    "name": "Ilya and tic-tac-toe game",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1523/F",
    "contestId": 1523,
    "index": "F",
    "name": "Favorite Game",
    "rating": 3300,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1321/C",
    "contestId": 1321,
    "index": "C",
    "name": "Remove Adjacent",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1495/E",
    "contestId": 1495,
    "index": "E",
    "name": "Qingshan and Daniel",
    "rating": 3200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "313/B",
    "contestId": 313,
    "index": "B",
    "name": "Ilya and Queries",
    "rating": 1100,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "820/A",
    "contestId": 820,
    "index": "A",
    "name": "Mister B and Book Reading",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "70/C",
    "contestId": 70,
    "index": "C",
    "name": "Lucky Tickets",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1070/C",
    "contestId": 1070,
    "index": "C",
    "name": "Cloud Computing",
    "rating": 2000,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "482/B",
    "contestId": 482,
    "index": "B",
    "name": "Interesting Array",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "trees"
    ]
  },
  {
    "id": "300/D",
    "contestId": 300,
    "index": "D",
    "name": "Painting Square",
    "rating": 2300,
    "tags": [
      "dp",
      "fft"
    ]
  },
  {
    "id": "21/D",
    "contestId": 21,
    "index": "D",
    "name": "Traveling Graph",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "id": "1424/M",
    "contestId": 1424,
    "index": "M",
    "name": "Ancient Language",
    "rating": 2200,
    "tags": [
      "graphs",
      "sortings"
    ]
  },
  {
    "id": "717/A",
    "contestId": 717,
    "index": "A",
    "name": "Festival Organization",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "576/C",
    "contestId": 576,
    "index": "C",
    "name": "Points on Plane",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "divide and conquer",
      "geometry",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "39/F",
    "contestId": 39,
    "index": "F",
    "name": "Pacifist frogs",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "583/B",
    "contestId": 583,
    "index": "B",
    "name": "Robot's Task",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "216/A",
    "contestId": 216,
    "index": "A",
    "name": "Tiling with Hexagons",
    "rating": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "774/G",
    "contestId": 774,
    "index": "G",
    "name": "Perfectionist Arkadiy",
    "rating": 2700,
    "tags": [
      "*special",
      "number theory"
    ]
  },
  {
    "id": "1285/F",
    "contestId": 1285,
    "index": "F",
    "name": "Classical?",
    "rating": 2900,
    "tags": [
      "binary search",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "id": "1367/D",
    "contestId": 1367,
    "index": "D",
    "name": "Task On The Board",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "32/B",
    "contestId": 32,
    "index": "B",
    "name": "Borze",
    "rating": 800,
    "tags": [
      "expression parsing",
      "implementation"
    ]
  },
  {
    "id": "1490/B",
    "contestId": 1490,
    "index": "B",
    "name": "Balanced Remainders",
    "rating": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1085/A",
    "contestId": 1085,
    "index": "A",
    "name": "Right-Left Cipher",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "195/B",
    "contestId": 195,
    "index": "B",
    "name": "After Training",
    "rating": 1300,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1305/H",
    "contestId": 1305,
    "index": "H",
    "name": "Kuroni the Private Tutor",
    "rating": 3500,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "120/F",
    "contestId": 120,
    "index": "F",
    "name": "Spiders",
    "rating": 1400,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1503/E",
    "contestId": 1503,
    "index": "E",
    "name": "2-Coloring",
    "rating": 3100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1282/B1",
    "contestId": 1282,
    "index": "B1",
    "name": "K for the Price of One (Easy Version)",
    "rating": 1400,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1156/C",
    "contestId": 1156,
    "index": "C",
    "name": "Match Points",
    "rating": 2000,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "id": "1185/C1",
    "contestId": 1185,
    "index": "C1",
    "name": "Exam in BerSU (easy version)",
    "rating": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "579/B",
    "contestId": 579,
    "index": "B",
    "name": "Finding Team Member",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1742/C",
    "contestId": 1742,
    "index": "C",
    "name": "Stripes",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "228/E",
    "contestId": 228,
    "index": "E",
    "name": "The Road to Berland is Paved With Good Intentions",
    "rating": 1900,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "50/A",
    "contestId": 50,
    "index": "A",
    "name": "Domino piling",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1873/F",
    "contestId": 1873,
    "index": "F",
    "name": "Money Trees",
    "rating": 1300,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1689/A",
    "contestId": 1689,
    "index": "A",
    "name": "Lex String",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1223/F",
    "contestId": 1223,
    "index": "F",
    "name": "Stack Exterminable Arrays",
    "rating": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "hashing"
    ]
  },
  {
    "id": "1735/A",
    "contestId": 1735,
    "index": "A",
    "name": "Working Week",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1106/F",
    "contestId": 1106,
    "index": "F",
    "name": "Lunar New Year and a Recursive Sequence",
    "rating": 2400,
    "tags": [
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "id": "898/A",
    "contestId": 898,
    "index": "A",
    "name": "Rounding",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1718/A2",
    "contestId": 1718,
    "index": "A2",
    "name": "Burenka and Traditions (hard version)",
    "rating": 1900,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1207/G",
    "contestId": 1207,
    "index": "G",
    "name": "Indie Album",
    "rating": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "hashing",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "id": "549/A",
    "contestId": 549,
    "index": "A",
    "name": "Face Detection",
    "rating": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1234/B2",
    "contestId": 1234,
    "index": "B2",
    "name": "Social Network (hard version)",
    "rating": 1300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1973/F",
    "contestId": 1973,
    "index": "F",
    "name": "Maximum GCD Sum Queries",
    "rating": 3100,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "1605/C",
    "contestId": 1605,
    "index": "C",
    "name": "Dominant Character",
    "rating": 1400,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "808/C",
    "contestId": 808,
    "index": "C",
    "name": "Tea Party",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "868/D",
    "contestId": 868,
    "index": "D",
    "name": "Huge Strings",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "121/D",
    "contestId": 121,
    "index": "D",
    "name": "Lucky Segments",
    "rating": 2500,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1343/E",
    "contestId": 1343,
    "index": "E",
    "name": "Weights Distributing",
    "rating": 2100,
    "tags": [
      "brute force",
      "graphs",
      "greedy",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "31/E",
    "contestId": 31,
    "index": "E",
    "name": "TV Game",
    "rating": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1594/D",
    "contestId": 1594,
    "index": "D",
    "name": "The Number of Imposters",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1780/G",
    "contestId": 1780,
    "index": "G",
    "name": "Delicious Dessert",
    "rating": 2400,
    "tags": [
      "binary search",
      "dsu",
      "hashing",
      "math",
      "number theory",
      "string suffix structures"
    ]
  },
  {
    "id": "387/C",
    "contestId": 387,
    "index": "C",
    "name": "George and Number",
    "rating": 1700,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1131/B",
    "contestId": 1131,
    "index": "B",
    "name": "Draw!",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1610/B",
    "contestId": 1610,
    "index": "B",
    "name": "Kalindrome Array",
    "rating": 1100,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1584/E",
    "contestId": 1584,
    "index": "E",
    "name": "Game with Stones",
    "rating": 2300,
    "tags": [
      "binary search",
      "data structures",
      "games",
      "greedy"
    ]
  },
  {
    "id": "95/E",
    "contestId": 95,
    "index": "E",
    "name": "Lucky Country",
    "rating": 2500,
    "tags": [
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1236/A",
    "contestId": 1236,
    "index": "A",
    "name": "Stones",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1508/D",
    "contestId": 1508,
    "index": "D",
    "name": "Swap Pass",
    "rating": 3000,
    "tags": [
      "constructive algorithms",
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "1119/F",
    "contestId": 1119,
    "index": "F",
    "name": "Niyaz and Small Degrees",
    "rating": 3400,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1843/D",
    "contestId": 1843,
    "index": "D",
    "name": "Apple Tree",
    "rating": 1200,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "1915/G",
    "contestId": 1915,
    "index": "G",
    "name": "Bicycles",
    "rating": 1800,
    "tags": [
      "graphs",
      "greedy",
      "implementation",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "1413/B",
    "contestId": 1413,
    "index": "B",
    "name": "A New Technique",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "633/C",
    "contestId": 633,
    "index": "C",
    "name": "Spy Syndrome 2",
    "rating": 1900,
    "tags": [
      "data structures",
      "dp",
      "hashing",
      "implementation",
      "sortings",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1245/C",
    "contestId": 1245,
    "index": "C",
    "name": "Constanze's Machine",
    "rating": 1400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1419/D2",
    "contestId": 1419,
    "index": "D2",
    "name": "Sage's Birthday (hard version)",
    "rating": 1500,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1792/A",
    "contestId": 1792,
    "index": "A",
    "name": "GamingForces",
    "rating": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "501/E",
    "contestId": 501,
    "index": "E",
    "name": "Misha and Palindrome Degree",
    "rating": 2500,
    "tags": [
      "binary search",
      "combinatorics",
      "implementation"
    ]
  },
  {
    "id": "280/A",
    "contestId": 280,
    "index": "A",
    "name": "Rectangle Puzzle",
    "rating": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "319/B",
    "contestId": 319,
    "index": "B",
    "name": "Psychos in a Line",
    "rating": 1900,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1807/C",
    "contestId": 1807,
    "index": "C",
    "name": "Find and Replace",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "311/E",
    "contestId": 311,
    "index": "E",
    "name": "Biologist",
    "rating": 2300,
    "tags": [
      "flows"
    ]
  },
  {
    "id": "1038/A",
    "contestId": 1038,
    "index": "A",
    "name": "Equality",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "708/D",
    "contestId": 708,
    "index": "D",
    "name": "Incorrect Flow",
    "rating": 2900,
    "tags": [
      "flows"
    ]
  },
  {
    "id": "1809/F",
    "contestId": 1809,
    "index": "F",
    "name": "Traveling in Berland",
    "rating": 2500,
    "tags": [
      "binary search",
      "data structures",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1383/F",
    "contestId": 1383,
    "index": "F",
    "name": "Special Edges",
    "rating": 3200,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "id": "851/B",
    "contestId": 851,
    "index": "B",
    "name": "Arpa and an exam about geometry",
    "rating": 1400,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1807/B",
    "contestId": 1807,
    "index": "B",
    "name": "Grab the Candies",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1985/A",
    "contestId": 1985,
    "index": "A",
    "name": "Creating Words",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "623/A",
    "contestId": 623,
    "index": "A",
    "name": "Graph and String",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "1791/C",
    "contestId": 1791,
    "index": "C",
    "name": "Prepend and Append",
    "rating": 800,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "93/A",
    "contestId": 93,
    "index": "A",
    "name": "Frames",
    "rating": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1108/E2",
    "contestId": 1108,
    "index": "E2",
    "name": "Array and Segments (Hard version)",
    "rating": 2100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "777/A",
    "contestId": 777,
    "index": "A",
    "name": "Shell Game",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1615/G",
    "contestId": 1615,
    "index": "G",
    "name": "Maximum Adjacent Pairs",
    "rating": 3300,
    "tags": [
      "constructive algorithms",
      "graph matchings"
    ]
  },
  {
    "id": "919/A",
    "contestId": 919,
    "index": "A",
    "name": "Supermarket",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1801/F",
    "contestId": 1801,
    "index": "F",
    "name": "Another n-dimensional chocolate bar",
    "rating": 2700,
    "tags": [
      "dp",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "id": "1025/A",
    "contestId": 1025,
    "index": "A",
    "name": "Doggo Recoloring",
    "rating": 900,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1203/C",
    "contestId": 1203,
    "index": "C",
    "name": "Common Divisors",
    "rating": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "106/B",
    "contestId": 106,
    "index": "B",
    "name": "Choosing Laptop",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1155/D",
    "contestId": 1155,
    "index": "D",
    "name": "Beautiful Array",
    "rating": 1900,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1657/B",
    "contestId": 1657,
    "index": "B",
    "name": "XY Sequence",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1921/D",
    "contestId": 1921,
    "index": "D",
    "name": "Very Different Array",
    "rating": 1100,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "886/C",
    "contestId": 886,
    "index": "C",
    "name": "Petya and Catacombs",
    "rating": 1300,
    "tags": [
      "dsu",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1528/F",
    "contestId": 1528,
    "index": "F",
    "name": "AmShZ Farm",
    "rating": 3300,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "id": "755/D",
    "contestId": 755,
    "index": "D",
    "name": "PolandBall and Polygon",
    "rating": 2000,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1092/D1",
    "contestId": 1092,
    "index": "D1",
    "name": "Great Vova Wall (Version 1)",
    "rating": 2200,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "377/E",
    "contestId": 377,
    "index": "E",
    "name": "Cookie Clicker",
    "rating": 2800,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "id": "1607/H",
    "contestId": 1607,
    "index": "H",
    "name": "Banquet Preparations 2",
    "rating": 2200,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1392/A",
    "contestId": 1392,
    "index": "A",
    "name": "Omkar and Password",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "626/A",
    "contestId": 626,
    "index": "A",
    "name": "Robot Sequence",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1368/C",
    "contestId": 1368,
    "index": "C",
    "name": "Even Picture",
    "rating": 1500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1337/A",
    "contestId": 1337,
    "index": "A",
    "name": "Ichihime and Triangle",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1288/F",
    "contestId": 1288,
    "index": "F",
    "name": "Red-Blue Graph",
    "rating": 2900,
    "tags": [
      "constructive algorithms",
      "flows"
    ]
  },
  {
    "id": "1966/B",
    "contestId": 1966,
    "index": "B",
    "name": "Rectangle Filling",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1895/B",
    "contestId": 1895,
    "index": "B",
    "name": "Points and Minimum Distance",
    "rating": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1863/H",
    "contestId": 1863,
    "index": "H",
    "name": "Goldberg Machine 3",
    "rating": 3500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "935/D",
    "contestId": 935,
    "index": "D",
    "name": "Fafa and Ancient Alphabet",
    "rating": 1900,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "id": "263/E",
    "contestId": 263,
    "index": "E",
    "name": "Rhombus",
    "rating": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "353/C",
    "contestId": 353,
    "index": "C",
    "name": "Find Maximum",
    "rating": 1600,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1732/D1",
    "contestId": 1732,
    "index": "D1",
    "name": "Balance (Easy version)",
    "rating": 1500,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "1644/A",
    "contestId": 1644,
    "index": "A",
    "name": "Doors and Keys",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1418/E",
    "contestId": 1418,
    "index": "E",
    "name": "Expected Damage",
    "rating": 2400,
    "tags": [
      "binary search",
      "combinatorics",
      "probabilities"
    ]
  },
  {
    "id": "1392/H",
    "contestId": 1392,
    "index": "H",
    "name": "ZS Shuffles Cards",
    "rating": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "441/A",
    "contestId": 441,
    "index": "A",
    "name": "Valera and Antique Items",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1041/D",
    "contestId": 1041,
    "index": "D",
    "name": "Glider",
    "rating": 1700,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "949/E",
    "contestId": 949,
    "index": "E",
    "name": "Binary Cards",
    "rating": 2700,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1909/B",
    "contestId": 1909,
    "index": "B",
    "name": "Make Almost Equal With Mod",
    "rating": 1200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1208/C",
    "contestId": 1208,
    "index": "C",
    "name": "Magic Grid",
    "rating": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "764/B",
    "contestId": 764,
    "index": "B",
    "name": "Timofey and cubes",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1783/G",
    "contestId": 1783,
    "index": "G",
    "name": "Weighed Tree Radius",
    "rating": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1174/E",
    "contestId": 1174,
    "index": "E",
    "name": "Ehab and the Expected GCD Problem",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1379/B",
    "contestId": 1379,
    "index": "B",
    "name": "Dubious Cyrpto",
    "rating": 1500,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "302/A",
    "contestId": 302,
    "index": "A",
    "name": "Eugeny and Array",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1292/A",
    "contestId": 1292,
    "index": "A",
    "name": "NEKO's Maze Game",
    "rating": 1400,
    "tags": [
      "data structures",
      "dsu",
      "implementation"
    ]
  },
  {
    "id": "762/D",
    "contestId": 762,
    "index": "D",
    "name": "Maximum path",
    "rating": 2300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1278/A",
    "contestId": 1278,
    "index": "A",
    "name": "Shuffle Hashing",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "166/A",
    "contestId": 166,
    "index": "A",
    "name": "Rank List",
    "rating": 1100,
    "tags": [
      "binary search",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "197/A",
    "contestId": 197,
    "index": "A",
    "name": "Plate Game",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "games",
      "math"
    ]
  },
  {
    "id": "762/B",
    "contestId": 762,
    "index": "B",
    "name": "USB vs. PS/2",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1579/E2",
    "contestId": 1579,
    "index": "E2",
    "name": "Array Optimization by Deque",
    "rating": 1700,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "822/B",
    "contestId": 822,
    "index": "B",
    "name": "Crossword solving",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "550/E",
    "contestId": 550,
    "index": "E",
    "name": "Brackets in Implications",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1299/A",
    "contestId": 1299,
    "index": "A",
    "name": "Anu Has a Function",
    "rating": 1500,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1409/E",
    "contestId": 1409,
    "index": "E",
    "name": "Two Platforms",
    "rating": 1800,
    "tags": [
      "binary search",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "558/A",
    "contestId": 558,
    "index": "A",
    "name": "Lala Land and Apple Trees",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1841/E",
    "contestId": 1841,
    "index": "E",
    "name": "Fill the Matrix",
    "rating": 2200,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1396/C",
    "contestId": 1396,
    "index": "C",
    "name": "Monster Invaders",
    "rating": 2300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "377/D",
    "contestId": 377,
    "index": "D",
    "name": "Developing Game",
    "rating": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "234/H",
    "contestId": 234,
    "index": "H",
    "name": "Merging Two Decks",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1986/G2",
    "contestId": 1986,
    "index": "G2",
    "name": "Permutation Problem (Hard Version)",
    "rating": 2500,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "id": "89/E",
    "contestId": 89,
    "index": "E",
    "name": "Fire and Ice",
    "rating": 2900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "444/D",
    "contestId": 444,
    "index": "D",
    "name": "DZY Loves Strings",
    "rating": 2500,
    "tags": [
      "binary search",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "909/C",
    "contestId": 909,
    "index": "C",
    "name": "Python Indentation",
    "rating": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1825/B",
    "contestId": 1825,
    "index": "B",
    "name": "LuoTianyi and the Table",
    "rating": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "204/D",
    "contestId": 204,
    "index": "D",
    "name": "Little Elephant and Retro Strings",
    "rating": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1344/F",
    "contestId": 1344,
    "index": "F",
    "name": "Piet's Palette",
    "rating": 3200,
    "tags": [
      "matrices"
    ]
  },
  {
    "id": "1852/D",
    "contestId": 1852,
    "index": "D",
    "name": "Miriany and Matchstick",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1451/C",
    "contestId": 1451,
    "index": "C",
    "name": "String Equality",
    "rating": 1400,
    "tags": [
      "dp",
      "greedy",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1611/E1",
    "contestId": 1611,
    "index": "E1",
    "name": "Escape The Maze (easy version)",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "greedy",
      "shortest paths",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "351/E",
    "contestId": 351,
    "index": "E",
    "name": "Jeff and Permutation",
    "rating": 2200,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "238/E",
    "contestId": 238,
    "index": "E",
    "name": "Meeting Her",
    "rating": 2600,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "70/A",
    "contestId": 70,
    "index": "A",
    "name": "Cookies",
    "rating": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "id": "876/A",
    "contestId": 876,
    "index": "A",
    "name": "Trip For Meal",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "198/C",
    "contestId": 198,
    "index": "C",
    "name": "Delivering Carcinogen",
    "rating": 2400,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "id": "241/F",
    "contestId": 241,
    "index": "F",
    "name": "Race",
    "rating": 2300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "850/D",
    "contestId": 850,
    "index": "D",
    "name": "Tournament Construction",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1389/D",
    "contestId": 1389,
    "index": "D",
    "name": "Segment Intersections",
    "rating": 2100,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "38/E",
    "contestId": 38,
    "index": "E",
    "name": "Let's Go Rolling!",
    "rating": 1800,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "id": "1690/G",
    "contestId": 1690,
    "index": "G",
    "name": "Count the Trains",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "860/E",
    "contestId": 860,
    "index": "E",
    "name": "Arkady and a Nobody-men",
    "rating": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1555/C",
    "contestId": 1555,
    "index": "C",
    "name": "Coin Rows",
    "rating": 1300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "858/E",
    "contestId": 858,
    "index": "E",
    "name": "Tests Renumeration",
    "rating": 2200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1419/F",
    "contestId": 1419,
    "index": "F",
    "name": "Rain of Fire",
    "rating": 2800,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1633/A",
    "contestId": 1633,
    "index": "A",
    "name": "Div. 7",
    "rating": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1716/F",
    "contestId": 1716,
    "index": "F",
    "name": "Bags with Balls",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "154/B",
    "contestId": 154,
    "index": "B",
    "name": "Colliders",
    "rating": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1974/E",
    "contestId": 1974,
    "index": "E",
    "name": "Money Buys Happiness",
    "rating": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1703/C",
    "contestId": 1703,
    "index": "C",
    "name": "Cypher",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1000/G",
    "contestId": 1000,
    "index": "G",
    "name": "Two-Paths",
    "rating": 2700,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "id": "985/B",
    "contestId": 985,
    "index": "B",
    "name": "Switches and Lamps",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1611/D",
    "contestId": 1611,
    "index": "D",
    "name": "Weights Assignment For Tree Edges",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "id": "475/F",
    "contestId": 475,
    "index": "F",
    "name": "Meta-universe",
    "rating": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "14/B",
    "contestId": 14,
    "index": "B",
    "name": "Young Photographer",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1004/E",
    "contestId": 1004,
    "index": "E",
    "name": "Sonya and Ice Cream",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "125/E",
    "contestId": 125,
    "index": "E",
    "name": "MST Company",
    "rating": 2400,
    "tags": [
      "binary search",
      "graphs"
    ]
  },
  {
    "id": "1750/B",
    "contestId": 1750,
    "index": "B",
    "name": "Maximum Substring",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1322/B",
    "contestId": 1322,
    "index": "B",
    "name": "Present",
    "rating": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "id": "883/A",
    "contestId": 883,
    "index": "A",
    "name": "Automatic Door",
    "rating": 2200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1535/C",
    "contestId": 1535,
    "index": "C",
    "name": "Unstable String",
    "rating": 1400,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1487/B",
    "contestId": 1487,
    "index": "B",
    "name": "Cat Cycle",
    "rating": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "632/F",
    "contestId": 632,
    "index": "F",
    "name": "Magic Matrix",
    "rating": 2400,
    "tags": [
      "brute force",
      "divide and conquer",
      "graphs",
      "matrices",
      "trees"
    ]
  },
  {
    "id": "1943/E2",
    "contestId": 1943,
    "index": "E2",
    "name": "MEX Game 2 (Hard Version)",
    "rating": 3300,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1665/E",
    "contestId": 1665,
    "index": "E",
    "name": "MinimizOR",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "divide and conquer",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1970/G2",
    "contestId": 1970,
    "index": "G2",
    "name": "Min-Fund Prison (Medium)",
    "rating": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1486/D",
    "contestId": 1486,
    "index": "D",
    "name": "Max Median",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1419/E",
    "contestId": 1419,
    "index": "E",
    "name": "Decryption",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1065/F",
    "contestId": 1065,
    "index": "F",
    "name": "Up and Down the Tree",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1319/E",
    "contestId": 1319,
    "index": "E",
    "name": "World of Darkraft: Battle for Azathoth",
    "rating": 2000,
    "tags": [
      "brute force",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "383/D",
    "contestId": 383,
    "index": "D",
    "name": "Antimatter",
    "rating": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "460/C",
    "contestId": 460,
    "index": "C",
    "name": "Present",
    "rating": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "313/E",
    "contestId": 313,
    "index": "E",
    "name": "Ilya and Two Numbers",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "greedy"
    ]
  },
  {
    "id": "1004/F",
    "contestId": 1004,
    "index": "F",
    "name": "Sonya and Bitwise OR",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "id": "659/C",
    "contestId": 659,
    "index": "C",
    "name": "Tanya and Toys",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1336/B",
    "contestId": 1336,
    "index": "B",
    "name": "Xenia and Colorful Gems",
    "rating": 1700,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "67/E",
    "contestId": 67,
    "index": "E",
    "name": "Save the City!",
    "rating": 2500,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1511/D",
    "contestId": 1511,
    "index": "D",
    "name": "Min Cost String",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1835/A",
    "contestId": 1835,
    "index": "A",
    "name": "k-th equality",
    "rating": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1029/A",
    "contestId": 1029,
    "index": "A",
    "name": "Many Equal Substrings",
    "rating": 1300,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "884/A",
    "contestId": 884,
    "index": "A",
    "name": "Book Reading",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "279/C",
    "contestId": 279,
    "index": "C",
    "name": "Ladder",
    "rating": 1700,
    "tags": [
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1822/B",
    "contestId": 1822,
    "index": "B",
    "name": "Karina and Array",
    "rating": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1638/D",
    "contestId": 1638,
    "index": "D",
    "name": "Big Brush",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1635/C",
    "contestId": 1635,
    "index": "C",
    "name": "Differential Sorting",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "500/E",
    "contestId": 500,
    "index": "E",
    "name": "New Year Domino",
    "rating": 2300,
    "tags": [
      "data structures",
      "dp",
      "dsu"
    ]
  },
  {
    "id": "351/D",
    "contestId": 351,
    "index": "D",
    "name": "Jeff and Removing Periods",
    "rating": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1592/A",
    "contestId": 1592,
    "index": "A",
    "name": "Gamer Hemose",
    "rating": 800,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "680/B",
    "contestId": 680,
    "index": "B",
    "name": "Bear and Finding Criminals",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "333/A",
    "contestId": 333,
    "index": "A",
    "name": "Secrets",
    "rating": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "22/E",
    "contestId": 22,
    "index": "E",
    "name": "Scheme",
    "rating": 2300,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1919/E",
    "contestId": 1919,
    "index": "E",
    "name": "Counting Prefixes",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1408/G",
    "contestId": 1408,
    "index": "G",
    "name": "Clusterization Counting",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "dsu",
      "fft",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1112/D",
    "contestId": 1112,
    "index": "D",
    "name": "Compress String",
    "rating": 2100,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "906/E",
    "contestId": 906,
    "index": "E",
    "name": "Reverses",
    "rating": 3300,
    "tags": [
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1703/G",
    "contestId": 1703,
    "index": "G",
    "name": "Good Key, Bad Key",
    "rating": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1044/C",
    "contestId": 1044,
    "index": "C",
    "name": "Optimal Polygon Perimeter",
    "rating": 2100,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "id": "1497/C1",
    "contestId": 1497,
    "index": "C1",
    "name": "k-LCM (easy version)",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "914/D",
    "contestId": 914,
    "index": "D",
    "name": "Bash and a Tough Math Puzzle",
    "rating": 1900,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "id": "1254/E",
    "contestId": 1254,
    "index": "E",
    "name": "Send Tree to Charlie",
    "rating": 3300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "trees"
    ]
  },
  {
    "id": "45/E",
    "contestId": 45,
    "index": "E",
    "name": "Director",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1339/B",
    "contestId": 1339,
    "index": "B",
    "name": "Sorted Adjacent Differences",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "811/C",
    "contestId": 811,
    "index": "C",
    "name": "Vladik and Memorable Trip",
    "rating": 1900,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1148/B",
    "contestId": 1148,
    "index": "B",
    "name": "Born This Way",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force",
      "two pointers"
    ]
  },
  {
    "id": "609/C",
    "contestId": 609,
    "index": "C",
    "name": "Load Balancing",
    "rating": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1603/A",
    "contestId": 1603,
    "index": "A",
    "name": "Di-visible Confusion",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "424/E",
    "contestId": 424,
    "index": "E",
    "name": "Colored Jenga",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "482/A",
    "contestId": 482,
    "index": "A",
    "name": "Diverse Permutation",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1696/H",
    "contestId": 1696,
    "index": "H",
    "name": "Maximum Product?",
    "rating": 3500,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1540/B",
    "contestId": 1540,
    "index": "B",
    "name": "Tree Array",
    "rating": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "graphs",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "243/D",
    "contestId": 243,
    "index": "D",
    "name": "Cubes",
    "rating": 2700,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "two pointers"
    ]
  },
  {
    "id": "2/C",
    "contestId": 2,
    "index": "C",
    "name": "Commentator problem",
    "rating": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1391/B",
    "contestId": 1391,
    "index": "B",
    "name": "Fix You",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1411/E",
    "contestId": 1411,
    "index": "E",
    "name": "Poman Numbers",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "1016/B",
    "contestId": 1016,
    "index": "B",
    "name": "Segment Occurrences",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "851/A",
    "contestId": 851,
    "index": "A",
    "name": "Arpa and a research in Mexican wave",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "287/A",
    "contestId": 287,
    "index": "A",
    "name": "IQ Test",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1850/F",
    "contestId": 1850,
    "index": "F",
    "name": "We Were Both Children",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1017/C",
    "contestId": 1017,
    "index": "C",
    "name": "The Phone Number",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1898/E",
    "contestId": 1898,
    "index": "E",
    "name": "Sofia and Strings",
    "rating": 2200,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "191/B",
    "contestId": 191,
    "index": "B",
    "name": "Demonstration",
    "rating": 1700,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1211/E",
    "contestId": 1211,
    "index": "E",
    "name": "Double Permutation Inc.",
    "rating": 2000,
    "tags": [
      "*special",
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "306/C",
    "contestId": 306,
    "index": "C",
    "name": "White, Black and White Again",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "number theory"
    ]
  },
  {
    "id": "1143/B",
    "contestId": 1143,
    "index": "B",
    "name": "Nirvana",
    "rating": 1200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1197/A",
    "contestId": 1197,
    "index": "A",
    "name": "DIY Wooden Ladder",
    "rating": 900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1920/F1",
    "contestId": 1920,
    "index": "F1",
    "name": "Smooth Sailing (Easy Version)",
    "rating": 2500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1800/C1",
    "contestId": 1800,
    "index": "C1",
    "name": "Powering the Hero (easy version)",
    "rating": 1000,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1073/D",
    "contestId": 1073,
    "index": "D",
    "name": "Berland Fair",
    "rating": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "789/A",
    "contestId": 789,
    "index": "A",
    "name": "Anastasia and pebbles",
    "rating": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1364/A",
    "contestId": 1364,
    "index": "A",
    "name": "XXXXX",
    "rating": 1200,
    "tags": [
      "brute force",
      "data structures",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1216/D",
    "contestId": 1216,
    "index": "D",
    "name": "Swords",
    "rating": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1469/E",
    "contestId": 1469,
    "index": "E",
    "name": "A Bit Similar",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "hashing",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1646/A",
    "contestId": 1646,
    "index": "A",
    "name": "Square Counting",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "643/B",
    "contestId": 643,
    "index": "B",
    "name": "Bear and Two Paths",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "1699/C",
    "contestId": 1699,
    "index": "C",
    "name": "The Third Problem",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1153/C",
    "contestId": 1153,
    "index": "C",
    "name": "Serval and Parenthesis Sequence",
    "rating": 1700,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1603/C",
    "contestId": 1603,
    "index": "C",
    "name": "Extreme Extension",
    "rating": 2300,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "385/C",
    "contestId": 385,
    "index": "C",
    "name": "Bear and Prime Numbers",
    "rating": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1861/E",
    "contestId": 1861,
    "index": "E",
    "name": "Non-Intersecting Subpermutations",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "60/C",
    "contestId": 60,
    "index": "C",
    "name": "Mushroom Strife",
    "rating": 2100,
    "tags": [
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "id": "1904/E",
    "contestId": 1904,
    "index": "E",
    "name": "Tree Queries",
    "rating": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1852/F",
    "contestId": 1852,
    "index": "F",
    "name": "Panda Meetups",
    "rating": 3500,
    "tags": [
      "data structures",
      "dp",
      "flows"
    ]
  },
  {
    "id": "39/D",
    "contestId": 39,
    "index": "D",
    "name": "Cubical Planet",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1706/E",
    "contestId": 1706,
    "index": "E",
    "name": "Qpwoeirut and Vertices",
    "rating": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "803/F",
    "contestId": 803,
    "index": "F",
    "name": "Coprime Subsequences",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "id": "797/A",
    "contestId": 797,
    "index": "A",
    "name": "k-Factorization",
    "rating": 1100,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1186/A",
    "contestId": 1186,
    "index": "A",
    "name": "Vus the Cossack and a Contest",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1470/D",
    "contestId": 1470,
    "index": "D",
    "name": "Strange Housing",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graph matchings",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1205/F",
    "contestId": 1205,
    "index": "F",
    "name": "Beauty of a Permutation",
    "rating": 3400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1761/B",
    "contestId": 1761,
    "index": "B",
    "name": "Elimination of a Ring",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "140/C",
    "contestId": 140,
    "index": "C",
    "name": "New Year Snowmen",
    "rating": 1800,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "354/D",
    "contestId": 354,
    "index": "D",
    "name": "Transferring Pyramid",
    "rating": 2900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "17/B",
    "contestId": 17,
    "index": "B",
    "name": "Hierarchy",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "748/D",
    "contestId": 748,
    "index": "D",
    "name": "Santa Claus and a Palindrome",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "676/E",
    "contestId": 676,
    "index": "E",
    "name": "The Last Fight Between Human and AI",
    "rating": 2400,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1967/A",
    "contestId": 1967,
    "index": "A",
    "name": "Permutation Counting",
    "rating": 1400,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1073/A",
    "contestId": 1073,
    "index": "A",
    "name": "Diverse Substring",
    "rating": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1761/A",
    "contestId": 1761,
    "index": "A",
    "name": "Two Permutations",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "1218/D",
    "contestId": 1218,
    "index": "D",
    "name": "Xor Spanning Tree",
    "rating": 2400,
    "tags": [
      "divide and conquer",
      "fft",
      "graphs"
    ]
  },
  {
    "id": "83/E",
    "contestId": 83,
    "index": "E",
    "name": "Two Subsequences",
    "rating": 2800,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1335/D",
    "contestId": 1335,
    "index": "D",
    "name": "Anti-Sudoku",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "520/C",
    "contestId": 520,
    "index": "C",
    "name": "DNA Alignment",
    "rating": 1500,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "id": "1857/G",
    "contestId": 1857,
    "index": "G",
    "name": "Counting Graphs",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1503/D",
    "contestId": 1503,
    "index": "D",
    "name": "Flip the Cards",
    "rating": 2600,
    "tags": [
      "2-sat",
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1949/I",
    "contestId": 1949,
    "index": "I",
    "name": "Disks",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "geometry",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "id": "1602/A",
    "contestId": 1602,
    "index": "A",
    "name": "Two Subsequences",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1136/E",
    "contestId": 1136,
    "index": "E",
    "name": "Nastya Hasn't Written a Legend",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "498/D",
    "contestId": 498,
    "index": "D",
    "name": "Traffic Jams in the Land",
    "rating": 2400,
    "tags": [
      "data structures",
      "dp",
      "number theory"
    ]
  },
  {
    "id": "1626/D",
    "contestId": 1626,
    "index": "D",
    "name": "Martial Arts Tournament",
    "rating": 2100,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "676/D",
    "contestId": 676,
    "index": "D",
    "name": "Theseus and labyrinth",
    "rating": 2000,
    "tags": [
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "1038/B",
    "contestId": 1038,
    "index": "B",
    "name": "Non-Coprime Partition",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1628/F",
    "contestId": 1628,
    "index": "F",
    "name": "Spaceship Crisis Management",
    "rating": 3500,
    "tags": [
      "binary search",
      "data structures",
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "1942/F",
    "contestId": 1942,
    "index": "F",
    "name": "Farmer John's Favorite Function",
    "rating": 2700,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "id": "403/D",
    "contestId": 403,
    "index": "D",
    "name": "Beautiful Pairs of Numbers",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1162/A",
    "contestId": 1162,
    "index": "A",
    "name": "Zoning Restrictions Again",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "271/E",
    "contestId": 271,
    "index": "E",
    "name": "Three Horses",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1497/D",
    "contestId": 1497,
    "index": "D",
    "name": "Genius",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "number theory"
    ]
  },
  {
    "id": "1904/C",
    "contestId": 1904,
    "index": "C",
    "name": "Array Game",
    "rating": 1400,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1924/A",
    "contestId": 1924,
    "index": "A",
    "name": "Did We Get Everything Covered?",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "shortest paths",
      "strings"
    ]
  },
  {
    "id": "1889/F",
    "contestId": 1889,
    "index": "F",
    "name": "Doremy's Average Tree",
    "rating": 3500,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "743/D",
    "contestId": 743,
    "index": "D",
    "name": "Chloe and pleasant prizes",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1196/D1",
    "contestId": 1196,
    "index": "D1",
    "name": "RGB Substring (easy version)",
    "rating": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1616/D",
    "contestId": 1616,
    "index": "D",
    "name": "Keep the Average High",
    "rating": 2000,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1950/E",
    "contestId": 1950,
    "index": "E",
    "name": "Nearly Shortest Repeating Substring",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation",
      "number theory",
      "strings"
    ]
  },
  {
    "id": "38/F",
    "contestId": 38,
    "index": "F",
    "name": "Smart Boy",
    "rating": 2100,
    "tags": [
      "dp",
      "games",
      "strings"
    ]
  },
  {
    "id": "1870/G",
    "contestId": 1870,
    "index": "G",
    "name": "MEXanization",
    "rating": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1156/A",
    "contestId": 1156,
    "index": "A",
    "name": "Inscribed Figures",
    "rating": 1400,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "283/E",
    "contestId": 283,
    "index": "E",
    "name": "Cow Tennis Tournament",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "data structures",
      "math"
    ]
  },
  {
    "id": "1762/B",
    "contestId": 1762,
    "index": "B",
    "name": "Make Array Good",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "87/A",
    "contestId": 87,
    "index": "A",
    "name": "Trains",
    "rating": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1799/H",
    "contestId": 1799,
    "index": "H",
    "name": "Tree Cutting",
    "rating": 3200,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "id": "1706/D2",
    "contestId": 1706,
    "index": "D2",
    "name": "Chopping Carrots (Hard Version)",
    "rating": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "436/D",
    "contestId": 436,
    "index": "D",
    "name": "Pudding Monsters",
    "rating": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "496/A",
    "contestId": 496,
    "index": "A",
    "name": "Minimum Difficulty",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1772/A",
    "contestId": 1772,
    "index": "A",
    "name": "A+B?",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "252/A",
    "contestId": 252,
    "index": "A",
    "name": "Little Xor",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1762/G",
    "contestId": 1762,
    "index": "G",
    "name": "Unequal Adjacent Elements",
    "rating": 3100,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "146/B",
    "contestId": 146,
    "index": "B",
    "name": "Lucky Mask",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1681/F",
    "contestId": 1681,
    "index": "F",
    "name": "Unique Occurrences",
    "rating": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "dsu",
      "trees"
    ]
  },
  {
    "id": "1665/B",
    "contestId": 1665,
    "index": "B",
    "name": "Array Cloning Technique",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1349/A",
    "contestId": 1349,
    "index": "A",
    "name": "Orac and LCM",
    "rating": 1600,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1413/F",
    "contestId": 1413,
    "index": "F",
    "name": "Roads and Ramen",
    "rating": 2800,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1346/G",
    "contestId": 1346,
    "index": "G",
    "name": "Two IP Cameras",
    "rating": 2300,
    "tags": [
      "*special",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1023/B",
    "contestId": 1023,
    "index": "B",
    "name": "Pair of Toys",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1539/E",
    "contestId": 1539,
    "index": "E",
    "name": "Game with Cards",
    "rating": 2500,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1810/B",
    "contestId": 1810,
    "index": "B",
    "name": "Candies",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1766/F",
    "contestId": 1766,
    "index": "F",
    "name": "MCF",
    "rating": 2800,
    "tags": [
      "flows"
    ]
  },
  {
    "id": "1744/B",
    "contestId": 1744,
    "index": "B",
    "name": "Even-Odd Increments",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "274/A",
    "contestId": 274,
    "index": "A",
    "name": "k-Multiple Free Set",
    "rating": 1500,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1200/A",
    "contestId": 1200,
    "index": "A",
    "name": "Hotelier",
    "rating": 800,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1943/E1",
    "contestId": 1943,
    "index": "E1",
    "name": "MEX Game 2 (Easy Version)",
    "rating": 2900,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "732/A",
    "contestId": 732,
    "index": "A",
    "name": "Buy a Shovel",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "369/B",
    "contestId": 369,
    "index": "B",
    "name": "Valera and Contest",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "747/D",
    "contestId": 747,
    "index": "D",
    "name": "Winter Is Coming",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1251/D",
    "contestId": 1251,
    "index": "D",
    "name": "Salary Changing",
    "rating": 1900,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "648/E",
    "contestId": 648,
    "index": "E",
    "name": "Собери число",
    "rating": 2300,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1319/G",
    "contestId": 1319,
    "index": "G",
    "name": "Reachable Strings",
    "rating": 2500,
    "tags": [
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "43/A",
    "contestId": 43,
    "index": "A",
    "name": "Football",
    "rating": 1000,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "1270/A",
    "contestId": 1270,
    "index": "A",
    "name": "Card Game",
    "rating": 800,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1084/B",
    "contestId": 1084,
    "index": "B",
    "name": "Kvass and the Fair Nut",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1862/D",
    "contestId": 1862,
    "index": "D",
    "name": "Ice Cream Balls",
    "rating": 1300,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1741/B",
    "contestId": 1741,
    "index": "B",
    "name": "Funny Permutation",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1430/G",
    "contestId": 1430,
    "index": "G",
    "name": "Yet Another DAG Problem",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "flows",
      "graphs",
      "math"
    ]
  },
  {
    "id": "855/D",
    "contestId": 855,
    "index": "D",
    "name": "Rowena Ravenclaw's Diadem",
    "rating": 2500,
    "tags": [
      "trees"
    ]
  },
  {
    "id": "622/F",
    "contestId": 622,
    "index": "F",
    "name": "The Sum of the k-th Powers",
    "rating": 2600,
    "tags": [
      "math"
    ]
  },
  {
    "id": "303/A",
    "contestId": 303,
    "index": "A",
    "name": "Lucky Permutation Triple",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "148/C",
    "contestId": 148,
    "index": "C",
    "name": "Terse princess",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1921/C",
    "contestId": 1921,
    "index": "C",
    "name": "Sending Messages",
    "rating": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1487/D",
    "contestId": 1487,
    "index": "D",
    "name": "Pythagorean Triples",
    "rating": 1500,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1945/E",
    "contestId": 1945,
    "index": "E",
    "name": "Binary Search",
    "rating": 1700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "582/D",
    "contestId": 582,
    "index": "D",
    "name": "Number of Binominal Coefficients",
    "rating": 3300,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1312/G",
    "contestId": 1312,
    "index": "G",
    "name": "Autocompletion",
    "rating": 2600,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "id": "1037/A",
    "contestId": 1037,
    "index": "A",
    "name": "Packets",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1967/F",
    "contestId": 1967,
    "index": "F",
    "name": "Next and Prev",
    "rating": 3200,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1660/C",
    "contestId": 1660,
    "index": "C",
    "name": "Get an Even String",
    "rating": 1300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1684/E",
    "contestId": 1684,
    "index": "E",
    "name": "MEX vs DIFF",
    "rating": 2100,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1458/D",
    "contestId": 1458,
    "index": "D",
    "name": "Flip and Reverse",
    "rating": 3100,
    "tags": [
      "data structures",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1106/B",
    "contestId": 1106,
    "index": "B",
    "name": "Lunar New Year and Food Ordering",
    "rating": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1076/F",
    "contestId": 1076,
    "index": "F",
    "name": "Summer Practice Report",
    "rating": 2500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "88/B",
    "contestId": 88,
    "index": "B",
    "name": "Keyboard",
    "rating": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "784/G",
    "contestId": 784,
    "index": "G",
    "name": "BF Calculator",
    "rating": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1083/A",
    "contestId": 1083,
    "index": "A",
    "name": "The Fair Nut and the Best Path",
    "rating": 1800,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "id": "320/A",
    "contestId": 320,
    "index": "A",
    "name": "Magic Numbers",
    "rating": 900,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "136/B",
    "contestId": 136,
    "index": "B",
    "name": "Ternary Logic",
    "rating": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "662/E",
    "contestId": 662,
    "index": "E",
    "name": "To Hack or not to Hack",
    "rating": 3100,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "231/D",
    "contestId": 231,
    "index": "D",
    "name": "Magic Box",
    "rating": 1600,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "id": "496/C",
    "contestId": 496,
    "index": "C",
    "name": "Removing Columns",
    "rating": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "408/A",
    "contestId": 408,
    "index": "A",
    "name": "Line to Cashier",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "534/E",
    "contestId": 534,
    "index": "E",
    "name": "Berland Local Positioning System",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "id": "1296/A",
    "contestId": 1296,
    "index": "A",
    "name": "Array with Odd Sum",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "774/I",
    "contestId": 774,
    "index": "I",
    "name": "Composing Of String",
    "rating": 2300,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "id": "375/C",
    "contestId": 375,
    "index": "C",
    "name": "Circling Round Treasures",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "shortest paths"
    ]
  },
  {
    "id": "1700/E",
    "contestId": 1700,
    "index": "E",
    "name": "Serega the Pirate",
    "rating": 2600,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "1823/A",
    "contestId": 1823,
    "index": "A",
    "name": "A-characteristic",
    "rating": 800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1424/G",
    "contestId": 1424,
    "index": "G",
    "name": "Years",
    "rating": 1300,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1634/C",
    "contestId": 1634,
    "index": "C",
    "name": "OKEA",
    "rating": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "868/E",
    "contestId": 868,
    "index": "E",
    "name": "Policeman and a Tree",
    "rating": 2700,
    "tags": [
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "922/F",
    "contestId": 922,
    "index": "F",
    "name": "Divisibility",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1091/A",
    "contestId": 1091,
    "index": "A",
    "name": "New Year and the Christmas Ornament",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1904/B",
    "contestId": 1904,
    "index": "B",
    "name": "Collecting Game",
    "rating": 1100,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "886/F",
    "contestId": 886,
    "index": "F",
    "name": "Symmetric Projections",
    "rating": 2900,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "389/A",
    "contestId": 389,
    "index": "A",
    "name": "Fox and Number Game",
    "rating": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1787/B",
    "contestId": 1787,
    "index": "B",
    "name": "Number Factorization",
    "rating": 1100,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1790/B",
    "contestId": 1790,
    "index": "B",
    "name": "Taisia and Dice",
    "rating": 800,
    "tags": [
      "greedy",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1461/E",
    "contestId": 1461,
    "index": "E",
    "name": "Water Level",
    "rating": 2200,
    "tags": [
      "brute force",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "466/A",
    "contestId": 466,
    "index": "A",
    "name": "Cheap Travel",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1148/C",
    "contestId": 1148,
    "index": "C",
    "name": "Crazy Diamond",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "616/C",
    "contestId": 616,
    "index": "C",
    "name": "The Labyrinth",
    "rating": 1600,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "id": "1236/C",
    "contestId": 1236,
    "index": "C",
    "name": "Labs",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "177/E1",
    "contestId": 177,
    "index": "E1",
    "name": "Space Voyage",
    "rating": 1700,
    "tags": [
      "binary search"
    ]
  },
  {
    "id": "627/D",
    "contestId": 627,
    "index": "D",
    "name": "Preorder Test",
    "rating": 2600,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "40/E",
    "contestId": 40,
    "index": "E",
    "name": "Number Table",
    "rating": 2500,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "id": "1936/B",
    "contestId": 1936,
    "index": "B",
    "name": "Pinball",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "634/A",
    "contestId": 634,
    "index": "A",
    "name": "Island Puzzle",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "492/C",
    "contestId": 492,
    "index": "C",
    "name": "Vanya and Exams",
    "rating": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "656/D",
    "contestId": 656,
    "index": "D",
    "name": "Rosetta Problem",
    "rating": 2100,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "101/B",
    "contestId": 101,
    "index": "B",
    "name": "Buses",
    "rating": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1129/C",
    "contestId": 1129,
    "index": "C",
    "name": "Morse Code",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing",
      "sortings",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1234/C",
    "contestId": 1234,
    "index": "C",
    "name": "Pipes",
    "rating": 1500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1760/G",
    "contestId": 1760,
    "index": "G",
    "name": "SlavicG's Favorite Problem",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "13/E",
    "contestId": 13,
    "index": "E",
    "name": "Holes",
    "rating": 2700,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "id": "99/A",
    "contestId": 99,
    "index": "A",
    "name": "Help Far Away Kingdom",
    "rating": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "847/H",
    "contestId": 847,
    "index": "H",
    "name": "Load Testing",
    "rating": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1660/D",
    "contestId": 1660,
    "index": "D",
    "name": "Maximum Product Strikes Back",
    "rating": 1600,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1562/D1",
    "contestId": 1562,
    "index": "D1",
    "name": "Two Hundred Twenty One (easy version)",
    "rating": 1700,
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "id": "242/D",
    "contestId": 242,
    "index": "D",
    "name": "Dispute",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "364/C",
    "contestId": 364,
    "index": "C",
    "name": "Beautiful Set",
    "rating": 2300,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "id": "1208/E",
    "contestId": 1208,
    "index": "E",
    "name": "Let Them Slide",
    "rating": 2200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1610/A",
    "contestId": 1610,
    "index": "A",
    "name": "Anti Light's Cell Guessing",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "134/C",
    "contestId": 134,
    "index": "C",
    "name": "Swaps",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1401/D",
    "contestId": 1401,
    "index": "D",
    "name": "Maximum Distributed Tree",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "38/G",
    "contestId": 38,
    "index": "G",
    "name": "Queue",
    "rating": 2300,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1355/E",
    "contestId": 1355,
    "index": "E",
    "name": "Restorer Distance",
    "rating": 2100,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings",
      "ternary search"
    ]
  },
  {
    "id": "792/D",
    "contestId": 792,
    "index": "D",
    "name": "Paths in a Complete Binary Tree",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "trees"
    ]
  },
  {
    "id": "616/F",
    "contestId": 616,
    "index": "F",
    "name": "Expensive Strings",
    "rating": 2700,
    "tags": [
      "data structures",
      "sortings",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "834/B",
    "contestId": 834,
    "index": "B",
    "name": "The Festive Evening",
    "rating": 1100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1508/C",
    "contestId": 1508,
    "index": "C",
    "name": "Complete the MST",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1146/D",
    "contestId": 1146,
    "index": "D",
    "name": "Frog Jumping",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "math",
      "number theory"
    ]
  },
  {
    "id": "142/B",
    "contestId": 142,
    "index": "B",
    "name": "Help General",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "707/A",
    "contestId": 707,
    "index": "A",
    "name": "Brain's Photos",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1725/H",
    "contestId": 1725,
    "index": "H",
    "name": "Hot Black Hot White",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1056/E",
    "contestId": 1056,
    "index": "E",
    "name": "Check Transcription",
    "rating": 2100,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1348/D",
    "contestId": 1348,
    "index": "D",
    "name": "Phoenix and Science",
    "rating": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "16/D",
    "contestId": 16,
    "index": "D",
    "name": "Logging",
    "rating": 1900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "999/F",
    "contestId": 999,
    "index": "F",
    "name": "Cards and Joy",
    "rating": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "835/F",
    "contestId": 835,
    "index": "F",
    "name": "Roads in the Kingdom",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "479/C",
    "contestId": 479,
    "index": "C",
    "name": "Exams",
    "rating": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1943/C",
    "contestId": 1943,
    "index": "C",
    "name": "Tree Compass",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "679/C",
    "contestId": 679,
    "index": "C",
    "name": "Bear and Square Grid",
    "rating": 2400,
    "tags": [
      "dfs and similar",
      "dsu",
      "implementation"
    ]
  },
  {
    "id": "621/A",
    "contestId": 621,
    "index": "A",
    "name": "Wet Shark and Odd and Even",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1391/A",
    "contestId": 1391,
    "index": "A",
    "name": "Suborrays",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "135/D",
    "contestId": 135,
    "index": "D",
    "name": "Cycle",
    "rating": 2500,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "id": "1886/A",
    "contestId": 1886,
    "index": "A",
    "name": "Sum of Three",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1703/F",
    "contestId": 1703,
    "index": "F",
    "name": "Yet Another Problem About Pairs Satisfying an Inequality",
    "rating": 1300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1272/B",
    "contestId": 1272,
    "index": "B",
    "name": "Snow Walking Robot",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1006/A",
    "contestId": 1006,
    "index": "A",
    "name": "Adjacent Replacements",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "959/F",
    "contestId": 959,
    "index": "F",
    "name": "Mahmoud and Ehab and yet another xor task",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "id": "1149/E",
    "contestId": 1149,
    "index": "E",
    "name": "Election Promises",
    "rating": 3200,
    "tags": [
      "games",
      "graphs"
    ]
  },
  {
    "id": "263/D",
    "contestId": 263,
    "index": "D",
    "name": "Cycle in Graph",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "773/D",
    "contestId": 773,
    "index": "D",
    "name": "Perishable Roads",
    "rating": 2700,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1619/E",
    "contestId": 1619,
    "index": "E",
    "name": "MEX and Increments",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1032/F",
    "contestId": 1032,
    "index": "F",
    "name": "Vasya and Maximum Matching",
    "rating": 2400,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "1840/D",
    "contestId": 1840,
    "index": "D",
    "name": "Wooden Toy Festival",
    "rating": 1400,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1593/B",
    "contestId": 1593,
    "index": "B",
    "name": "Make it Divisible by 25",
    "rating": 900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "math",
      "math"
    ]
  },
  {
    "id": "1420/D",
    "contestId": 1420,
    "index": "D",
    "name": "Rescue Nibel!",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "499/B",
    "contestId": 499,
    "index": "B",
    "name": "Lecture",
    "rating": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "484/A",
    "contestId": 484,
    "index": "A",
    "name": "Bits",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "id": "804/C",
    "contestId": 804,
    "index": "C",
    "name": "Ice cream coloring",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "id": "1692/F",
    "contestId": 1692,
    "index": "F",
    "name": "3SUM",
    "rating": 1300,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1620/D",
    "contestId": 1620,
    "index": "D",
    "name": "Exact Change",
    "rating": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "620/B",
    "contestId": 620,
    "index": "B",
    "name": "Grandfather Dovlet’s calculator",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1864/C",
    "contestId": 1864,
    "index": "C",
    "name": "Divisor Chain",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1702/B",
    "contestId": 1702,
    "index": "B",
    "name": "Polycarp Writes a String from Memory",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1206/A",
    "contestId": 1206,
    "index": "A",
    "name": "Choose Two Numbers",
    "rating": 800,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "id": "1758/B",
    "contestId": 1758,
    "index": "B",
    "name": "XOR = Average",
    "rating": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "418/E",
    "contestId": 418,
    "index": "E",
    "name": "Tricky Password",
    "rating": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1833/C",
    "contestId": 1833,
    "index": "C",
    "name": "Vlad Building Beautiful Array",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "859/C",
    "contestId": 859,
    "index": "C",
    "name": "Pie Rules",
    "rating": 1500,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "id": "626/F",
    "contestId": 626,
    "index": "F",
    "name": "Group Projects",
    "rating": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1709/C",
    "contestId": 1709,
    "index": "C",
    "name": "Recover an RBS",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "254/A",
    "contestId": 254,
    "index": "A",
    "name": "Cards with Numbers",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "1872/E",
    "contestId": 1872,
    "index": "E",
    "name": "Data Structures Fan",
    "rating": 1500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1743/E",
    "contestId": 1743,
    "index": "E",
    "name": "FTL",
    "rating": 2400,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "954/A",
    "contestId": 954,
    "index": "A",
    "name": "Diagonal Walking",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1858/A",
    "contestId": 1858,
    "index": "A",
    "name": "Buttons",
    "rating": 800,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1719/A",
    "contestId": 1719,
    "index": "A",
    "name": "Chip Game",
    "rating": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "121/A",
    "contestId": 121,
    "index": "A",
    "name": "Lucky Sum",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "425/D",
    "contestId": 425,
    "index": "D",
    "name": "Sereja and Squares",
    "rating": 2300,
    "tags": [
      "binary search",
      "data structures",
      "hashing"
    ]
  },
  {
    "id": "892/A",
    "contestId": 892,
    "index": "A",
    "name": "Greed",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1200/F",
    "contestId": 1200,
    "index": "F",
    "name": "Graph Traveler",
    "rating": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "431/E",
    "contestId": 431,
    "index": "E",
    "name": "Chemistry Experiment",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "ternary search"
    ]
  },
  {
    "id": "1488/F",
    "contestId": 1488,
    "index": "F",
    "name": "Dogecoin",
    "rating": 2300,
    "tags": [
      "*special",
      "*special",
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1932/D",
    "contestId": 1932,
    "index": "D",
    "name": "Card Game",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "42/C",
    "contestId": 42,
    "index": "C",
    "name": "Safe cracking",
    "rating": 2200,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "722/F",
    "contestId": 722,
    "index": "F",
    "name": "Cyclic Cipher",
    "rating": 2800,
    "tags": [
      "chinese remainder theorem",
      "data structures",
      "implementation",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1833/D",
    "contestId": 1833,
    "index": "D",
    "name": "Flipper",
    "rating": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "937/B",
    "contestId": 937,
    "index": "B",
    "name": "Vile Grasshoppers",
    "rating": 1400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "599/D",
    "contestId": 599,
    "index": "D",
    "name": "Spongebob and Squares",
    "rating": 1900,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "169/B",
    "contestId": 169,
    "index": "B",
    "name": "Replacing Digits",
    "rating": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1455/E",
    "contestId": 1455,
    "index": "E",
    "name": "Four Points",
    "rating": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "flows",
      "geometry",
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "408/B",
    "contestId": 408,
    "index": "B",
    "name": "Garland",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "609/E",
    "contestId": 609,
    "index": "E",
    "name": "Minimum spanning tree for each edge",
    "rating": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "536/D",
    "contestId": 536,
    "index": "D",
    "name": "Tavas in Kansas",
    "rating": 2900,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "id": "1016/E",
    "contestId": 1016,
    "index": "E",
    "name": "Rest In The Shades",
    "rating": 2400,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "id": "377/A",
    "contestId": 377,
    "index": "A",
    "name": "Maze",
    "rating": 1600,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "id": "805/A",
    "contestId": 805,
    "index": "A",
    "name": "Fake NP",
    "rating": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1151/F",
    "contestId": 1151,
    "index": "F",
    "name": "Sonya and Informatics",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "matrices",
      "probabilities"
    ]
  },
  {
    "id": "1398/C",
    "contestId": 1398,
    "index": "C",
    "name": "Good Subarrays",
    "rating": 1600,
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "id": "1230/A",
    "contestId": 1230,
    "index": "A",
    "name": "Dawid and Bags of Candies",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1287/A",
    "contestId": 1287,
    "index": "A",
    "name": "Angry Students",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1916/F",
    "contestId": 1916,
    "index": "F",
    "name": "Group Division",
    "rating": 2900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1237/E",
    "contestId": 1237,
    "index": "E",
    "name": "Balanced Binary Search Trees",
    "rating": 2400,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1137/B",
    "contestId": 1137,
    "index": "B",
    "name": "Camp Schedule",
    "rating": 1600,
    "tags": [
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1772/B",
    "contestId": 1772,
    "index": "B",
    "name": "Matrix Rotation",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "946/G",
    "contestId": 946,
    "index": "G",
    "name": "Almost Increasing Array",
    "rating": 2500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1111/D",
    "contestId": 1111,
    "index": "D",
    "name": "Destroy the Colony",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1027/B",
    "contestId": 1027,
    "index": "B",
    "name": "Numbers on the Chessboard",
    "rating": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "171/H",
    "contestId": 171,
    "index": "H",
    "name": "A polyline",
    "rating": 1700,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1146/B",
    "contestId": 1146,
    "index": "B",
    "name": "Hate \"A\"",
    "rating": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1941/G",
    "contestId": 1941,
    "index": "G",
    "name": "Rudolf and Subway",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1381/A1",
    "contestId": 1381,
    "index": "A1",
    "name": "Prefix Flip (Easy Version)",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "strings"
    ]
  },
  {
    "id": "87/E",
    "contestId": 87,
    "index": "E",
    "name": "Mogohu-Rea Idol",
    "rating": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1616/E",
    "contestId": 1616,
    "index": "E",
    "name": "Lexicographically Small Enough",
    "rating": 2200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "182/C",
    "contestId": 182,
    "index": "C",
    "name": "Optimal Sum",
    "rating": 2000,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1840/C",
    "contestId": 1840,
    "index": "C",
    "name": "Ski Resort",
    "rating": 1000,
    "tags": [
      "combinatorics",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1838/A",
    "contestId": 1838,
    "index": "A",
    "name": "Blackboard List",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1720/C",
    "contestId": 1720,
    "index": "C",
    "name": "Corners",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1423/L",
    "contestId": 1423,
    "index": "L",
    "name": "Light switches",
    "rating": 2600,
    "tags": [
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1775/D",
    "contestId": 1775,
    "index": "D",
    "name": "Friendly Spiders",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "id": "1098/A",
    "contestId": 1098,
    "index": "A",
    "name": "Sum in the tree",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1772/F",
    "contestId": 1772,
    "index": "F",
    "name": "Copy of a Copy of a Copy",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "898/F",
    "contestId": 898,
    "index": "F",
    "name": "Restoring the Expression",
    "rating": 2300,
    "tags": [
      "brute force",
      "hashing",
      "math"
    ]
  },
  {
    "id": "670/C",
    "contestId": 670,
    "index": "C",
    "name": "Cinema",
    "rating": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "142/D",
    "contestId": 142,
    "index": "D",
    "name": "Help Shrek and Donkey 2",
    "rating": 2600,
    "tags": [
      "games"
    ]
  },
  {
    "id": "748/C",
    "contestId": 748,
    "index": "C",
    "name": "Santa Claus and Robot",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1238/G",
    "contestId": 1238,
    "index": "G",
    "name": "Adilbek and the Watering System",
    "rating": 2700,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1835/E",
    "contestId": 1835,
    "index": "E",
    "name": "Old Mobile",
    "rating": 3500,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "1555/D",
    "contestId": 1555,
    "index": "D",
    "name": "Say No to Palindromes",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "strings"
    ]
  },
  {
    "id": "1886/E",
    "contestId": 1886,
    "index": "E",
    "name": "I Wanna be the Team Leader",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1860/E",
    "contestId": 1860,
    "index": "E",
    "name": "Fast Travel Text Editor",
    "rating": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1699/D",
    "contestId": 1699,
    "index": "D",
    "name": "Almost Triple Deletions",
    "rating": 2300,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "991/D",
    "contestId": 991,
    "index": "D",
    "name": "Bishwock",
    "rating": 1500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1951/F",
    "contestId": 1951,
    "index": "F",
    "name": "Inversion Composition",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1384/B1",
    "contestId": 1384,
    "index": "B1",
    "name": "Koa and the Beach (Easy Version)",
    "rating": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "653/B",
    "contestId": 653,
    "index": "B",
    "name": "Bear and Compressing",
    "rating": 1300,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "strings"
    ]
  },
  {
    "id": "802/A",
    "contestId": 802,
    "index": "A",
    "name": "Heidi and Library (easy)",
    "rating": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1147/D",
    "contestId": 1147,
    "index": "D",
    "name": "Palindrome XOR",
    "rating": 2400,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "732/B",
    "contestId": 732,
    "index": "B",
    "name": "Cormen — The Best Friend Of a Man",
    "rating": 1000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "424/C",
    "contestId": 424,
    "index": "C",
    "name": "Magic Formulas",
    "rating": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1189/C",
    "contestId": 1189,
    "index": "C",
    "name": "Candies!",
    "rating": 1400,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1149/B",
    "contestId": 1149,
    "index": "B",
    "name": "Three Religions",
    "rating": 2200,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "382/B",
    "contestId": 382,
    "index": "B",
    "name": "Number Busters",
    "rating": 2000,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "598/D",
    "contestId": 598,
    "index": "D",
    "name": "Igor In the Museum",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1420/C2",
    "contestId": 1420,
    "index": "C2",
    "name": "Pokémon Army (hard version)",
    "rating": 2100,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1599/F",
    "contestId": 1599,
    "index": "F",
    "name": "Mars",
    "rating": 2700,
    "tags": [
      "hashing"
    ]
  },
  {
    "id": "1105/D",
    "contestId": 1105,
    "index": "D",
    "name": "Kilani and the Game",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "922/E",
    "contestId": 922,
    "index": "E",
    "name": "Birds",
    "rating": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "870/C",
    "contestId": 870,
    "index": "C",
    "name": "Maximum splitting",
    "rating": 1300,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1056/A",
    "contestId": 1056,
    "index": "A",
    "name": "Determine Line",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "689/C",
    "contestId": 689,
    "index": "C",
    "name": "Mike and Chocolate Thieves",
    "rating": 1700,
    "tags": [
      "binary search",
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1625/C",
    "contestId": 1625,
    "index": "C",
    "name": "Road Optimization",
    "rating": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "58/E",
    "contestId": 58,
    "index": "E",
    "name": "Expression",
    "rating": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1579/G",
    "contestId": 1579,
    "index": "G",
    "name": "Minimal Coverage",
    "rating": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "140/E",
    "contestId": 140,
    "index": "E",
    "name": "New Year Garland",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "573/A",
    "contestId": 573,
    "index": "A",
    "name": "Bear and Poker",
    "rating": 1300,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1582/G",
    "contestId": 1582,
    "index": "G",
    "name": "Kuzya and Homework",
    "rating": 2600,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "id": "1281/A",
    "contestId": 1281,
    "index": "A",
    "name": "Suffix Three",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "761/A",
    "contestId": 761,
    "index": "A",
    "name": "Dasha and Stairs",
    "rating": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1213/D1",
    "contestId": 1213,
    "index": "D1",
    "name": "Equalizing by Division (easy version)",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "837/B",
    "contestId": 837,
    "index": "B",
    "name": "Flag of Berland",
    "rating": 1600,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "2/A",
    "contestId": 2,
    "index": "A",
    "name": "Winner",
    "rating": 1500,
    "tags": [
      "hashing",
      "implementation"
    ]
  },
  {
    "id": "1082/E",
    "contestId": 1082,
    "index": "E",
    "name": "Increasing Frequency",
    "rating": 2000,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "722/E",
    "contestId": 722,
    "index": "E",
    "name": "Research Rover",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "853/D",
    "contestId": 853,
    "index": "D",
    "name": "Michael and Charging Stations",
    "rating": 2400,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1982/D",
    "contestId": 1982,
    "index": "D",
    "name": "Beauty of the mountains",
    "rating": 1700,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "896/C",
    "contestId": 896,
    "index": "C",
    "name": "Willem, Chtholly and Seniorious",
    "rating": 2600,
    "tags": [
      "data structures",
      "probabilities"
    ]
  },
  {
    "id": "1151/A",
    "contestId": 1151,
    "index": "A",
    "name": "Maxim and Biology",
    "rating": 1000,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "id": "1833/B",
    "contestId": 1833,
    "index": "B",
    "name": "Restore the Weather",
    "rating": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1426/F",
    "contestId": 1426,
    "index": "F",
    "name": "Number of Subsequences",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "strings"
    ]
  },
  {
    "id": "1725/J",
    "contestId": 1725,
    "index": "J",
    "name": "Journey",
    "rating": 2500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "1300/A",
    "contestId": 1300,
    "index": "A",
    "name": "Non-zero",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1154/C",
    "contestId": 1154,
    "index": "C",
    "name": "Gourmet Cat",
    "rating": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "79/A",
    "contestId": 79,
    "index": "A",
    "name": "Bus Game",
    "rating": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1768/E",
    "contestId": 1768,
    "index": "E",
    "name": "Partial Sorting",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1991/D",
    "contestId": 1991,
    "index": "D",
    "name": "Prime XOR Coloring",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "graphs",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "683/A",
    "contestId": 683,
    "index": "A",
    "name": "The Check of the Point",
    "rating": 1200,
    "tags": [
      "*special",
      "geometry"
    ]
  },
  {
    "id": "334/A",
    "contestId": 334,
    "index": "A",
    "name": "Candy Bags",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "353/A",
    "contestId": 353,
    "index": "A",
    "name": "Domino",
    "rating": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "599/A",
    "contestId": 599,
    "index": "A",
    "name": "Patrick and Shopping",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "932/D",
    "contestId": 932,
    "index": "D",
    "name": "Tree",
    "rating": 2200,
    "tags": [
      "binary search",
      "dp",
      "trees"
    ]
  },
  {
    "id": "547/C",
    "contestId": 547,
    "index": "C",
    "name": "Mike and Foam",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "757/D",
    "contestId": 757,
    "index": "D",
    "name": "Felicity's Big Secret Revealed",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "198/E",
    "contestId": 198,
    "index": "E",
    "name": "Gripping Story",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "378/B",
    "contestId": 378,
    "index": "B",
    "name": "Semifinals",
    "rating": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "301/E",
    "contestId": 301,
    "index": "E",
    "name": "Yaroslav and Arrangements",
    "rating": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1903/B",
    "contestId": 1903,
    "index": "B",
    "name": "StORage room",
    "rating": 1200,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "915/C",
    "contestId": 915,
    "index": "C",
    "name": "Permute Digits",
    "rating": 1700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1461/B",
    "contestId": 1461,
    "index": "B",
    "name": "Find the Spruce",
    "rating": 1400,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "544/B",
    "contestId": 544,
    "index": "B",
    "name": "Sea and Islands",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1928/A",
    "contestId": 1928,
    "index": "A",
    "name": "Rectangle Cutting",
    "rating": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1112/F",
    "contestId": 1112,
    "index": "F",
    "name": "Power Tree",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "142/C",
    "contestId": 142,
    "index": "C",
    "name": "Help Caretaker",
    "rating": 2300,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "372/B",
    "contestId": 372,
    "index": "B",
    "name": "Counting Rectangles is Fun",
    "rating": 1900,
    "tags": [
      "brute force",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "1179/D",
    "contestId": 1179,
    "index": "D",
    "name": "Fedor Runs for President",
    "rating": 2700,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "id": "204/A",
    "contestId": 204,
    "index": "A",
    "name": "Little Elephant and Interval",
    "rating": 1500,
    "tags": [
      "binary search",
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "960/G",
    "contestId": 960,
    "index": "G",
    "name": "Bandit Blues",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "1107/B",
    "contestId": 1107,
    "index": "B",
    "name": "Digital root",
    "rating": 1000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "290/D",
    "contestId": 290,
    "index": "D",
    "name": "Orange",
    "rating": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "568/C",
    "contestId": 568,
    "index": "C",
    "name": "New Language",
    "rating": 2600,
    "tags": [
      "2-sat",
      "greedy"
    ]
  },
  {
    "id": "666/A",
    "contestId": 666,
    "index": "A",
    "name": "Reberland Linguistics",
    "rating": 1800,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "344/A",
    "contestId": 344,
    "index": "A",
    "name": "Magnets",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "474/D",
    "contestId": 474,
    "index": "D",
    "name": "Flowers",
    "rating": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1996/C",
    "contestId": 1996,
    "index": "C",
    "name": "Sort",
    "rating": 1200,
    "tags": [
      "dp",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "260/C",
    "contestId": 260,
    "index": "C",
    "name": "Balls and Boxes",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "355/B",
    "contestId": 355,
    "index": "B",
    "name": "Vasya and Public Transport",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1203/F1",
    "contestId": 1203,
    "index": "F1",
    "name": "Complete the Projects (easy version)",
    "rating": 2100,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1694/A",
    "contestId": 1694,
    "index": "A",
    "name": "Creep",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1682/C",
    "contestId": 1682,
    "index": "C",
    "name": "LIS or Reverse LIS?",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1977/A",
    "contestId": 1977,
    "index": "A",
    "name": "Little Nikita",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1670/D",
    "contestId": 1670,
    "index": "D",
    "name": "Very Suspicious",
    "rating": 1700,
    "tags": [
      "binary search",
      "brute force",
      "geometry",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "625/D",
    "contestId": 625,
    "index": "D",
    "name": "Finals in arithmetic",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "562/D",
    "contestId": 562,
    "index": "D",
    "name": "Restructuring Company",
    "rating": 1900,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "id": "1415/F",
    "contestId": 1415,
    "index": "F",
    "name": "Cakes for Clones",
    "rating": 2900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1870/C",
    "contestId": 1870,
    "index": "C",
    "name": "Colorful Table",
    "rating": 1300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1190/B",
    "contestId": 1190,
    "index": "B",
    "name": "Tokitsukaze, CSL and Stone Game",
    "rating": 1800,
    "tags": [
      "games"
    ]
  },
  {
    "id": "785/D",
    "contestId": 785,
    "index": "D",
    "name": "Anton and School - 2",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1760/B",
    "contestId": 1760,
    "index": "B",
    "name": "Atilla's Favorite Problem",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1184/B2",
    "contestId": 1184,
    "index": "B2",
    "name": "The Doctor Meets Vader (Medium)",
    "rating": 2200,
    "tags": [
      "flows",
      "graph matchings",
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "1210/B",
    "contestId": 1210,
    "index": "B",
    "name": "Marcin and Training Camp",
    "rating": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "68/C",
    "contestId": 68,
    "index": "C",
    "name": "Synchrophasotron",
    "rating": 2200,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "740/A",
    "contestId": 740,
    "index": "A",
    "name": "Alyona and copybooks",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "898/C",
    "contestId": 898,
    "index": "C",
    "name": "Phone Numbers",
    "rating": 1400,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1450/C2",
    "contestId": 1450,
    "index": "C2",
    "name": "Errich-Tac-Toe (Hard Version)",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1265/A",
    "contestId": 1265,
    "index": "A",
    "name": "Beautiful String",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1394/C",
    "contestId": 1394,
    "index": "C",
    "name": "Boboniu and String",
    "rating": 2600,
    "tags": [
      "binary search",
      "geometry",
      "ternary search"
    ]
  },
  {
    "id": "20/C",
    "contestId": 20,
    "index": "C",
    "name": "Dijkstra?",
    "rating": 1900,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1614/E",
    "contestId": 1614,
    "index": "E",
    "name": "Divan and a Cottage",
    "rating": 2600,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "28/C",
    "contestId": 28,
    "index": "C",
    "name": "Bath Queue",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "662/A",
    "contestId": 662,
    "index": "A",
    "name": "Gambling Nim",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "math",
      "matrices",
      "probabilities"
    ]
  },
  {
    "id": "1307/C",
    "contestId": 1307,
    "index": "C",
    "name": "Cow and Message",
    "rating": 1500,
    "tags": [
      "brute force",
      "dp",
      "math",
      "strings"
    ]
  },
  {
    "id": "915/B",
    "contestId": 915,
    "index": "B",
    "name": "Browser",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1198/A",
    "contestId": 1198,
    "index": "A",
    "name": "MP3",
    "rating": 1600,
    "tags": [
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1512/D",
    "contestId": 1512,
    "index": "D",
    "name": "Corrupted Array",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "276/A",
    "contestId": 276,
    "index": "A",
    "name": "Lunch Rush",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "121/B",
    "contestId": 121,
    "index": "B",
    "name": "Lucky Transformation",
    "rating": 1500,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "1216/E2",
    "contestId": 1216,
    "index": "E2",
    "name": "Numerical Sequence (hard version)",
    "rating": 2200,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "284/B",
    "contestId": 284,
    "index": "B",
    "name": "Cows and Poker Game",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "68/A",
    "contestId": 68,
    "index": "A",
    "name": "Irrational problem",
    "rating": 1100,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "80/A",
    "contestId": 80,
    "index": "A",
    "name": "Panoramix's Prediction",
    "rating": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "253/B",
    "contestId": 253,
    "index": "B",
    "name": "Physics Practical",
    "rating": 1400,
    "tags": [
      "binary search",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "152/C",
    "contestId": 152,
    "index": "C",
    "name": "Pocket Book",
    "rating": 1400,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "id": "1950/B",
    "contestId": 1950,
    "index": "B",
    "name": "Upscaling",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1550/A",
    "contestId": 1550,
    "index": "A",
    "name": "Find The Array",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "707/D",
    "contestId": 707,
    "index": "D",
    "name": "Persistent Bookcase",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "id": "1646/C",
    "contestId": 1646,
    "index": "C",
    "name": "Factorials and Powers of Two",
    "rating": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "id": "1044/E",
    "contestId": 1044,
    "index": "E",
    "name": "Grid Sort",
    "rating": 3100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1775/E",
    "contestId": 1775,
    "index": "E",
    "name": "The Human Equation",
    "rating": 2100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "204/C",
    "contestId": 204,
    "index": "C",
    "name": "Little Elephant and Furik and Rubik",
    "rating": 2000,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "id": "699/A",
    "contestId": 699,
    "index": "A",
    "name": "Launch of Collider",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1463/A",
    "contestId": 1463,
    "index": "A",
    "name": "Dungeon",
    "rating": 1100,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "1344/A",
    "contestId": 1344,
    "index": "A",
    "name": "Hilbert's Hotel",
    "rating": 1600,
    "tags": [
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "847/C",
    "contestId": 847,
    "index": "C",
    "name": "Sum of Nestings",
    "rating": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1227/D1",
    "contestId": 1227,
    "index": "D1",
    "name": "Optimal Subsequences (Easy Version)",
    "rating": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1632/A",
    "contestId": 1632,
    "index": "A",
    "name": "ABC",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "702/E",
    "contestId": 702,
    "index": "E",
    "name": "Analysis of Pathes in Functional Graph",
    "rating": 2100,
    "tags": [
      "data structures",
      "graphs"
    ]
  },
  {
    "id": "571/B",
    "contestId": 571,
    "index": "B",
    "name": "Minimization",
    "rating": 2000,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "912/C",
    "contestId": 912,
    "index": "C",
    "name": "Perun, Ult!",
    "rating": 2500,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1800/D",
    "contestId": 1800,
    "index": "D",
    "name": "Remove Two Letters",
    "rating": 1200,
    "tags": [
      "data structures",
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1914/E1",
    "contestId": 1914,
    "index": "E1",
    "name": "Game with Marbles (Easy Version)",
    "rating": 1400,
    "tags": [
      "brute force",
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1088/C",
    "contestId": 1088,
    "index": "C",
    "name": "Ehab and a 2-operation task",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1526/C2",
    "contestId": 1526,
    "index": "C2",
    "name": "Potions (Hard Version)",
    "rating": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1416/B",
    "contestId": 1416,
    "index": "B",
    "name": "Make Them Equal",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1807/A",
    "contestId": 1807,
    "index": "A",
    "name": "Plus or Minus",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "171/A",
    "contestId": 171,
    "index": "A",
    "name": "Mysterious numbers - 1",
    "rating": 1200,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "id": "1614/A",
    "contestId": 1614,
    "index": "A",
    "name": "Divan and a Store",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1945/A",
    "contestId": 1945,
    "index": "A",
    "name": "Setting up Camp",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1850/B",
    "contestId": 1850,
    "index": "B",
    "name": "Ten Words of Wisdom",
    "rating": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1267/G",
    "contestId": 1267,
    "index": "G",
    "name": "Game Relics",
    "rating": 3000,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1029/C",
    "contestId": 1029,
    "index": "C",
    "name": "Maximal Intersection",
    "rating": 1600,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1556/E",
    "contestId": 1556,
    "index": "E",
    "name": "Equilibrium",
    "rating": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1958/A",
    "contestId": 1958,
    "index": "A",
    "name": "1-3-5",
    "rating": 1100,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "id": "1834/C",
    "contestId": 1834,
    "index": "C",
    "name": "Game with Reversing",
    "rating": 1200,
    "tags": [
      "games",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "1970/B2",
    "contestId": 1970,
    "index": "B2",
    "name": "Exact Neighbours (Medium)",
    "rating": 2100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "435/B",
    "contestId": 435,
    "index": "B",
    "name": "Pasha Maximizes",
    "rating": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "122/A",
    "contestId": 122,
    "index": "A",
    "name": "Lucky Division",
    "rating": 1000,
    "tags": [
      "brute force",
      "number theory"
    ]
  },
  {
    "id": "1550/B",
    "contestId": 1550,
    "index": "B",
    "name": "Maximum Cost Deletion",
    "rating": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1575/C",
    "contestId": 1575,
    "index": "C",
    "name": "Cyclic Sum",
    "rating": 3000,
    "tags": [
      "data structures",
      "fft",
      "number theory"
    ]
  },
  {
    "id": "288/C",
    "contestId": 288,
    "index": "C",
    "name": "Polo the Penguin and XOR operation",
    "rating": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1609/B",
    "contestId": 1609,
    "index": "B",
    "name": "William the Vigilant",
    "rating": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1236/B",
    "contestId": 1236,
    "index": "B",
    "name": "Alice and the List of Presents",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1555/A",
    "contestId": 1555,
    "index": "A",
    "name": "PizzaForces",
    "rating": 900,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1770/B",
    "contestId": 1770,
    "index": "B",
    "name": "Koxia and Permutation",
    "rating": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1884/A",
    "contestId": 1884,
    "index": "A",
    "name": "Simple Design",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1061/B",
    "contestId": 1061,
    "index": "B",
    "name": "Views Matter",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1450/F",
    "contestId": 1450,
    "index": "F",
    "name": "The Struggling Contestant",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1777/F",
    "contestId": 1777,
    "index": "F",
    "name": "Comfortably Numb",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "strings",
      "trees"
    ]
  },
  {
    "id": "138/C",
    "contestId": 138,
    "index": "C",
    "name": "Mushroom Gnomes - 2",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "probabilities",
      "sortings"
    ]
  },
  {
    "id": "1437/B",
    "contestId": 1437,
    "index": "B",
    "name": "Reverse Binary Strings",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1043/C",
    "contestId": 1043,
    "index": "C",
    "name": "Smallest Word",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1815/E",
    "contestId": 1815,
    "index": "E",
    "name": "Bosco and Particle",
    "rating": 3100,
    "tags": [
      "dp",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "id": "1106/D",
    "contestId": 1106,
    "index": "D",
    "name": "Lunar New Year and a Wander",
    "rating": 1500,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "763/E",
    "contestId": 763,
    "index": "E",
    "name": "Timofey and our friends animals",
    "rating": 2900,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "id": "897/B",
    "contestId": 897,
    "index": "B",
    "name": "Chtholly's request",
    "rating": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1985/H2",
    "contestId": 1985,
    "index": "H2",
    "name": "Maximize the Largest Component (Hard Version)",
    "rating": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "implementation"
    ]
  },
  {
    "id": "404/E",
    "contestId": 404,
    "index": "E",
    "name": "Maze 1D",
    "rating": 2200,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1459/A",
    "contestId": 1459,
    "index": "A",
    "name": "Red-Blue Shuffle",
    "rating": 800,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "id": "435/D",
    "contestId": 435,
    "index": "D",
    "name": "Special Grid",
    "rating": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "225/B",
    "contestId": 225,
    "index": "B",
    "name": "Well-known Numbers",
    "rating": 1600,
    "tags": [
      "binary search",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "846/B",
    "contestId": 846,
    "index": "B",
    "name": "Math Show",
    "rating": 1800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1501/B",
    "contestId": 1501,
    "index": "B",
    "name": "Napoleon Cake",
    "rating": 900,
    "tags": [
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "746/E",
    "contestId": 746,
    "index": "E",
    "name": "Numbers Exchange",
    "rating": 1900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1972/A",
    "contestId": 1972,
    "index": "A",
    "name": "Contest Proposal",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1872/D",
    "contestId": 1872,
    "index": "D",
    "name": "Plus Minus Permutation",
    "rating": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "id": "193/A",
    "contestId": 193,
    "index": "A",
    "name": "Cutting Figure",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "500/D",
    "contestId": 500,
    "index": "D",
    "name": "New Year Santa Network",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1942/C2",
    "contestId": 1942,
    "index": "C2",
    "name": "Bessie's Birthday Cake (Hard Version)",
    "rating": 1700,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "id": "442/A",
    "contestId": 442,
    "index": "A",
    "name": "Borya and Hanabi",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1906/L",
    "contestId": 1906,
    "index": "L",
    "name": "Palindromic Parentheses",
    "rating": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1154/A",
    "contestId": 1154,
    "index": "A",
    "name": "Restoring Three Numbers",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1996/F",
    "contestId": 1996,
    "index": "F",
    "name": "Bomb",
    "rating": 1900,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1303/B",
    "contestId": 1303,
    "index": "B",
    "name": "National Project",
    "rating": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1571/H",
    "contestId": 1571,
    "index": "H",
    "name": "Laser Beams",
    "rating": 2900,
    "tags": [
      "*special",
      "geometry",
      "probabilities"
    ]
  },
  {
    "id": "507/B",
    "contestId": 507,
    "index": "B",
    "name": "Amr and Pins",
    "rating": 1400,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1991/F",
    "contestId": 1991,
    "index": "F",
    "name": "Triangle Formation",
    "rating": 2200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1346/H",
    "contestId": 1346,
    "index": "H",
    "name": "Game with Segments",
    "rating": 2700,
    "tags": [
      "*special",
      "data structures",
      "games"
    ]
  },
  {
    "id": "1044/A",
    "contestId": 1044,
    "index": "A",
    "name": "The Tower is Going Home",
    "rating": 1700,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "id": "1765/M",
    "contestId": 1765,
    "index": "M",
    "name": "Minimum LCM",
    "rating": 1000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1113/B",
    "contestId": 1113,
    "index": "B",
    "name": "Sasha and Magnetic Machines",
    "rating": 1300,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1990/C",
    "contestId": 1990,
    "index": "C",
    "name": "Mad MAD Sum",
    "rating": 1500,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "86/B",
    "contestId": 86,
    "index": "B",
    "name": "Tetris revisited",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "graph matchings",
      "greedy",
      "math"
    ]
  },
  {
    "id": "3/B",
    "contestId": 3,
    "index": "B",
    "name": "Lorry",
    "rating": 1900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "132/D",
    "contestId": 132,
    "index": "D",
    "name": "Constants in the language of Shakespeare",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1371/B",
    "contestId": 1371,
    "index": "B",
    "name": "Magical Calendar",
    "rating": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1799/C",
    "contestId": 1799,
    "index": "C",
    "name": "Double Lexicographically Minimum",
    "rating": 1700,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1285/B",
    "contestId": 1285,
    "index": "B",
    "name": "Just Eat It!",
    "rating": 1300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "450/A",
    "contestId": 450,
    "index": "A",
    "name": "Jzzhu and Children",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "369/D",
    "contestId": 369,
    "index": "D",
    "name": "Valera and Fools",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1243/A",
    "contestId": 1243,
    "index": "A",
    "name": "Maximum Square",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1704/H1",
    "contestId": 1704,
    "index": "H1",
    "name": "Game of AI (easy version)",
    "rating": 3200,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "1506/E",
    "contestId": 1506,
    "index": "E",
    "name": "Restoring the Permutation",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1765/B",
    "contestId": 1765,
    "index": "B",
    "name": "Broken Keyboard",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1132/F",
    "contestId": 1132,
    "index": "F",
    "name": "Clear the String",
    "rating": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1917/F",
    "contestId": 1917,
    "index": "F",
    "name": "Construct Tree",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1375/C",
    "contestId": 1375,
    "index": "C",
    "name": "Element Extermination",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "37/B",
    "contestId": 37,
    "index": "B",
    "name": "Computer Game",
    "rating": 1800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1809/C",
    "contestId": 1809,
    "index": "C",
    "name": "Sum on Subarrays",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "691/E",
    "contestId": 691,
    "index": "E",
    "name": "Xor-sequences",
    "rating": 1900,
    "tags": [
      "matrices"
    ]
  },
  {
    "id": "1742/A",
    "contestId": 1742,
    "index": "A",
    "name": "Sum",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1214/E",
    "contestId": 1214,
    "index": "E",
    "name": "Petya and Construction Set",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1184/D1",
    "contestId": 1184,
    "index": "D1",
    "name": "Parallel Universes (Easy)",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "603/E",
    "contestId": 603,
    "index": "E",
    "name": "Pastoral Oddities",
    "rating": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "math",
      "trees"
    ]
  },
  {
    "id": "1294/A",
    "contestId": 1294,
    "index": "A",
    "name": "Collecting Coins",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "409/I",
    "contestId": 409,
    "index": "I",
    "name": "Feed the Golorp",
    "rating": 2400,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "332/C",
    "contestId": 332,
    "index": "C",
    "name": "Students' Revenge",
    "rating": 2200,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1583/G",
    "contestId": 1583,
    "index": "G",
    "name": "Omkar and Time Travel",
    "rating": 3000,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "id": "1856/E2",
    "contestId": 1856,
    "index": "E2",
    "name": "PermuTree (hard version)",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp",
      "fft",
      "greedy",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "id": "1722/D",
    "contestId": 1722,
    "index": "D",
    "name": "Line",
    "rating": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1491/B",
    "contestId": 1491,
    "index": "B",
    "name": "Minimal Cost",
    "rating": 1200,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1945/B",
    "contestId": 1945,
    "index": "B",
    "name": "Fireworks",
    "rating": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1870/E",
    "contestId": 1870,
    "index": "E",
    "name": "Another MEX Problem",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "shortest paths"
    ]
  },
  {
    "id": "756/B",
    "contestId": 756,
    "index": "B",
    "name": "Travel Card",
    "rating": 1600,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "457/D",
    "contestId": 457,
    "index": "D",
    "name": "Bingo!",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1829/D",
    "contestId": 1829,
    "index": "D",
    "name": "Gold Rush",
    "rating": 1000,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1150/B",
    "contestId": 1150,
    "index": "B",
    "name": "Tiling Challenge",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1951/G",
    "contestId": 1951,
    "index": "G",
    "name": "Clacking Balls",
    "rating": 3100,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "138/A",
    "contestId": 138,
    "index": "A",
    "name": "Literature Lesson",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "16/B",
    "contestId": 16,
    "index": "B",
    "name": "Burglar and Matches",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1970/A1",
    "contestId": 1970,
    "index": "A1",
    "name": "Balanced Shuffle (Easy)",
    "rating": 1000,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1238/B",
    "contestId": 1238,
    "index": "B",
    "name": "Kill 'Em All",
    "rating": 1300,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1970/F2",
    "contestId": 1970,
    "index": "F2",
    "name": "Playing Quidditch (Medium)",
    "rating": 2300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1215/D",
    "contestId": 1215,
    "index": "D",
    "name": "Ticket Game",
    "rating": 1700,
    "tags": [
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1362/A",
    "contestId": 1362,
    "index": "A",
    "name": "Johnny and Ancient Computer",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1997/C",
    "contestId": 1997,
    "index": "C",
    "name": "Even Positions",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1508/B",
    "contestId": 1508,
    "index": "B",
    "name": "Almost Sorted",
    "rating": 1800,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "767/D",
    "contestId": 767,
    "index": "D",
    "name": "Cartons of milk",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1610/H",
    "contestId": 1610,
    "index": "H",
    "name": "Squid Game",
    "rating": 3100,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1271/E",
    "contestId": 1271,
    "index": "E",
    "name": "Common Number",
    "rating": 2100,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1257/A",
    "contestId": 1257,
    "index": "A",
    "name": "Two Rival Students",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1005/C",
    "contestId": 1005,
    "index": "C",
    "name": "Summarize to the Power of Two",
    "rating": 1300,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "527/D",
    "contestId": 527,
    "index": "D",
    "name": "Clique Problem",
    "rating": 1800,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "120/I",
    "contestId": 120,
    "index": "I",
    "name": "Luck is in Numbers",
    "rating": 2200,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "733/D",
    "contestId": 733,
    "index": "D",
    "name": "Kostya the Sculptor",
    "rating": 1600,
    "tags": [
      "data structures",
      "hashing"
    ]
  },
  {
    "id": "342/B",
    "contestId": 342,
    "index": "B",
    "name": "Xenia and Spies",
    "rating": 1500,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "107/E",
    "contestId": 107,
    "index": "E",
    "name": "Darts",
    "rating": 2700,
    "tags": [
      "geometry",
      "probabilities"
    ]
  },
  {
    "id": "1336/A",
    "contestId": 1336,
    "index": "A",
    "name": "Linova and Kingdom",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1827/B1",
    "contestId": 1827,
    "index": "B1",
    "name": "Range Sorting (Easy Version)",
    "rating": 2000,
    "tags": [
      "binary search",
      "dp",
      "dsu",
      "greedy",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "60/B",
    "contestId": 60,
    "index": "B",
    "name": "Serial Time!",
    "rating": 1400,
    "tags": [
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "id": "1743/A",
    "contestId": 1743,
    "index": "A",
    "name": "Password",
    "rating": 800,
    "tags": [
      "brute force",
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1212/F",
    "contestId": 1212,
    "index": "F",
    "name": "One-Based Arithmetic",
    "rating": 1800,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "id": "1903/A",
    "contestId": 1903,
    "index": "A",
    "name": "Halloumi Boxes",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "887/D",
    "contestId": 887,
    "index": "D",
    "name": "Ratings and Reality Shows",
    "rating": 2400,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "1428/G2",
    "contestId": 1428,
    "index": "G2",
    "name": "Lucky Numbers (Hard Version)",
    "rating": 3000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1380/E",
    "contestId": 1380,
    "index": "E",
    "name": "Merging Towers",
    "rating": 2300,
    "tags": [
      "data structures",
      "dsu",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "559/B",
    "contestId": 559,
    "index": "B",
    "name": "Equivalent Strings",
    "rating": 1700,
    "tags": [
      "divide and conquer",
      "hashing",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "339/E",
    "contestId": 339,
    "index": "E",
    "name": "Three Swaps",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "id": "1260/B",
    "contestId": 1260,
    "index": "B",
    "name": "Obtain Two Zeroes",
    "rating": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "1770/C",
    "contestId": 1770,
    "index": "C",
    "name": "Koxia and Number Theory",
    "rating": 1700,
    "tags": [
      "brute force",
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1303/C",
    "contestId": 1303,
    "index": "C",
    "name": "Perfect Keyboard",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1143/A",
    "contestId": 1143,
    "index": "A",
    "name": "The Doors",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "150/B",
    "contestId": 150,
    "index": "B",
    "name": "Quantity of Strings",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1157/A",
    "contestId": 1157,
    "index": "A",
    "name": "Reachable Numbers",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "338/E",
    "contestId": 338,
    "index": "E",
    "name": "Optimize!",
    "rating": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "729/F",
    "contestId": 729,
    "index": "F",
    "name": "Financiers Game",
    "rating": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "845/D",
    "contestId": 845,
    "index": "D",
    "name": "Driving Test",
    "rating": 1800,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "13/C",
    "contestId": 13,
    "index": "C",
    "name": "Sequence",
    "rating": 2200,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "id": "545/E",
    "contestId": 545,
    "index": "E",
    "name": "Paths and Trees",
    "rating": 2000,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "929/A",
    "contestId": 929,
    "index": "A",
    "name": "Прокат велосипедов",
    "rating": 1400,
    "tags": [
      "*special",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "17/A",
    "contestId": 17,
    "index": "A",
    "name": "Noldbach problem",
    "rating": 1000,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1213/E",
    "contestId": 1213,
    "index": "E",
    "name": "Two Small Strings",
    "rating": 1900,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "348/A",
    "contestId": 348,
    "index": "A",
    "name": "Mafia",
    "rating": 1600,
    "tags": [
      "binary search",
      "math",
      "sortings"
    ]
  },
  {
    "id": "478/A",
    "contestId": 478,
    "index": "A",
    "name": "Initial Bet",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "630/H",
    "contestId": 630,
    "index": "H",
    "name": "Benches",
    "rating": 1400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1095/C",
    "contestId": 1095,
    "index": "C",
    "name": "Powers Of Two",
    "rating": 1400,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "id": "1847/D",
    "contestId": 1847,
    "index": "D",
    "name": "Professor Higashikata",
    "rating": 1900,
    "tags": [
      "data structures",
      "dsu",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "432/B",
    "contestId": 432,
    "index": "B",
    "name": "Football Kit",
    "rating": 1200,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1762/C",
    "contestId": 1762,
    "index": "C",
    "name": "Binary Strings are Fun",
    "rating": 1400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1371/A",
    "contestId": 1371,
    "index": "A",
    "name": "Magical Sticks",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "87/B",
    "contestId": 87,
    "index": "B",
    "name": "Vasya and Types",
    "rating": 1800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1801/G",
    "contestId": 1801,
    "index": "G",
    "name": "A task for substrings",
    "rating": 3400,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1805/B",
    "contestId": 1805,
    "index": "B",
    "name": "The String Has a Target",
    "rating": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "818/E",
    "contestId": 818,
    "index": "E",
    "name": "Card Game Again",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1030/G",
    "contestId": 1030,
    "index": "G",
    "name": "Linear Congruential Generator",
    "rating": 2900,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "356/C",
    "contestId": 356,
    "index": "C",
    "name": "Compartments",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1684/B",
    "contestId": 1684,
    "index": "B",
    "name": "Z mod X = C",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "467/E",
    "contestId": 467,
    "index": "E",
    "name": "Alex and Complicated Task",
    "rating": 2300,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "703/E",
    "contestId": 703,
    "index": "E",
    "name": "Mishka and Divisors",
    "rating": 2600,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "id": "626/B",
    "contestId": 626,
    "index": "B",
    "name": "Cards",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "id": "1043/E",
    "contestId": 1043,
    "index": "E",
    "name": "Train Hard, Win Easy",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "725/C",
    "contestId": 725,
    "index": "C",
    "name": "Hidden Word",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1981/B",
    "contestId": 1981,
    "index": "B",
    "name": "Turtle and an Infinite Sequence",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "id": "1609/D",
    "contestId": 1609,
    "index": "D",
    "name": "Social Network",
    "rating": 1600,
    "tags": [
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "985/E",
    "contestId": 985,
    "index": "E",
    "name": "Pencils and Boxes",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1045/D",
    "contestId": 1045,
    "index": "D",
    "name": "Interstellar battle",
    "rating": 2200,
    "tags": [
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "659/D",
    "contestId": 659,
    "index": "D",
    "name": "Bicycle Race",
    "rating": 1500,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "485/B",
    "contestId": 485,
    "index": "B",
    "name": "Valuable Resources",
    "rating": 1300,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "491/B",
    "contestId": 491,
    "index": "B",
    "name": "New York Hotel",
    "rating": 2100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1468/F",
    "contestId": 1468,
    "index": "F",
    "name": "Full Turn",
    "rating": 1700,
    "tags": [
      "geometry",
      "hashing",
      "number theory"
    ]
  },
  {
    "id": "1208/B",
    "contestId": 1208,
    "index": "B",
    "name": "Uniqueness",
    "rating": 1500,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1084/C",
    "contestId": 1084,
    "index": "C",
    "name": "The Fair Nut and String",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1542/B",
    "contestId": 1542,
    "index": "B",
    "name": "Plus and Multiply",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "787/A",
    "contestId": 787,
    "index": "A",
    "name": "The Monster",
    "rating": 1200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1341/A",
    "contestId": 1341,
    "index": "A",
    "name": "Nastya and Rice",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1955/G",
    "contestId": 1955,
    "index": "G",
    "name": "GCD on a grid",
    "rating": 1900,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1559/D2",
    "contestId": 1559,
    "index": "D2",
    "name": "Mocha and Diana (Hard Version)",
    "rating": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "1987/G1",
    "contestId": 1987,
    "index": "G1",
    "name": "Spinning Round (Easy Version)",
    "rating": 2900,
    "tags": [
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1540/C1",
    "contestId": 1540,
    "index": "C1",
    "name": "Converging Array (Easy Version)",
    "rating": 2700,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1840/E",
    "contestId": 1840,
    "index": "E",
    "name": "Character Blocking",
    "rating": 1600,
    "tags": [
      "data structures",
      "hashing",
      "implementation"
    ]
  },
  {
    "id": "330/B",
    "contestId": 330,
    "index": "B",
    "name": "Road Construction",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "1453/E",
    "contestId": 1453,
    "index": "E",
    "name": "Dog Snacks",
    "rating": 2300,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1292/D",
    "contestId": 1292,
    "index": "D",
    "name": "Chaotic V.",
    "rating": 2700,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "750/D",
    "contestId": 750,
    "index": "D",
    "name": "New Year and Fireworks",
    "rating": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "467/C",
    "contestId": 467,
    "index": "C",
    "name": "George and Job",
    "rating": 1700,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1183/A",
    "contestId": 1183,
    "index": "A",
    "name": "Nearest Interesting Number",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "312/A",
    "contestId": 312,
    "index": "A",
    "name": "Whose sentence is it?",
    "rating": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1461/A",
    "contestId": 1461,
    "index": "A",
    "name": "String Generation",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "715/A",
    "contestId": 715,
    "index": "A",
    "name": "Plus and Square Root",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1985/G",
    "contestId": 1985,
    "index": "G",
    "name": "D-Function",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "430/A",
    "contestId": 430,
    "index": "A",
    "name": "Points and Segments (easy)",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "175/C",
    "contestId": 175,
    "index": "C",
    "name": "Geometry Horse",
    "rating": 1600,
    "tags": [
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1194/D",
    "contestId": 1194,
    "index": "D",
    "name": "1-2-K Game",
    "rating": 1700,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "1481/B",
    "contestId": 1481,
    "index": "B",
    "name": "New Colony",
    "rating": 1100,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "979/D",
    "contestId": 979,
    "index": "D",
    "name": "Kuro and GCD and XOR and SUM",
    "rating": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "math",
      "number theory",
      "strings",
      "trees"
    ]
  },
  {
    "id": "270/B",
    "contestId": 270,
    "index": "B",
    "name": "Multithreading",
    "rating": 1400,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "895/B",
    "contestId": 895,
    "index": "B",
    "name": "XK Segments",
    "rating": 1700,
    "tags": [
      "binary search",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1997/F",
    "contestId": 1997,
    "index": "F",
    "name": "Chips on a Line",
    "rating": 2700,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1000/C",
    "contestId": 1000,
    "index": "C",
    "name": "Covered Points Count",
    "rating": 1700,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "159/D",
    "contestId": 159,
    "index": "D",
    "name": "Palindrome pairs",
    "rating": 1500,
    "tags": [
      "*special",
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "id": "1660/A",
    "contestId": 1660,
    "index": "A",
    "name": "Vasya and Coins",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1437/F",
    "contestId": 1437,
    "index": "F",
    "name": "Emotional Fishermen",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "448/B",
    "contestId": 448,
    "index": "B",
    "name": "Suffix Structures",
    "rating": 1400,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "372/D",
    "contestId": 372,
    "index": "D",
    "name": "Choosing Subtree is Fun",
    "rating": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "1675/D",
    "contestId": 1675,
    "index": "D",
    "name": "Vertical Paths",
    "rating": 1300,
    "tags": [
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1379/D",
    "contestId": 1379,
    "index": "D",
    "name": "New Passenger Trams",
    "rating": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1986/D",
    "contestId": 1986,
    "index": "D",
    "name": "Mathematical Problem",
    "rating": 1400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1477/D",
    "contestId": 1477,
    "index": "D",
    "name": "Nezzar and Hidden Permutations",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "774/F",
    "contestId": 774,
    "index": "F",
    "name": "Pens And Days Of Week",
    "rating": 2700,
    "tags": [
      "*special",
      "binary search",
      "number theory"
    ]
  },
  {
    "id": "887/F",
    "contestId": 887,
    "index": "F",
    "name": "Row of Models",
    "rating": 2500,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1334/C",
    "contestId": 1334,
    "index": "C",
    "name": "Circle of Monsters",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1290/F",
    "contestId": 1290,
    "index": "F",
    "name": "Making Shapes",
    "rating": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1566/A",
    "contestId": 1566,
    "index": "A",
    "name": "Median Maximization",
    "rating": 800,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1552/B",
    "contestId": 1552,
    "index": "B",
    "name": "Running for Gold",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "272/A",
    "contestId": 272,
    "index": "A",
    "name": "Dima and Friends",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "74/B",
    "contestId": 74,
    "index": "B",
    "name": "Train",
    "rating": 1500,
    "tags": [
      "dp",
      "games",
      "greedy"
    ]
  },
  {
    "id": "1486/B",
    "contestId": 1486,
    "index": "B",
    "name": "Eastern Exhibition",
    "rating": 1500,
    "tags": [
      "binary search",
      "geometry",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "930/A",
    "contestId": 930,
    "index": "A",
    "name": "Peculiar apple-tree",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "770/A",
    "contestId": 770,
    "index": "A",
    "name": "New Password",
    "rating": 800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1051/F",
    "contestId": 1051,
    "index": "F",
    "name": "The Shortest Statement",
    "rating": 2400,
    "tags": [
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "1958/I",
    "contestId": 1958,
    "index": "I",
    "name": "Equal Trees",
    "rating": 3100,
    "tags": [
      "*special",
      "graphs",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "295/C",
    "contestId": 295,
    "index": "C",
    "name": "Greg and Friends",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "99/B",
    "contestId": 99,
    "index": "B",
    "name": "Help Chef Gerasim",
    "rating": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "91/A",
    "contestId": 91,
    "index": "A",
    "name": "Newspaper Headline",
    "rating": 1500,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1851/C",
    "contestId": 1851,
    "index": "C",
    "name": "Tiles Comeback",
    "rating": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1422/D",
    "contestId": 1422,
    "index": "D",
    "name": "Returning Home",
    "rating": 2300,
    "tags": [
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "845/F",
    "contestId": 845,
    "index": "F",
    "name": "Guards In The Storehouse",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "66/B",
    "contestId": 66,
    "index": "B",
    "name": "Petya and Countryside",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1909/D",
    "contestId": 1909,
    "index": "D",
    "name": "Split Plus K",
    "rating": 1900,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1634/A",
    "contestId": 1634,
    "index": "A",
    "name": "Reverse and Concatenate",
    "rating": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1930/A",
    "contestId": 1930,
    "index": "A",
    "name": "Maximise The Score",
    "rating": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1845/A",
    "contestId": 1845,
    "index": "A",
    "name": "Forbidden Integer",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1821/F",
    "contestId": 1821,
    "index": "F",
    "name": "Timber",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "448/A",
    "contestId": 448,
    "index": "A",
    "name": "Rewards",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "363/A",
    "contestId": 363,
    "index": "A",
    "name": "Soroban",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "220/A",
    "contestId": 220,
    "index": "A",
    "name": "Little Elephant and Problem",
    "rating": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "797/F",
    "contestId": 797,
    "index": "F",
    "name": "Mice and Holes",
    "rating": 2600,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1540/C2",
    "contestId": 1540,
    "index": "C2",
    "name": "Converging Array (Hard Version)",
    "rating": 2900,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1360/F",
    "contestId": 1360,
    "index": "F",
    "name": "Spy-string",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1556/F",
    "contestId": 1556,
    "index": "F",
    "name": "Sports Betting",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "graphs",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1921/E",
    "contestId": 1921,
    "index": "E",
    "name": "Eat the Chip",
    "rating": 1600,
    "tags": [
      "brute force",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1726/E",
    "contestId": 1726,
    "index": "E",
    "name": "Almost Perfect",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "id": "1519/C",
    "contestId": 1519,
    "index": "C",
    "name": "Berland Regional",
    "rating": 1400,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "913/H",
    "contestId": 913,
    "index": "H",
    "name": "Don't Exceed",
    "rating": 3400,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "id": "73/F",
    "contestId": 73,
    "index": "F",
    "name": "Plane of Tanks",
    "rating": 2900,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "id": "1472/E",
    "contestId": 1472,
    "index": "E",
    "name": "Correct Placement",
    "rating": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1870/H",
    "contestId": 1870,
    "index": "H",
    "name": "Standard Graph Problem",
    "rating": 3500,
    "tags": [
      "data structures",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "158/E",
    "contestId": 158,
    "index": "E",
    "name": "Phone Talks",
    "rating": 1900,
    "tags": [
      "*special",
      "dp",
      "sortings"
    ]
  },
  {
    "id": "710/F",
    "contestId": 710,
    "index": "F",
    "name": "String Set Queries",
    "rating": 2400,
    "tags": [
      "brute force",
      "data structures",
      "hashing",
      "interactive",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1899/D",
    "contestId": 1899,
    "index": "D",
    "name": "Yarik and Musical Notes",
    "rating": 1300,
    "tags": [
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "id": "856/D",
    "contestId": 856,
    "index": "D",
    "name": "Masha and Cactus",
    "rating": 2400,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "1830/F",
    "contestId": 1830,
    "index": "F",
    "name": "The Third Grace",
    "rating": 3200,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "84/C",
    "contestId": 84,
    "index": "C",
    "name": "Biathlon",
    "rating": 1700,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "id": "1477/F",
    "contestId": 1477,
    "index": "F",
    "name": "Nezzar and Chocolate Bars",
    "rating": 3500,
    "tags": [
      "combinatorics",
      "fft",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1188/A1",
    "contestId": 1188,
    "index": "A1",
    "name": "Add on a Tree",
    "rating": 1600,
    "tags": [
      "trees"
    ]
  },
  {
    "id": "1476/A",
    "contestId": 1476,
    "index": "A",
    "name": "K-divisible Sum",
    "rating": 1000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "5/E",
    "contestId": 5,
    "index": "E",
    "name": "Bindian Signalizing",
    "rating": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1066/B",
    "contestId": 1066,
    "index": "B",
    "name": "Heaters",
    "rating": 1500,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1954/A",
    "contestId": 1954,
    "index": "A",
    "name": "Painting the Ribbon",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "662/D",
    "contestId": 662,
    "index": "D",
    "name": "International Olympiad",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "846/A",
    "contestId": 846,
    "index": "A",
    "name": "Curriculum Vitae",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1438/A",
    "contestId": 1438,
    "index": "A",
    "name": "Specific Tastes of Andre",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1211/C",
    "contestId": 1211,
    "index": "C",
    "name": "Ice Cream",
    "rating": 1700,
    "tags": [
      "*special",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "933/C",
    "contestId": 933,
    "index": "C",
    "name": "A Colourful Prospect",
    "rating": 2700,
    "tags": [
      "geometry",
      "graphs"
    ]
  },
  {
    "id": "926/A",
    "contestId": 926,
    "index": "A",
    "name": "2-3-numbers",
    "rating": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "225/C",
    "contestId": 225,
    "index": "C",
    "name": "Barcode",
    "rating": 1700,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "1876/E",
    "contestId": 1876,
    "index": "E",
    "name": "Ball-Stackable",
    "rating": 3300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "id": "405/A",
    "contestId": 405,
    "index": "A",
    "name": "Gravity Flip",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "238/B",
    "contestId": 238,
    "index": "B",
    "name": "Boring Partition",
    "rating": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "652/A",
    "contestId": 652,
    "index": "A",
    "name": "Gabriel and Caterpillar",
    "rating": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "534/C",
    "contestId": 534,
    "index": "C",
    "name": "Polycarpus' Dice",
    "rating": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "id": "504/E",
    "contestId": 504,
    "index": "E",
    "name": "Misha and LCP on Tree",
    "rating": 3000,
    "tags": [
      "binary search",
      "dfs and similar",
      "hashing",
      "string suffix structures",
      "trees"
    ]
  },
  {
    "id": "1611/A",
    "contestId": 1611,
    "index": "A",
    "name": "Make Even",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "242/A",
    "contestId": 242,
    "index": "A",
    "name": "Heads or Tails",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1027/F",
    "contestId": 1027,
    "index": "F",
    "name": "Session in BSU",
    "rating": 2400,
    "tags": [
      "binary search",
      "dfs and similar",
      "dsu",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "id": "1428/G1",
    "contestId": 1428,
    "index": "G1",
    "name": "Lucky Numbers (Easy Version)",
    "rating": 2900,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1025/B",
    "contestId": 1025,
    "index": "B",
    "name": "Weakened Common Divisor",
    "rating": 1600,
    "tags": [
      "brute force",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1748/B",
    "contestId": 1748,
    "index": "B",
    "name": "Diverse Substrings",
    "rating": 1400,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "630/G",
    "contestId": 630,
    "index": "G",
    "name": "Challenge Pennants",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1450/E",
    "contestId": 1450,
    "index": "E",
    "name": "Capitalism",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "379/C",
    "contestId": 379,
    "index": "C",
    "name": "New Year Ratings Change",
    "rating": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "148/A",
    "contestId": 148,
    "index": "A",
    "name": "Insomnia cure",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1837/A",
    "contestId": 1837,
    "index": "A",
    "name": "Grasshopper on a Line",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1256/A",
    "contestId": 1256,
    "index": "A",
    "name": "Payment Without Change",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "175/E",
    "contestId": 175,
    "index": "E",
    "name": "Power Defence",
    "rating": 2600,
    "tags": [
      "brute force",
      "dp",
      "geometry",
      "greedy"
    ]
  },
  {
    "id": "1029/D",
    "contestId": 1029,
    "index": "D",
    "name": "Concatenated Multiples",
    "rating": 1900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "327/E",
    "contestId": 327,
    "index": "E",
    "name": "Axis Walking",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1051/B",
    "contestId": 1051,
    "index": "B",
    "name": "Relatively Prime Pairs",
    "rating": 1000,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "618/A",
    "contestId": 618,
    "index": "A",
    "name": "Slime Combining",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "549/F",
    "contestId": 549,
    "index": "F",
    "name": "Yura and Developers",
    "rating": 2800,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "id": "12/E",
    "contestId": 12,
    "index": "E",
    "name": "Start of the season",
    "rating": 2100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "852/B",
    "contestId": 852,
    "index": "B",
    "name": "Neural Network country",
    "rating": 2000,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "689/E",
    "contestId": 689,
    "index": "E",
    "name": "Mike and Geometry Problem",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "1790/E",
    "contestId": 1790,
    "index": "E",
    "name": "Vlad and a Pair of Numbers",
    "rating": 1400,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "id": "555/E",
    "contestId": 555,
    "index": "E",
    "name": "Case of Computer Network",
    "rating": 2800,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "730/J",
    "contestId": 730,
    "index": "J",
    "name": "Bottles",
    "rating": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "8/C",
    "contestId": 8,
    "index": "C",
    "name": "Looking for Order",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1676/H1",
    "contestId": 1676,
    "index": "H1",
    "name": "Maximum Crossings (Easy Version)",
    "rating": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "328/A",
    "contestId": 328,
    "index": "A",
    "name": "IQ Test",
    "rating": 1800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1743/B",
    "contestId": 1743,
    "index": "B",
    "name": "Permutation Value",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "995/A",
    "contestId": 995,
    "index": "A",
    "name": "Tesla",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1806/D",
    "contestId": 1806,
    "index": "D",
    "name": "DSU Master",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "dsu",
      "math"
    ]
  },
  {
    "id": "850/C",
    "contestId": 850,
    "index": "C",
    "name": "Arpa and a game with Mojtaba",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "games"
    ]
  },
  {
    "id": "412/E",
    "contestId": 412,
    "index": "E",
    "name": "E-mail Addresses",
    "rating": 1900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1486/F",
    "contestId": 1486,
    "index": "F",
    "name": "Pairs of Paths",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "780/A",
    "contestId": 780,
    "index": "A",
    "name": "Andryusha and Socks",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "711/C",
    "contestId": 711,
    "index": "C",
    "name": "Coloring Trees",
    "rating": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "79/B",
    "contestId": 79,
    "index": "B",
    "name": "Colorful Field",
    "rating": 1400,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1374/C",
    "contestId": 1374,
    "index": "C",
    "name": "Move Brackets",
    "rating": 1000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1537/E1",
    "contestId": 1537,
    "index": "E1",
    "name": "Erase and Extend (Easy Version)",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "652/B",
    "contestId": 652,
    "index": "B",
    "name": "z-sort",
    "rating": 1000,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "1398/B",
    "contestId": 1398,
    "index": "B",
    "name": "Substring Removal Game",
    "rating": 800,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "893/B",
    "contestId": 893,
    "index": "B",
    "name": "Beautiful Divisors",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "361/A",
    "contestId": 361,
    "index": "A",
    "name": "Levko and Table",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1740/A",
    "contestId": 1740,
    "index": "A",
    "name": "Factorise N+M",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "id": "1750/H",
    "contestId": 1750,
    "index": "H",
    "name": "BinaryStringForces",
    "rating": 3500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1513/D",
    "contestId": 1513,
    "index": "D",
    "name": "GCD and MST",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "659/E",
    "contestId": 659,
    "index": "E",
    "name": "New Reform",
    "rating": 1600,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1213/D2",
    "contestId": 1213,
    "index": "D2",
    "name": "Equalizing by Division (hard version)",
    "rating": 1600,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "id": "342/E",
    "contestId": 342,
    "index": "E",
    "name": "Xenia and Tree",
    "rating": 2400,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "id": "1487/A",
    "contestId": 1487,
    "index": "A",
    "name": "Arena",
    "rating": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "980/E",
    "contestId": 980,
    "index": "E",
    "name": "The Number Games",
    "rating": 2200,
    "tags": [
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "849/A",
    "contestId": 849,
    "index": "A",
    "name": "Odds and Ends",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1969/D",
    "contestId": 1969,
    "index": "D",
    "name": "Shop Game",
    "rating": 1900,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1720/A",
    "contestId": 1720,
    "index": "A",
    "name": "Burenka Plays with Fractions",
    "rating": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1516/A",
    "contestId": 1516,
    "index": "A",
    "name": "Tit for Tat",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1829/C",
    "contestId": 1829,
    "index": "C",
    "name": "Mr. Perfectly Fine",
    "rating": 800,
    "tags": [
      "bitmasks",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "875/D",
    "contestId": 875,
    "index": "D",
    "name": "High Cry",
    "rating": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "combinatorics",
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "id": "1982/F",
    "contestId": 1982,
    "index": "F",
    "name": "Sorting Problem Again",
    "rating": 2600,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "687/A",
    "contestId": 687,
    "index": "A",
    "name": "NP-Hard Problem",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1187/B",
    "contestId": 1187,
    "index": "B",
    "name": "Letters Shop",
    "rating": 1300,
    "tags": [
      "binary search",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1893/D",
    "contestId": 1893,
    "index": "D",
    "name": "Colorful Constructive",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "106/A",
    "contestId": 106,
    "index": "A",
    "name": "Card Game",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1454/A",
    "contestId": 1454,
    "index": "A",
    "name": "Special Permutation",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "probabilities"
    ]
  },
  {
    "id": "1648/C",
    "contestId": 1648,
    "index": "C",
    "name": "Tyler and Strings",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1676/H2",
    "contestId": 1676,
    "index": "H2",
    "name": "Maximum Crossings (Hard Version)",
    "rating": 1500,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings"
    ]
  },
  {
    "id": "117/A",
    "contestId": 117,
    "index": "A",
    "name": "Elevator",
    "rating": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "187/E",
    "contestId": 187,
    "index": "E",
    "name": "Heaven Tour",
    "rating": 2900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "359/D",
    "contestId": 359,
    "index": "D",
    "name": "Pair of Numbers",
    "rating": 2000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "678/E",
    "contestId": 678,
    "index": "E",
    "name": "Another Sith Tournament",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "982/A",
    "contestId": 982,
    "index": "A",
    "name": "Row",
    "rating": 1200,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "475/B",
    "contestId": 475,
    "index": "B",
    "name": "Strongly Connected City",
    "rating": 1400,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "253/A",
    "contestId": 253,
    "index": "A",
    "name": "Boys and Girls",
    "rating": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "963/B",
    "contestId": 963,
    "index": "B",
    "name": "Destruction of a Tree",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "911/A",
    "contestId": 911,
    "index": "A",
    "name": "Nearest Minimums",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "58/B",
    "contestId": 58,
    "index": "B",
    "name": "Coins",
    "rating": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "137/B",
    "contestId": 137,
    "index": "B",
    "name": "Permutation",
    "rating": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "56/B",
    "contestId": 56,
    "index": "B",
    "name": "Spoilt Permutation",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1805/E",
    "contestId": 1805,
    "index": "E",
    "name": "There Should Be a Lot of Maximums",
    "rating": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "140/B",
    "contestId": 140,
    "index": "B",
    "name": "New Year Cards",
    "rating": 1800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1101/G",
    "contestId": 1101,
    "index": "G",
    "name": "(Zero XOR Subset)-less",
    "rating": 2300,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "id": "1346/I",
    "contestId": 1346,
    "index": "I",
    "name": "Pac-Man 2.0",
    "rating": 2900,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "id": "1611/G",
    "contestId": 1611,
    "index": "G",
    "name": "Robot and Candies",
    "rating": 2500,
    "tags": [
      "data structures",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "id": "1566/G",
    "contestId": 1566,
    "index": "G",
    "name": "Four Vertices",
    "rating": 3100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "1513/A",
    "contestId": 1513,
    "index": "A",
    "name": "Array and Peaks",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1004/B",
    "contestId": 1004,
    "index": "B",
    "name": "Sonya and Exhibition",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1607/E",
    "contestId": 1607,
    "index": "E",
    "name": "Robot on the Board 1",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "808/D",
    "contestId": 808,
    "index": "D",
    "name": "Array Division",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "536/E",
    "contestId": 536,
    "index": "E",
    "name": "Tavas on the Path",
    "rating": 3100,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "id": "913/C",
    "contestId": 913,
    "index": "C",
    "name": "Party Lemonade",
    "rating": 1600,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1152/A",
    "contestId": 1152,
    "index": "A",
    "name": "Neko Finds Grapes",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1740/H",
    "contestId": 1740,
    "index": "H",
    "name": "MEX Tree Manipulation",
    "rating": 3300,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1913/D",
    "contestId": 1913,
    "index": "D",
    "name": "Array Collapse",
    "rating": 2100,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1873/G",
    "contestId": 1873,
    "index": "G",
    "name": "ABBC or BACB",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1765/J",
    "contestId": 1765,
    "index": "J",
    "name": "Hero to Zero",
    "rating": 2900,
    "tags": [
      "graph matchings",
      "math"
    ]
  },
  {
    "id": "1227/F2",
    "contestId": 1227,
    "index": "F2",
    "name": "Wrong Answer on test 233 (Hard Version)",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1707/A",
    "contestId": 1707,
    "index": "A",
    "name": "Doremy's IQ",
    "rating": 1600,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "272/D",
    "contestId": 272,
    "index": "D",
    "name": "Dima and Two Sequences",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "math",
      "sortings"
    ]
  },
  {
    "id": "346/D",
    "contestId": 346,
    "index": "D",
    "name": "Robot Control",
    "rating": 2600,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1626/C",
    "contestId": 1626,
    "index": "C",
    "name": "Monsters And Spells",
    "rating": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "778/C",
    "contestId": 778,
    "index": "C",
    "name": "Peterson Polyglot",
    "rating": 2500,
    "tags": [
      "brute force",
      "dfs and similar",
      "dsu",
      "hashing",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1815/C",
    "contestId": 1815,
    "index": "C",
    "name": "Between",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "57/C",
    "contestId": 57,
    "index": "C",
    "name": "Array",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "779/C",
    "contestId": 779,
    "index": "C",
    "name": "Dishonest Sellers",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "859/F",
    "contestId": 859,
    "index": "F",
    "name": "Ordering T-Shirts",
    "rating": 2800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1547/B",
    "contestId": 1547,
    "index": "B",
    "name": "Alphabetical Strings",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "288/D",
    "contestId": 288,
    "index": "D",
    "name": "Polo the Penguin and Trees",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "979/B",
    "contestId": 979,
    "index": "B",
    "name": "Treasure Hunt",
    "rating": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1251/A",
    "contestId": 1251,
    "index": "A",
    "name": "Broken Keyboard",
    "rating": 1000,
    "tags": [
      "brute force",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1742/B",
    "contestId": 1742,
    "index": "B",
    "name": "Increasing",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "894/C",
    "contestId": 894,
    "index": "C",
    "name": "Marco and GCD Sequence",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1786/A2",
    "contestId": 1786,
    "index": "A2",
    "name": "Alternating Deck (hard version)",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1780/E",
    "contestId": 1780,
    "index": "E",
    "name": "Josuke and Complete Graph",
    "rating": 2400,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "id": "65/E",
    "contestId": 65,
    "index": "E",
    "name": "Harry Potter and Moving Staircases",
    "rating": 2900,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "id": "879/A",
    "contestId": 879,
    "index": "A",
    "name": "Borya's Diagnosis",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1574/A",
    "contestId": 1574,
    "index": "A",
    "name": "Regular Bracket Sequences",
    "rating": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1536/E",
    "contestId": 1536,
    "index": "E",
    "name": "Omkar and Forest",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "graphs",
      "math",
      "shortest paths"
    ]
  },
  {
    "id": "366/B",
    "contestId": 366,
    "index": "B",
    "name": "Dima and To-do List",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1028/B",
    "contestId": 1028,
    "index": "B",
    "name": "Unnatural Conditions",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "549/E",
    "contestId": 549,
    "index": "E",
    "name": "Sasha Circle",
    "rating": 2700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "277/A",
    "contestId": 277,
    "index": "A",
    "name": "Learning Languages",
    "rating": 1400,
    "tags": [
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "id": "276/C",
    "contestId": 276,
    "index": "C",
    "name": "Little Girl and Maximum Sum",
    "rating": 1500,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1684/H",
    "contestId": 1684,
    "index": "H",
    "name": "Hard Cut",
    "rating": 3400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "divide and conquer",
      "math"
    ]
  },
  {
    "id": "845/A",
    "contestId": 845,
    "index": "A",
    "name": "Chess Tourney",
    "rating": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1257/B",
    "contestId": 1257,
    "index": "B",
    "name": "Magic Stick",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1909/G",
    "contestId": 1909,
    "index": "G",
    "name": "Pumping Lemma",
    "rating": 3000,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1637/B",
    "contestId": 1637,
    "index": "B",
    "name": "MEX and Array",
    "rating": 1100,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1118/D2",
    "contestId": 1118,
    "index": "D2",
    "name": "Coffee and Coursework (Hard Version)",
    "rating": 1700,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "290/F",
    "contestId": 290,
    "index": "F",
    "name": "Greedy Petya",
    "rating": 2800,
    "tags": [
      "*special",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "78/E",
    "contestId": 78,
    "index": "E",
    "name": "Evacuation",
    "rating": 2300,
    "tags": [
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1889/C2",
    "contestId": 1889,
    "index": "C2",
    "name": "Doremy's Drying Plan (Hard Version)",
    "rating": 2600,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1798/B",
    "contestId": 1798,
    "index": "B",
    "name": "Three Sevens",
    "rating": 1000,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1209/B",
    "contestId": 1209,
    "index": "B",
    "name": "Koala and Lights",
    "rating": 1300,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1976/D",
    "contestId": 1976,
    "index": "D",
    "name": "Invertible Bracket Sequences",
    "rating": 2000,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "divide and conquer",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "29/E",
    "contestId": 29,
    "index": "E",
    "name": "Quarrel",
    "rating": 2400,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "198/B",
    "contestId": 198,
    "index": "B",
    "name": "Jumping on Walls",
    "rating": 1400,
    "tags": [
      "shortest paths"
    ]
  },
  {
    "id": "63/D",
    "contestId": 63,
    "index": "D",
    "name": "Dividing Island",
    "rating": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1734/D",
    "contestId": 1734,
    "index": "D",
    "name": "Slime Escape",
    "rating": 1800,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "878/A",
    "contestId": 878,
    "index": "A",
    "name": "Short Program",
    "rating": 1600,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "id": "1227/G",
    "contestId": 1227,
    "index": "G",
    "name": "Not Same",
    "rating": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1925/B",
    "contestId": 1925,
    "index": "B",
    "name": "A Balanced Problemset?",
    "rating": 1200,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "681/C",
    "contestId": 681,
    "index": "C",
    "name": "Heap Operations",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1685/E",
    "contestId": 1685,
    "index": "E",
    "name": "The Ultimate LIS Problem",
    "rating": 3500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1704/F",
    "contestId": 1704,
    "index": "F",
    "name": "Colouring Game",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "dp",
      "games"
    ]
  },
  {
    "id": "461/A",
    "contestId": 461,
    "index": "A",
    "name": "Appleman and Toastman",
    "rating": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "858/F",
    "contestId": 858,
    "index": "F",
    "name": "Wizard's Tour",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "189/A",
    "contestId": 189,
    "index": "A",
    "name": "Cut Ribbon",
    "rating": 1300,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "1858/C",
    "contestId": 1858,
    "index": "C",
    "name": "Yet Another Permutation Problem",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "171/E",
    "contestId": 171,
    "index": "E",
    "name": "MYSTERIOUS LANGUAGE",
    "rating": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "457/B",
    "contestId": 457,
    "index": "B",
    "name": "Distributed Join",
    "rating": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1743/C",
    "contestId": 1743,
    "index": "C",
    "name": "Save the Magazines",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "864/D",
    "contestId": 864,
    "index": "D",
    "name": "Make a Permutation!",
    "rating": 1500,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "493/C",
    "contestId": 493,
    "index": "C",
    "name": "Vasya and Basketball",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "197/B",
    "contestId": 197,
    "index": "B",
    "name": "Limit",
    "rating": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1422/E",
    "contestId": 1422,
    "index": "E",
    "name": "Minlexes",
    "rating": 2700,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1722/B",
    "contestId": 1722,
    "index": "B",
    "name": "Colourblindness",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "468/B",
    "contestId": 468,
    "index": "B",
    "name": "Two Sets",
    "rating": 2000,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "id": "1970/E1",
    "contestId": 1970,
    "index": "E1",
    "name": "Trails (Easy)",
    "rating": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1872/F",
    "contestId": 1872,
    "index": "F",
    "name": "Selling a Menagerie",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "id": "681/D",
    "contestId": 681,
    "index": "D",
    "name": "Gifts by the List",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1621/A",
    "contestId": 1621,
    "index": "A",
    "name": "Stable Arrangement of Rooks",
    "rating": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1292/B",
    "contestId": 1292,
    "index": "B",
    "name": "Aroma's Search",
    "rating": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1931/C",
    "contestId": 1931,
    "index": "C",
    "name": "Make Equal Again",
    "rating": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "793/D",
    "contestId": 793,
    "index": "D",
    "name": "Presents in Bankopolis",
    "rating": 2100,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1843/B",
    "contestId": 1843,
    "index": "B",
    "name": "Long Long",
    "rating": 800,
    "tags": [
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1481/F",
    "contestId": 1481,
    "index": "F",
    "name": "AB Tree",
    "rating": 3100,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1117/A",
    "contestId": 1117,
    "index": "A",
    "name": "Best Subsegment",
    "rating": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1263/B",
    "contestId": 1263,
    "index": "B",
    "name": "PIN Codes",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1567/E",
    "contestId": 1567,
    "index": "E",
    "name": "Non-Decreasing Dilemma",
    "rating": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "math"
    ]
  },
  {
    "id": "1862/E",
    "contestId": 1862,
    "index": "E",
    "name": "Kolya and Movie Theatre",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "690/C3",
    "contestId": 690,
    "index": "C3",
    "name": "Brain Network (hard)",
    "rating": 2200,
    "tags": [
      "trees"
    ]
  },
  {
    "id": "717/I",
    "contestId": 717,
    "index": "I",
    "name": "Cowboy Beblop at his computer",
    "rating": 2800,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1032/E",
    "contestId": 1032,
    "index": "E",
    "name": "The Unbearable Lightness of Weights",
    "rating": 2100,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1806/C",
    "contestId": 1806,
    "index": "C",
    "name": "Sequence Master",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1209/D",
    "contestId": 1209,
    "index": "D",
    "name": "Cow and Snacks",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1408/H",
    "contestId": 1408,
    "index": "H",
    "name": "Rainbow Triples",
    "rating": 3300,
    "tags": [
      "binary search",
      "data structures",
      "flows",
      "greedy"
    ]
  },
  {
    "id": "1935/B",
    "contestId": 1935,
    "index": "B",
    "name": "Informatics in MAC",
    "rating": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1776/B",
    "contestId": 1776,
    "index": "B",
    "name": "Vittorio Plays with LEGO Bricks",
    "rating": 2200,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "id": "358/C",
    "contestId": 358,
    "index": "C",
    "name": "Dima and Containers",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "242/C",
    "contestId": 242,
    "index": "C",
    "name": "King's Path",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "hashing",
      "shortest paths"
    ]
  },
  {
    "id": "1249/C1",
    "contestId": 1249,
    "index": "C1",
    "name": "Good Numbers (easy version)",
    "rating": 1300,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1907/D",
    "contestId": 1907,
    "index": "D",
    "name": "Jumping Through Segments",
    "rating": 1400,
    "tags": [
      "binary search",
      "constructive algorithms"
    ]
  },
  {
    "id": "1942/H",
    "contestId": 1942,
    "index": "H",
    "name": "Farmer John's Favorite Intern",
    "rating": 3500,
    "tags": [
      "data structures",
      "dp",
      "flows",
      "trees"
    ]
  },
  {
    "id": "1327/C",
    "contestId": 1327,
    "index": "C",
    "name": "Game with Chips",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1835/D",
    "contestId": 1835,
    "index": "D",
    "name": "Doctor's Brown Hypothesis",
    "rating": 2900,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1748/A",
    "contestId": 1748,
    "index": "A",
    "name": "The Ultimate Square",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1593/G",
    "contestId": 1593,
    "index": "G",
    "name": "Changing Brackets",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "411/C",
    "contestId": 411,
    "index": "C",
    "name": "Kicker",
    "rating": 1700,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1389/G",
    "contestId": 1389,
    "index": "G",
    "name": "Directing Edges",
    "rating": 2800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "74/C",
    "contestId": 74,
    "index": "C",
    "name": "Chessboard Billiard",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "number theory"
    ]
  },
  {
    "id": "292/E",
    "contestId": 292,
    "index": "E",
    "name": "Copying Data",
    "rating": 1900,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1951/C",
    "contestId": 1951,
    "index": "C",
    "name": "Ticket Hoarding",
    "rating": 1400,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1625/A",
    "contestId": 1625,
    "index": "A",
    "name": "Ancient Civilization",
    "rating": 800,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "id": "925/E",
    "contestId": 925,
    "index": "E",
    "name": "May Holidays",
    "rating": 2900,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1043/F",
    "contestId": 1043,
    "index": "F",
    "name": "Make It One",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "id": "1157/F",
    "contestId": 1157,
    "index": "F",
    "name": "Maximum Balanced Circle",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "73/E",
    "contestId": 73,
    "index": "E",
    "name": "Morrowindows",
    "rating": 2400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "852/A",
    "contestId": 852,
    "index": "A",
    "name": "Digits",
    "rating": 2500,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1579/D",
    "contestId": 1579,
    "index": "D",
    "name": "Productive Meeting",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "695/G",
    "contestId": 695,
    "index": "G",
    "name": "Cool Slogans",
    "rating": 3300,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "82/B",
    "contestId": 82,
    "index": "B",
    "name": "Sets",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "hashing",
      "implementation"
    ]
  },
  {
    "id": "746/F",
    "contestId": 746,
    "index": "F",
    "name": "Music in Car",
    "rating": 2200,
    "tags": [
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "30/B",
    "contestId": 30,
    "index": "B",
    "name": "Codeforces World Finals",
    "rating": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1328/E",
    "contestId": 1328,
    "index": "E",
    "name": "Tree Queries",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "596/B",
    "contestId": 596,
    "index": "B",
    "name": "Wilbur and Array",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1612/D",
    "contestId": 1612,
    "index": "D",
    "name": "X-Magic Pair",
    "rating": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1545/A",
    "contestId": 1545,
    "index": "A",
    "name": "AquaMoon and Strange Sort",
    "rating": 1500,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "180/F",
    "contestId": 180,
    "index": "F",
    "name": "Mathematical Analysis Rocks!",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "830/A",
    "contestId": 830,
    "index": "A",
    "name": "Office Keys",
    "rating": 1800,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1458/C",
    "contestId": 1458,
    "index": "C",
    "name": "Latin Square",
    "rating": 2700,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "id": "649/A",
    "contestId": 649,
    "index": "A",
    "name": "Любимые числа Поликарпа",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "732/D",
    "contestId": 732,
    "index": "D",
    "name": "Exams",
    "rating": 1700,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1985/H1",
    "contestId": 1985,
    "index": "H1",
    "name": "Maximize the Largest Component (Easy Version)",
    "rating": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1695/D1",
    "contestId": 1695,
    "index": "D1",
    "name": "Tree Queries (Easy Version)",
    "rating": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1099/B",
    "contestId": 1099,
    "index": "B",
    "name": "Squares and Segments",
    "rating": 1100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "22/D",
    "contestId": 22,
    "index": "D",
    "name": "Segments",
    "rating": 1900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "401/D",
    "contestId": 401,
    "index": "D",
    "name": "Roman and Numbers",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "id": "1678/A",
    "contestId": 1678,
    "index": "A",
    "name": "Tokitsukaze and All Zero Sequence",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1316/E",
    "contestId": 1316,
    "index": "E",
    "name": "Team Building",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1083/E",
    "contestId": 1083,
    "index": "E",
    "name": "The Fair Nut and Rectangles",
    "rating": 2400,
    "tags": [
      "data structures",
      "dp",
      "geometry"
    ]
  },
  {
    "id": "269/D",
    "contestId": 269,
    "index": "D",
    "name": "Maximum Waterfall",
    "rating": 2600,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "sortings"
    ]
  },
  {
    "id": "656/E",
    "contestId": 656,
    "index": "E",
    "name": "Out of Controls",
    "rating": 2000,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "962/G",
    "contestId": 962,
    "index": "G",
    "name": "Visible Black Areas",
    "rating": 2800,
    "tags": [
      "data structures",
      "dsu",
      "geometry",
      "trees"
    ]
  },
  {
    "id": "742/B",
    "contestId": 742,
    "index": "B",
    "name": "Arpa’s obvious problem and Mehrdad’s terrible solution",
    "rating": 1500,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "967/B",
    "contestId": 967,
    "index": "B",
    "name": "Watering System",
    "rating": 1000,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "id": "1681/B",
    "contestId": 1681,
    "index": "B",
    "name": "Card Trick",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1375/A",
    "contestId": 1375,
    "index": "A",
    "name": "Sign Flipping",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "132/B",
    "contestId": 132,
    "index": "B",
    "name": "Piet",
    "rating": 2100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1085/E",
    "contestId": 1085,
    "index": "E",
    "name": "Vasya and Templates",
    "rating": 2300,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "571/E",
    "contestId": 571,
    "index": "E",
    "name": "Geometric Progressions",
    "rating": 3200,
    "tags": [
      "math"
    ]
  },
  {
    "id": "843/A",
    "contestId": 843,
    "index": "A",
    "name": "Sorting by Subsequences",
    "rating": 1400,
    "tags": [
      "dfs and similar",
      "dsu",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1682/E",
    "contestId": 1682,
    "index": "E",
    "name": "Unordered Swaps",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1141/C",
    "contestId": 1141,
    "index": "C",
    "name": "Polycarp Restores Permutation",
    "rating": 1500,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1928/C",
    "contestId": 1928,
    "index": "C",
    "name": "Physical Education Lesson",
    "rating": 1600,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1599/G",
    "contestId": 1599,
    "index": "G",
    "name": "Shortest path",
    "rating": 2700,
    "tags": [
      "brute force",
      "geometry",
      "math",
      "shortest paths"
    ]
  },
  {
    "id": "1383/C",
    "contestId": 1383,
    "index": "C",
    "name": "String Transformation 2",
    "rating": 3100,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "317/B",
    "contestId": 317,
    "index": "B",
    "name": "Ants",
    "rating": 2000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1534/C",
    "contestId": 1534,
    "index": "C",
    "name": "Little Alawn's Puzzle",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "dp",
      "dsu",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1905/F",
    "contestId": 1905,
    "index": "F",
    "name": "Field Should Not Be Empty",
    "rating": 2600,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "id": "1984/C1",
    "contestId": 1984,
    "index": "C1",
    "name": "Magnitude (Easy Version)",
    "rating": 1300,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "622/A",
    "contestId": 622,
    "index": "A",
    "name": "Infinite Sequence",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1617/B",
    "contestId": 1617,
    "index": "B",
    "name": "GCD Problem",
    "rating": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1439/C",
    "contestId": 1439,
    "index": "C",
    "name": "Greedy Shopping",
    "rating": 2600,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "224/B",
    "contestId": 224,
    "index": "B",
    "name": "Array",
    "rating": 1500,
    "tags": [
      "bitmasks",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1213/A",
    "contestId": 1213,
    "index": "A",
    "name": "Chips Moving",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "780/G",
    "contestId": 780,
    "index": "G",
    "name": "Andryusha and Nervous Barriers",
    "rating": 2700,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1372/B",
    "contestId": 1372,
    "index": "B",
    "name": "Omkar and Last Class of Math",
    "rating": 1300,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1360/G",
    "contestId": 1360,
    "index": "G",
    "name": "A/B Matrix",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "727/B",
    "contestId": 727,
    "index": "B",
    "name": "Bill Total Value",
    "rating": 1600,
    "tags": [
      "expression parsing",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "31/C",
    "contestId": 31,
    "index": "C",
    "name": "Schedule",
    "rating": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1444/A",
    "contestId": 1444,
    "index": "A",
    "name": "Division",
    "rating": 1500,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "776/B",
    "contestId": 776,
    "index": "B",
    "name": "Sherlock and his girlfriend",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "id": "1315/A",
    "contestId": 1315,
    "index": "A",
    "name": "Dead Pixel",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "328/B",
    "contestId": 328,
    "index": "B",
    "name": "Sheldon and Ice Pieces",
    "rating": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "574/A",
    "contestId": 574,
    "index": "A",
    "name": "Bear and Elections",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "683/I",
    "contestId": 683,
    "index": "I",
    "name": "Loader",
    "rating": 2500,
    "tags": [
      "*special",
      "graphs"
    ]
  },
  {
    "id": "1860/F",
    "contestId": 1860,
    "index": "F",
    "name": "Evaluate RBS",
    "rating": 2900,
    "tags": [
      "data structures",
      "geometry",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "323/A",
    "contestId": 323,
    "index": "A",
    "name": "Black-and-White Cube",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "constructive algorithms"
    ]
  },
  {
    "id": "575/F",
    "contestId": 575,
    "index": "F",
    "name": "Bulbo",
    "rating": 2100,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "203/B",
    "contestId": 203,
    "index": "B",
    "name": "Game on Paper",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "286/C",
    "contestId": 286,
    "index": "C",
    "name": "Main Sequence",
    "rating": 2100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "649/D",
    "contestId": 649,
    "index": "D",
    "name": "Дефрагментация памяти",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "356/B",
    "contestId": 356,
    "index": "B",
    "name": "Xenia and Hamming",
    "rating": 1900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1749/B",
    "contestId": 1749,
    "index": "B",
    "name": "Death's Blessing",
    "rating": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1005/B",
    "contestId": 1005,
    "index": "B",
    "name": "Delete from the Left",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1338/A",
    "contestId": 1338,
    "index": "A",
    "name": "Powered Addition",
    "rating": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "125/A",
    "contestId": 125,
    "index": "A",
    "name": "Measuring Lengths in Baden",
    "rating": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "id": "852/F",
    "contestId": 852,
    "index": "F",
    "name": "Product transformation",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "438/E",
    "contestId": 438,
    "index": "E",
    "name": "The Child and Binary Tree",
    "rating": 3100,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "fft",
      "number theory"
    ]
  },
  {
    "id": "1599/J",
    "contestId": 1599,
    "index": "J",
    "name": "Bob's Beautiful Array",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1859/C",
    "contestId": 1859,
    "index": "C",
    "name": "Another Permutation Problem",
    "rating": 1200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "358/A",
    "contestId": 358,
    "index": "A",
    "name": "Dima and Continuous Line",
    "rating": 1400,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "41/C",
    "contestId": 41,
    "index": "C",
    "name": "Email address",
    "rating": 1300,
    "tags": [
      "expression parsing",
      "implementation"
    ]
  },
  {
    "id": "1336/E2",
    "contestId": 1336,
    "index": "E2",
    "name": "Chiori and Doll Picking (hard version)",
    "rating": 3500,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "189/B",
    "contestId": 189,
    "index": "B",
    "name": "Counting Rhombi",
    "rating": 1300,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "963/C",
    "contestId": 963,
    "index": "C",
    "name": "Cutting Rectangle",
    "rating": 2600,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "407/D",
    "contestId": 407,
    "index": "D",
    "name": "Largest Submatrix 3",
    "rating": 2700,
    "tags": [
      "dp",
      "hashing"
    ]
  },
  {
    "id": "687/B",
    "contestId": 687,
    "index": "B",
    "name": "Remainders Game",
    "rating": 1800,
    "tags": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1011/A",
    "contestId": 1011,
    "index": "A",
    "name": "Stages",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "630/F",
    "contestId": 630,
    "index": "F",
    "name": "Selection of Personnel",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "176/C",
    "contestId": 176,
    "index": "C",
    "name": "Playing with Superglue",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "constructive algorithms"
    ]
  },
  {
    "id": "1658/F",
    "contestId": 1658,
    "index": "F",
    "name": "Juju and Binary String",
    "rating": 2700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "37/E",
    "contestId": 37,
    "index": "E",
    "name": "Trial for Chief",
    "rating": 2600,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "1237/H",
    "contestId": 1237,
    "index": "H",
    "name": "Balanced Reversals",
    "rating": 3300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1535/B",
    "contestId": 1535,
    "index": "B",
    "name": "Array Reodering",
    "rating": 900,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "1910/J",
    "contestId": 1910,
    "index": "J",
    "name": "Two Colors",
    "rating": 2900,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1438/D",
    "contestId": 1438,
    "index": "D",
    "name": "Powerful Ksenia",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1729/C",
    "contestId": 1729,
    "index": "C",
    "name": "Jumping on Tiles",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "429/E",
    "contestId": 429,
    "index": "E",
    "name": "Points and Segments",
    "rating": 3000,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "879/B",
    "contestId": 879,
    "index": "B",
    "name": "Table Tennis",
    "rating": 1200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1623/D",
    "contestId": 1623,
    "index": "D",
    "name": "Robot Cleaner Revisit",
    "rating": 2300,
    "tags": [
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "464/D",
    "contestId": 464,
    "index": "D",
    "name": "World of Darkraft - 2",
    "rating": 2700,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "1821/A",
    "contestId": 1821,
    "index": "A",
    "name": "Matching",
    "rating": 800,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1583/C",
    "contestId": 1583,
    "index": "C",
    "name": "Omkar and Determination",
    "rating": 1700,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1896/B",
    "contestId": 1896,
    "index": "B",
    "name": "AB Flipping",
    "rating": 900,
    "tags": [
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1063/F",
    "contestId": 1063,
    "index": "F",
    "name": "String Journey",
    "rating": 3300,
    "tags": [
      "data structures",
      "dp",
      "string suffix structures"
    ]
  },
  {
    "id": "793/B",
    "contestId": 793,
    "index": "B",
    "name": "Igor and his way to work",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "101/E",
    "contestId": 101,
    "index": "E",
    "name": "Candies and Stones",
    "rating": 2500,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "261/C",
    "contestId": 261,
    "index": "C",
    "name": "Maxim and Matrix",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "id": "1826/C",
    "contestId": 1826,
    "index": "C",
    "name": "Dreaming of Freedom",
    "rating": 1300,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1411/D",
    "contestId": 1411,
    "index": "D",
    "name": "Grime Zoo",
    "rating": 2100,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1852/A",
    "contestId": 1852,
    "index": "A",
    "name": "Ntarsis' Set",
    "rating": 1800,
    "tags": [
      "binary search",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1827/F",
    "contestId": 1827,
    "index": "F",
    "name": "Copium Permutation",
    "rating": 3500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1286/A",
    "contestId": 1286,
    "index": "A",
    "name": "Garland",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "337/C",
    "contestId": 337,
    "index": "C",
    "name": "Quiz",
    "rating": 1600,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "id": "1863/F",
    "contestId": 1863,
    "index": "F",
    "name": "Divide, XOR, and Conquer",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "id": "1400/D",
    "contestId": 1400,
    "index": "D",
    "name": "Zigzags",
    "rating": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "452/C",
    "contestId": 452,
    "index": "C",
    "name": "Magic Trick",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "9/B",
    "contestId": 9,
    "index": "B",
    "name": "Running Student",
    "rating": 1200,
    "tags": [
      "brute force",
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "701/A",
    "contestId": 701,
    "index": "A",
    "name": "Cards",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "280/D",
    "contestId": 280,
    "index": "D",
    "name": "k-Maximum Subsequence Sum",
    "rating": 2800,
    "tags": [
      "data structures",
      "flows",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1249/C2",
    "contestId": 1249,
    "index": "C2",
    "name": "Good Numbers (hard version)",
    "rating": 1500,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1748/C",
    "contestId": 1748,
    "index": "C",
    "name": "Zero-Sum Prefixes",
    "rating": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1311/A",
    "contestId": 1311,
    "index": "A",
    "name": "Add Odd or Subtract Even",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1494/A",
    "contestId": 1494,
    "index": "A",
    "name": "ABC String",
    "rating": 900,
    "tags": [
      "bitmasks",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "952/C",
    "contestId": 952,
    "index": "C",
    "name": "Ravioli Sort",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1220/A",
    "contestId": 1220,
    "index": "A",
    "name": "Cards",
    "rating": 800,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1299/B",
    "contestId": 1299,
    "index": "B",
    "name": "Aerodynamic",
    "rating": 1800,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "958/A2",
    "contestId": 958,
    "index": "A2",
    "name": "Death Stars (medium)",
    "rating": 2000,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1365/F",
    "contestId": 1365,
    "index": "F",
    "name": "Swaps Again",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "610/A",
    "contestId": 610,
    "index": "A",
    "name": "Pasha and Stick",
    "rating": 1000,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1130/C",
    "contestId": 1130,
    "index": "C",
    "name": "Connect",
    "rating": 1400,
    "tags": [
      "brute force",
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "id": "593/A",
    "contestId": 593,
    "index": "A",
    "name": "2Char",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1975/E",
    "contestId": 1975,
    "index": "E",
    "name": "Chain Queries",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "904/D",
    "contestId": 904,
    "index": "D",
    "name": "Seating of Students",
    "rating": 2200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "981/D",
    "contestId": 981,
    "index": "D",
    "name": "Bookshelves",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1920/F2",
    "contestId": 1920,
    "index": "F2",
    "name": "Smooth Sailing (Hard Version)",
    "rating": 3000,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "geometry",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1635/D",
    "contestId": 1635,
    "index": "D",
    "name": "Infinite Set",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "matrices",
      "number theory",
      "strings"
    ]
  },
  {
    "id": "1779/F",
    "contestId": 1779,
    "index": "F",
    "name": "Xorcerer's Stones",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1702/C",
    "contestId": 1702,
    "index": "C",
    "name": "Train and Queries",
    "rating": 1100,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "949/D",
    "contestId": 949,
    "index": "D",
    "name": "Curfew",
    "rating": 2300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1562/C",
    "contestId": 1562,
    "index": "C",
    "name": "Rings",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1118/A",
    "contestId": 1118,
    "index": "A",
    "name": "Water Buying",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "360/D",
    "contestId": 360,
    "index": "D",
    "name": "Levko and Sets",
    "rating": 2600,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "1076/D",
    "contestId": 1076,
    "index": "D",
    "name": "Edge Deletion",
    "rating": 1800,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "747/C",
    "contestId": 747,
    "index": "C",
    "name": "Servers",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1430/E",
    "contestId": 1430,
    "index": "E",
    "name": "String Reversal",
    "rating": 1900,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1974/D",
    "contestId": 1974,
    "index": "D",
    "name": "Ingenuity-2",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1839/C",
    "contestId": 1839,
    "index": "C",
    "name": "Insert Zero and Invert Prefix",
    "rating": 1300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "37/A",
    "contestId": 37,
    "index": "A",
    "name": "Towers",
    "rating": 1000,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "1613/B",
    "contestId": 1613,
    "index": "B",
    "name": "Absent Remainder",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "785/C",
    "contestId": 785,
    "index": "C",
    "name": "Anton and Fairy Tale",
    "rating": 1600,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "1067/C",
    "contestId": 1067,
    "index": "C",
    "name": "Knights",
    "rating": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1713/F",
    "contestId": 1713,
    "index": "F",
    "name": "Lost Array",
    "rating": 2900,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "id": "1732/D2",
    "contestId": 1732,
    "index": "D2",
    "name": "Balance (Hard version)",
    "rating": 2400,
    "tags": [
      "brute force",
      "data structures",
      "number theory"
    ]
  },
  {
    "id": "16/C",
    "contestId": 16,
    "index": "C",
    "name": "Monitor",
    "rating": 1800,
    "tags": [
      "binary search",
      "number theory"
    ]
  },
  {
    "id": "721/A",
    "contestId": 721,
    "index": "A",
    "name": "One-dimensional Japanese Crossword",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1019/E",
    "contestId": 1019,
    "index": "E",
    "name": "Raining season",
    "rating": 3200,
    "tags": [
      "data structures",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "id": "389/B",
    "contestId": 389,
    "index": "B",
    "name": "Fox and Cross",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1398/G",
    "contestId": 1398,
    "index": "G",
    "name": "Running Competition",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1479/B1",
    "contestId": 1479,
    "index": "B1",
    "name": "Painting the Array I",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "258/C",
    "contestId": 258,
    "index": "C",
    "name": "Little Elephant and LCM",
    "rating": 2000,
    "tags": [
      "binary search",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1629/A",
    "contestId": 1629,
    "index": "A",
    "name": "Download More RAM",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "297/A",
    "contestId": 297,
    "index": "A",
    "name": "Parity Game",
    "rating": 1700,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "95/B",
    "contestId": 95,
    "index": "B",
    "name": "Lucky Numbers",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "137/C",
    "contestId": 137,
    "index": "C",
    "name": "History",
    "rating": 1500,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "1575/I",
    "contestId": 1575,
    "index": "I",
    "name": "Illusions of the Desert",
    "rating": 2300,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1702/A",
    "contestId": 1702,
    "index": "A",
    "name": "Round Down the Price",
    "rating": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "488/A",
    "contestId": 488,
    "index": "A",
    "name": "Giga Tower",
    "rating": 1100,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "911/C",
    "contestId": 911,
    "index": "C",
    "name": "Three Garlands",
    "rating": 1400,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "1689/D",
    "contestId": 1689,
    "index": "D",
    "name": "Lena and Matrix",
    "rating": 1900,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "shortest paths"
    ]
  },
  {
    "id": "258/B",
    "contestId": 258,
    "index": "B",
    "name": "Little Elephant and Elections",
    "rating": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "82/D",
    "contestId": 82,
    "index": "D",
    "name": "Two out of Three",
    "rating": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1916/E",
    "contestId": 1916,
    "index": "E",
    "name": "Happy Life in University",
    "rating": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1906/G",
    "contestId": 1906,
    "index": "G",
    "name": "Grid Game 2",
    "rating": 2900,
    "tags": [
      "games",
      "number theory"
    ]
  },
  {
    "id": "1949/J",
    "contestId": 1949,
    "index": "J",
    "name": "Amanda the Amoeba",
    "rating": 2600,
    "tags": [
      "graphs",
      "implementation",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "1762/E",
    "contestId": 1762,
    "index": "E",
    "name": "Tree Sum",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "math",
      "trees"
    ]
  },
  {
    "id": "821/A",
    "contestId": 821,
    "index": "A",
    "name": "Okabe and Future Gadget Laboratory",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1624/C",
    "contestId": 1624,
    "index": "C",
    "name": "Division by Two and Permutation",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "greedy",
      "math"
    ]
  },
  {
    "id": "39/A",
    "contestId": 39,
    "index": "A",
    "name": "C*++ Calculations",
    "rating": 2000,
    "tags": [
      "expression parsing",
      "greedy"
    ]
  },
  {
    "id": "1616/B",
    "contestId": 1616,
    "index": "B",
    "name": "Mirror in the String",
    "rating": 1100,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1935/D",
    "contestId": 1935,
    "index": "D",
    "name": "Exam in MAC",
    "rating": 1800,
    "tags": [
      "binary search",
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1337/B",
    "contestId": 1337,
    "index": "B",
    "name": "Kana and Dragon Quest game",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1422/F",
    "contestId": 1422,
    "index": "F",
    "name": "Boring Queries",
    "rating": 2700,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "id": "42/D",
    "contestId": 42,
    "index": "D",
    "name": "Strange town",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1760/F",
    "contestId": 1760,
    "index": "F",
    "name": "Quests",
    "rating": 1500,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "980/C",
    "contestId": 980,
    "index": "C",
    "name": "Posterized",
    "rating": 1700,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "id": "1945/D",
    "contestId": 1945,
    "index": "D",
    "name": "Seraphim the Owl",
    "rating": 1300,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1930/F",
    "contestId": 1930,
    "index": "F",
    "name": "Maximize the Difference",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "id": "1313/E",
    "contestId": 1313,
    "index": "E",
    "name": "Concatenation with intersection",
    "rating": 2700,
    "tags": [
      "data structures",
      "hashing",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "758/B",
    "contestId": 758,
    "index": "B",
    "name": "Blown Garland",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "111/A",
    "contestId": 111,
    "index": "A",
    "name": "Petya and Inequiations",
    "rating": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1917/D",
    "contestId": 1917,
    "index": "D",
    "name": "Yet Another Inversions Problem",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "487/D",
    "contestId": 487,
    "index": "D",
    "name": "Conveyor Belts",
    "rating": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "439/B",
    "contestId": 439,
    "index": "B",
    "name": "Devu, the Dumb Guy",
    "rating": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1771/E",
    "contestId": 1771,
    "index": "E",
    "name": "Hossam and a Letter",
    "rating": 2500,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "847/K",
    "contestId": 847,
    "index": "K",
    "name": "Travel Cards",
    "rating": 1800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1194/F",
    "contestId": 1194,
    "index": "F",
    "name": "Crossword Expert",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "number theory",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "id": "176/E",
    "contestId": 176,
    "index": "E",
    "name": "Archaeology",
    "rating": 3100,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1845/C",
    "contestId": 1845,
    "index": "C",
    "name": "Strong Password",
    "rating": 1400,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "257/A",
    "contestId": 257,
    "index": "A",
    "name": "Sockets",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "587/B",
    "contestId": 587,
    "index": "B",
    "name": "Duff in Beach",
    "rating": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1165/F1",
    "contestId": 1165,
    "index": "F1",
    "name": "Microtransactions (easy version)",
    "rating": 2000,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "418/D",
    "contestId": 418,
    "index": "D",
    "name": "Big Problems for Organizers",
    "rating": 2800,
    "tags": [
      "data structures",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1256/B",
    "contestId": 1256,
    "index": "B",
    "name": "Minimize the Permutation",
    "rating": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "863/E",
    "contestId": 863,
    "index": "E",
    "name": "Turn Off The TV",
    "rating": 2000,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "960/A",
    "contestId": 960,
    "index": "A",
    "name": "Check the string",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "718/A",
    "contestId": 718,
    "index": "A",
    "name": "Efim and Strange Grade",
    "rating": 1700,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "132/E",
    "contestId": 132,
    "index": "E",
    "name": "Bits of merry old England",
    "rating": 2700,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "id": "234/F",
    "contestId": 234,
    "index": "F",
    "name": "Fence",
    "rating": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1140/E",
    "contestId": 1140,
    "index": "E",
    "name": "Palindrome-less Arrays",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "1067/E",
    "contestId": 1067,
    "index": "E",
    "name": "Random Forest Rank",
    "rating": 2800,
    "tags": [
      "dp",
      "graph matchings",
      "math",
      "trees"
    ]
  },
  {
    "id": "978/D",
    "contestId": 978,
    "index": "D",
    "name": "Almost Arithmetic Progression",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1102/D",
    "contestId": 1102,
    "index": "D",
    "name": "Balanced Ternary String",
    "rating": 1500,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1004/D",
    "contestId": 1004,
    "index": "D",
    "name": "Sonya and Matrix",
    "rating": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1423/K",
    "contestId": 1423,
    "index": "K",
    "name": "Lonely Numbers",
    "rating": 1600,
    "tags": [
      "binary search",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1133/A",
    "contestId": 1133,
    "index": "A",
    "name": "Middle of the Contest",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "119/B",
    "contestId": 119,
    "index": "B",
    "name": "Before Exam",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1383/D",
    "contestId": 1383,
    "index": "D",
    "name": "Rearrange",
    "rating": 2800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1253/A",
    "contestId": 1253,
    "index": "A",
    "name": "Single Push",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1536/B",
    "contestId": 1536,
    "index": "B",
    "name": "Prinzessin der Verurteilung",
    "rating": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "703/B",
    "contestId": 703,
    "index": "B",
    "name": "Mishka and trip",
    "rating": 1400,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "33/A",
    "contestId": 33,
    "index": "A",
    "name": "What is for dinner?",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "236/B",
    "contestId": 236,
    "index": "B",
    "name": "Easy Number Challenge",
    "rating": 1300,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "1295/B",
    "contestId": 1295,
    "index": "B",
    "name": "Infinite Prefixes",
    "rating": 1700,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "id": "68/D",
    "contestId": 68,
    "index": "D",
    "name": "Half-decay tree",
    "rating": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "375/D",
    "contestId": 375,
    "index": "D",
    "name": "Tree and Queries",
    "rating": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1851/F",
    "contestId": 1851,
    "index": "F",
    "name": "Lisa and the Martians",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "strings",
      "trees"
    ]
  },
  {
    "id": "883/C",
    "contestId": 883,
    "index": "C",
    "name": "Downloading B++",
    "rating": 2300,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "id": "237/A",
    "contestId": 237,
    "index": "A",
    "name": "Free Cash",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1008/B",
    "contestId": 1008,
    "index": "B",
    "name": "Turn the Rectangles",
    "rating": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "209/A",
    "contestId": 209,
    "index": "A",
    "name": "Multicolored Marbles",
    "rating": 1600,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1195/D1",
    "contestId": 1195,
    "index": "D1",
    "name": "Submarine in the Rybinsk Sea (easy edition)",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "819/C",
    "contestId": 819,
    "index": "C",
    "name": "Mister B and Beacons on Field",
    "rating": 2900,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "1176/D",
    "contestId": 1176,
    "index": "D",
    "name": "Recover it!",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "768/G",
    "contestId": 768,
    "index": "G",
    "name": "The Winds of Winter",
    "rating": 3300,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "549/H",
    "contestId": 549,
    "index": "H",
    "name": "Degenerate Matrix",
    "rating": 2100,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "1693/D",
    "contestId": 1693,
    "index": "D",
    "name": "Decinc Dividing",
    "rating": 2800,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1379/F1",
    "contestId": 1379,
    "index": "F1",
    "name": "Chess Strikes Back (easy version)",
    "rating": 2700,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1620/C",
    "contestId": 1620,
    "index": "C",
    "name": "BA-String",
    "rating": 1800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1428/D",
    "contestId": 1428,
    "index": "D",
    "name": "Bouncing Boomerangs",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1326/D2",
    "contestId": 1326,
    "index": "D2",
    "name": "Prefix-Suffix Palindrome (Hard version)",
    "rating": 1800,
    "tags": [
      "binary search",
      "greedy",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1688/A",
    "contestId": 1688,
    "index": "A",
    "name": "Cirno's Perfect Bitmasks Classroom",
    "rating": 800,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "id": "1702/F",
    "contestId": 1702,
    "index": "F",
    "name": "Equate Multisets",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "222/E",
    "contestId": 222,
    "index": "E",
    "name": "Decoding Genome",
    "rating": 1900,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "546/C",
    "contestId": 546,
    "index": "C",
    "name": "Soldier and Cards",
    "rating": 1400,
    "tags": [
      "brute force",
      "dfs and similar",
      "games"
    ]
  },
  {
    "id": "769/B",
    "contestId": 769,
    "index": "B",
    "name": "News About Credit",
    "rating": 1200,
    "tags": [
      "*special",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1904/D1",
    "contestId": 1904,
    "index": "D1",
    "name": "Set To Max (Easy Version)",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1043/B",
    "contestId": 1043,
    "index": "B",
    "name": "Lost Array",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1868/E",
    "contestId": 1868,
    "index": "E",
    "name": "Min-Sum-Max",
    "rating": 3500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1667/A",
    "contestId": 1667,
    "index": "A",
    "name": "Make it Increasing",
    "rating": 1300,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "138/B",
    "contestId": 138,
    "index": "B",
    "name": "Digits Permutations",
    "rating": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "83/A",
    "contestId": 83,
    "index": "A",
    "name": "Magical Array",
    "rating": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "id": "784/A",
    "contestId": 784,
    "index": "A",
    "name": "Numbers Joke",
    "rating": 1700,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1775/A1",
    "contestId": 1775,
    "index": "A1",
    "name": "Gardener and the Capybaras (easy version)",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "935/A",
    "contestId": 935,
    "index": "A",
    "name": "Fafa and his Company",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "303/D",
    "contestId": 303,
    "index": "D",
    "name": "Rotatable Number",
    "rating": 2600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1348/A",
    "contestId": 1348,
    "index": "A",
    "name": "Phoenix and Balance",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1093/C",
    "contestId": 1093,
    "index": "C",
    "name": "Mishka and the Last Exam",
    "rating": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "557/E",
    "contestId": 557,
    "index": "E",
    "name": "Ann and Half-Palindrome",
    "rating": 2300,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1387/A",
    "contestId": 1387,
    "index": "A",
    "name": "Graph",
    "rating": 2100,
    "tags": [
      "*special",
      "binary search",
      "dfs and similar",
      "dp",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "507/C",
    "contestId": 507,
    "index": "C",
    "name": "Guess Your Way Out!",
    "rating": 1700,
    "tags": [
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "id": "1329/C",
    "contestId": 1329,
    "index": "C",
    "name": "Drazil Likes Heap",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "754/C",
    "contestId": 754,
    "index": "C",
    "name": "Vladik and chat",
    "rating": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1237/B",
    "contestId": 1237,
    "index": "B",
    "name": "Balanced Tunnel",
    "rating": 1300,
    "tags": [
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "989/A",
    "contestId": 989,
    "index": "A",
    "name": "A Blend of Springtime",
    "rating": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1863/B",
    "contestId": 1863,
    "index": "B",
    "name": "Split Sort",
    "rating": 1100,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1255/B",
    "contestId": 1255,
    "index": "B",
    "name": "Fridge Lockers",
    "rating": 1100,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1114/F",
    "contestId": 1114,
    "index": "F",
    "name": "Please, another Queries on Array?",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "math",
      "number theory"
    ]
  },
  {
    "id": "958/C2",
    "contestId": 958,
    "index": "C2",
    "name": "Encryption (medium)",
    "rating": 2000,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1949/E",
    "contestId": 1949,
    "index": "E",
    "name": "Damage per Second",
    "rating": 2900,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1251/E2",
    "contestId": 1251,
    "index": "E2",
    "name": "Voting (Hard Version)",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "808/F",
    "contestId": 808,
    "index": "F",
    "name": "Card Game",
    "rating": 2400,
    "tags": [
      "binary search",
      "flows",
      "graphs"
    ]
  },
  {
    "id": "213/D",
    "contestId": 213,
    "index": "D",
    "name": "Stars",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "id": "1767/C",
    "contestId": 1767,
    "index": "C",
    "name": "Count Binary Strings",
    "rating": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1610/I",
    "contestId": 1610,
    "index": "I",
    "name": "Mashtali vs AtCoder",
    "rating": 3100,
    "tags": [
      "games",
      "trees"
    ]
  },
  {
    "id": "592/C",
    "contestId": 592,
    "index": "C",
    "name": "The Big Race",
    "rating": 1800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "57/E",
    "contestId": 57,
    "index": "E",
    "name": "Chess",
    "rating": 3000,
    "tags": [
      "math",
      "shortest paths"
    ]
  },
  {
    "id": "1075/A",
    "contestId": 1075,
    "index": "A",
    "name": "The King's Race",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1528/A",
    "contestId": 1528,
    "index": "A",
    "name": "Parsa's Humongous Tree",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1551/A",
    "contestId": 1551,
    "index": "A",
    "name": "Polycarp and Coins",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1009/B",
    "contestId": 1009,
    "index": "B",
    "name": "Minimum Ternary String",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "316/C1",
    "contestId": 316,
    "index": "C1",
    "name": "Tidying Up",
    "rating": 2200,
    "tags": [
      "flows"
    ]
  },
  {
    "id": "1794/A",
    "contestId": 1794,
    "index": "A",
    "name": "Prefix and Suffix Array",
    "rating": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "1691/E",
    "contestId": 1691,
    "index": "E",
    "name": "Number of Groups",
    "rating": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1455/G",
    "contestId": 1455,
    "index": "G",
    "name": "Forbidden Value",
    "rating": 2900,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1107/E",
    "contestId": 1107,
    "index": "E",
    "name": "Vasya and Binary String",
    "rating": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1346/D",
    "contestId": 1346,
    "index": "D",
    "name": "Constructing the Dungeon",
    "rating": 1600,
    "tags": [
      "*special",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1838/D",
    "contestId": 1838,
    "index": "D",
    "name": "Bracket Walk",
    "rating": 2100,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "279/A",
    "contestId": 279,
    "index": "A",
    "name": "Point on Spiral",
    "rating": 1400,
    "tags": [
      "brute force",
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "231/A",
    "contestId": 231,
    "index": "A",
    "name": "Team",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1344/D",
    "contestId": 1344,
    "index": "D",
    "name": "Résumé Review",
    "rating": 2700,
    "tags": [
      "binary search",
      "greedy",
      "math"
    ]
  },
  {
    "id": "621/B",
    "contestId": 621,
    "index": "B",
    "name": "Wet Shark and Bishops",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "implementation"
    ]
  },
  {
    "id": "1070/J",
    "contestId": 1070,
    "index": "J",
    "name": "Streets and Avenues in Berhattan",
    "rating": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1862/G",
    "contestId": 1862,
    "index": "G",
    "name": "The Great Equalizer",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "id": "648/D",
    "contestId": 648,
    "index": "D",
    "name": "Собачки и миски",
    "rating": 1900,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1741/D",
    "contestId": 1741,
    "index": "D",
    "name": "Masha and a Beautiful Tree",
    "rating": 1300,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "621/E",
    "contestId": 621,
    "index": "E",
    "name": "Wet Shark and Blocks",
    "rating": 2000,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "1836/A",
    "contestId": 1836,
    "index": "A",
    "name": "Destroyer",
    "rating": 800,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1329/A",
    "contestId": 1329,
    "index": "A",
    "name": "Dreamoon Likes Coloring",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "651/A",
    "contestId": 651,
    "index": "A",
    "name": "Joysticks",
    "rating": 1100,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "291/E",
    "contestId": 291,
    "index": "E",
    "name": "Tree-String Problem",
    "rating": 2000,
    "tags": [
      "*special",
      "dfs and similar",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "483/A",
    "contestId": 483,
    "index": "A",
    "name": "Counterexample",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1765/H",
    "contestId": 1765,
    "index": "H",
    "name": "Hospital Queue",
    "rating": 2200,
    "tags": [
      "binary search",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1619/A",
    "contestId": 1619,
    "index": "A",
    "name": "Square String?",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1523/A",
    "contestId": 1523,
    "index": "A",
    "name": "Game of Life",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "327/D",
    "contestId": 327,
    "index": "D",
    "name": "Block Tower",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1168/A",
    "contestId": 1168,
    "index": "A",
    "name": "Increasing by Modulo",
    "rating": 1700,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "267/A",
    "contestId": 267,
    "index": "A",
    "name": "Subtractions",
    "rating": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "799/D",
    "contestId": 799,
    "index": "D",
    "name": "Field expansion",
    "rating": 2100,
    "tags": [
      "brute force",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1919/A",
    "contestId": 1919,
    "index": "A",
    "name": "Wallet Exchange",
    "rating": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "208/D",
    "contestId": 208,
    "index": "D",
    "name": "Prizes, Prizes, more Prizes",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1848/D",
    "contestId": 1848,
    "index": "D",
    "name": "Vika and Bonuses",
    "rating": 2200,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "242/B",
    "contestId": 242,
    "index": "B",
    "name": "Big Segment",
    "rating": 1100,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "125/B",
    "contestId": 125,
    "index": "B",
    "name": "Simple XML",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1322/E",
    "contestId": 1322,
    "index": "E",
    "name": "Median Mountain Range",
    "rating": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "984/A",
    "contestId": 984,
    "index": "A",
    "name": "Game",
    "rating": 800,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "1384/B2",
    "contestId": 1384,
    "index": "B2",
    "name": "Koa and the Beach (Hard Version)",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1690/E",
    "contestId": 1690,
    "index": "E",
    "name": "Price Maximization",
    "rating": 1500,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1593/D2",
    "contestId": 1593,
    "index": "D2",
    "name": "Half of Same",
    "rating": 1900,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "940/E",
    "contestId": 940,
    "index": "E",
    "name": "Cashback",
    "rating": 2000,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1178/F2",
    "contestId": 1178,
    "index": "F2",
    "name": "Long Colorful Strip",
    "rating": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "630/Q",
    "contestId": 630,
    "index": "Q",
    "name": "Pyramids",
    "rating": 1700,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "145/B",
    "contestId": 145,
    "index": "B",
    "name": "Lucky Number 2",
    "rating": 1800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "601/A",
    "contestId": 601,
    "index": "A",
    "name": "The Two Routes",
    "rating": 1600,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "117/C",
    "contestId": 117,
    "index": "C",
    "name": "Cycle",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1833/G",
    "contestId": 1833,
    "index": "G",
    "name": "Ksyusha and Chinchilla",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "238/C",
    "contestId": 238,
    "index": "C",
    "name": "World Eater Brothers",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1680/A",
    "contestId": 1680,
    "index": "A",
    "name": "Minimums and Maximums",
    "rating": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1970/B1",
    "contestId": 1970,
    "index": "B1",
    "name": "Exact Neighbours (Easy)",
    "rating": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1023/D",
    "contestId": 1023,
    "index": "D",
    "name": "Array Restoration",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "id": "1816/B",
    "contestId": 1816,
    "index": "B",
    "name": "Grid Reconstruction",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "695/E",
    "contestId": 695,
    "index": "E",
    "name": "Huffman Coding on Segment",
    "rating": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1305/B",
    "contestId": 1305,
    "index": "B",
    "name": "Kuroni and Simple Strings",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "551/E",
    "contestId": 551,
    "index": "E",
    "name": "GukiZ and GukiZiana",
    "rating": 2500,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "325/E",
    "contestId": 325,
    "index": "E",
    "name": "The Red Button",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1542/C",
    "contestId": 1542,
    "index": "C",
    "name": "Strange Function",
    "rating": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1808/B",
    "contestId": 1808,
    "index": "B",
    "name": "Playing in a Casino",
    "rating": 1200,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "id": "639/C",
    "contestId": 639,
    "index": "C",
    "name": "Bear and Polynomials",
    "rating": 2200,
    "tags": [
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "id": "573/C",
    "contestId": 573,
    "index": "C",
    "name": "Bear and Drawing",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "493/D",
    "contestId": 493,
    "index": "D",
    "name": "Vasya and Chess",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "games",
      "math"
    ]
  },
  {
    "id": "519/C",
    "contestId": 519,
    "index": "C",
    "name": "A and B and Team Training",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1505/C",
    "contestId": 1505,
    "index": "C",
    "name": "Fibonacci Words",
    "rating": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "537/H",
    "contestId": 537,
    "index": "H",
    "name": "Summer Dichotomy",
    "rating": 3200,
    "tags": [
      "2-sat",
      "data structures",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "id": "1842/H",
    "contestId": 1842,
    "index": "H",
    "name": "Tenzing and Random Real Numbers",
    "rating": 3000,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "157/A",
    "contestId": 157,
    "index": "A",
    "name": "Game Outcome",
    "rating": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1399/F",
    "contestId": 1399,
    "index": "F",
    "name": "Yet Another Segments Subset",
    "rating": 2300,
    "tags": [
      "data structures",
      "dp",
      "graphs",
      "sortings"
    ]
  },
  {
    "id": "731/E",
    "contestId": 731,
    "index": "E",
    "name": "Funny Game",
    "rating": 2200,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "id": "33/D",
    "contestId": 33,
    "index": "D",
    "name": "Knights",
    "rating": 2000,
    "tags": [
      "geometry",
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "529/B",
    "contestId": 529,
    "index": "B",
    "name": "Group Photo 2 (online mirror version)",
    "rating": 1900,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1543/B",
    "contestId": 1543,
    "index": "B",
    "name": "Customising the Track",
    "rating": 900,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "id": "771/D",
    "contestId": 771,
    "index": "D",
    "name": "Bear and Company",
    "rating": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1903/D2",
    "contestId": 1903,
    "index": "D2",
    "name": "Maximum And Queries (hard version)",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1333/F",
    "contestId": 1333,
    "index": "F",
    "name": "Kate and imperfection",
    "rating": 2200,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "167/B",
    "contestId": 167,
    "index": "B",
    "name": "Wizards and Huge Prize",
    "rating": 1800,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1051/D",
    "contestId": 1051,
    "index": "D",
    "name": "Bicolorings",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1672/F2",
    "contestId": 1672,
    "index": "F2",
    "name": "Checker for Array Shuffling",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "313/A",
    "contestId": 313,
    "index": "A",
    "name": "Ilya and Bank Account",
    "rating": 900,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "1736/C2",
    "contestId": 1736,
    "index": "C2",
    "name": "Good Subarrays (Hard Version)",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "59/A",
    "contestId": 59,
    "index": "A",
    "name": "Word",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1391/D",
    "contestId": 1391,
    "index": "D",
    "name": "505",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1278/D",
    "contestId": 1278,
    "index": "D",
    "name": "Segment Tree",
    "rating": 2100,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "960/C",
    "contestId": 960,
    "index": "C",
    "name": "Subsequence Counting",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "144/A",
    "contestId": 144,
    "index": "A",
    "name": "Arrival of the General",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "777/E",
    "contestId": 777,
    "index": "E",
    "name": "Hanoi Factory",
    "rating": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "635/A",
    "contestId": 635,
    "index": "A",
    "name": "Orchestra",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1784/A",
    "contestId": 1784,
    "index": "A",
    "name": "Monsters (easy version)",
    "rating": 1000,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1461/F",
    "contestId": 1461,
    "index": "F",
    "name": "Mathematical Expression",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1254/B2",
    "contestId": 1254,
    "index": "B2",
    "name": "Send Boxes to Alice (Hard Version)",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "id": "1389/E",
    "contestId": 1389,
    "index": "E",
    "name": "Calendar Ambiguity",
    "rating": 2200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "750/G",
    "contestId": 750,
    "index": "G",
    "name": "New Year and Binary Tree Paths",
    "rating": 3200,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1367/E",
    "contestId": 1367,
    "index": "E",
    "name": "Necklace Assembly",
    "rating": 1900,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1810/C",
    "contestId": 1810,
    "index": "C",
    "name": "Make It Permutation",
    "rating": 1300,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "592/A",
    "contestId": 592,
    "index": "A",
    "name": "PawnChess",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1842/G",
    "contestId": 1842,
    "index": "G",
    "name": "Tenzing and Random Operations",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1520/G",
    "contestId": 1520,
    "index": "G",
    "name": "To Go Or Not To Go?",
    "rating": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "413/D",
    "contestId": 413,
    "index": "D",
    "name": "2048",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1605/E",
    "contestId": 1605,
    "index": "E",
    "name": "Array Equalizer",
    "rating": 2400,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math",
      "number theory",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "963/D",
    "contestId": 963,
    "index": "D",
    "name": "Frequency of String",
    "rating": 2500,
    "tags": [
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "774/L",
    "contestId": 774,
    "index": "L",
    "name": "Bars",
    "rating": 2000,
    "tags": [
      "*special",
      "binary search"
    ]
  },
  {
    "id": "367/D",
    "contestId": 367,
    "index": "D",
    "name": "Sereja and Sets",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "dfs and similar"
    ]
  },
  {
    "id": "1623/B",
    "contestId": 1623,
    "index": "B",
    "name": "Game on Ranges",
    "rating": 1100,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1700/C",
    "contestId": 1700,
    "index": "C",
    "name": "Helping the Nature",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1562/E",
    "contestId": 1562,
    "index": "E",
    "name": "Rescue Niwen!",
    "rating": 2500,
    "tags": [
      "dp",
      "greedy",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "127/A",
    "contestId": 127,
    "index": "A",
    "name": "Wasted Time",
    "rating": 900,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1175/D",
    "contestId": 1175,
    "index": "D",
    "name": "Array Splitting",
    "rating": 1900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1769/D3",
    "contestId": 1769,
    "index": "D3",
    "name": "Игра в Девятку III",
    "rating": 2300,
    "tags": [
      "*special",
      "brute force"
    ]
  },
  {
    "id": "1300/B",
    "contestId": 1300,
    "index": "B",
    "name": "Assigning to Classes",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "847/F",
    "contestId": 847,
    "index": "F",
    "name": "Berland Elections",
    "rating": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "611/C",
    "contestId": 611,
    "index": "C",
    "name": "New Year and Domino",
    "rating": 1500,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1943/A",
    "contestId": 1943,
    "index": "A",
    "name": "MEX Game 1",
    "rating": 1300,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "id": "1393/C",
    "contestId": 1393,
    "index": "C",
    "name": "Pinkie Pie Eats Patty-cakes",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1140/D",
    "contestId": 1140,
    "index": "D",
    "name": "Minimum Triangulation",
    "rating": 1200,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1349/C",
    "contestId": 1349,
    "index": "C",
    "name": "Orac and Game of Life",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "809/A",
    "contestId": 809,
    "index": "A",
    "name": "Do you want a date?",
    "rating": 1500,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1873/E",
    "contestId": 1873,
    "index": "E",
    "name": "Building an Aquarium",
    "rating": 1100,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "id": "180/C",
    "contestId": 180,
    "index": "C",
    "name": "Letter",
    "rating": 1400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1834/E",
    "contestId": 1834,
    "index": "E",
    "name": "MEX of LCM",
    "rating": 2300,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "283/D",
    "contestId": 283,
    "index": "D",
    "name": "Cows and Cool Sequences",
    "rating": 2400,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1475/D",
    "contestId": 1475,
    "index": "D",
    "name": "Cleaning the Phone",
    "rating": 1800,
    "tags": [
      "binary search",
      "dp",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1652/F",
    "contestId": 1652,
    "index": "F",
    "name": "Minimal String Xoration",
    "rating": 2800,
    "tags": [
      "bitmasks",
      "data structures",
      "strings"
    ]
  },
  {
    "id": "1284/B",
    "contestId": 1284,
    "index": "B",
    "name": "New Year and Ascent Sequence",
    "rating": 1400,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1010/F",
    "contestId": 1010,
    "index": "F",
    "name": "Tree",
    "rating": 3400,
    "tags": [
      "fft",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1793/F",
    "contestId": 1793,
    "index": "F",
    "name": "Rebrending",
    "rating": 2600,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "id": "797/D",
    "contestId": 797,
    "index": "D",
    "name": "Broken BST",
    "rating": 2100,
    "tags": [
      "data structures",
      "dfs and similar"
    ]
  },
  {
    "id": "208/A",
    "contestId": 208,
    "index": "A",
    "name": "Dubstep",
    "rating": 900,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "507/A",
    "contestId": 507,
    "index": "A",
    "name": "Amr and Music",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "720/E",
    "contestId": 720,
    "index": "E",
    "name": "Cipher",
    "rating": 3100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "799/C",
    "contestId": 799,
    "index": "C",
    "name": "Fountains",
    "rating": 1800,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1541/A",
    "contestId": 1541,
    "index": "A",
    "name": "Pretty Permutations",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "893/A",
    "contestId": 893,
    "index": "A",
    "name": "Chess For Three",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1807/G1",
    "contestId": 1807,
    "index": "G1",
    "name": "Subsequence Addition (Easy Version)",
    "rating": 1100,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "721/E",
    "contestId": 721,
    "index": "E",
    "name": "Road to Home",
    "rating": 2700,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "859/E",
    "contestId": 859,
    "index": "E",
    "name": "Desk Disorder",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1104/A",
    "contestId": 1104,
    "index": "A",
    "name": "Splitting into digits",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "39/G",
    "contestId": 39,
    "index": "G",
    "name": "Inverse Function",
    "rating": 2400,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1446/A",
    "contestId": 1446,
    "index": "A",
    "name": "Knapsack",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1989/D",
    "contestId": 1989,
    "index": "D",
    "name": "Smithing Skill",
    "rating": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "702/A",
    "contestId": 702,
    "index": "A",
    "name": "Maximum Increase",
    "rating": 800,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1743/F",
    "contestId": 1743,
    "index": "F",
    "name": "Intersection and Union",
    "rating": 2300,
    "tags": [
      "data structures",
      "dp",
      "matrices",
      "probabilities"
    ]
  },
  {
    "id": "958/E1",
    "contestId": 958,
    "index": "E1",
    "name": "Guard Duty (easy)",
    "rating": 1600,
    "tags": [
      "brute force",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "id": "13/D",
    "contestId": 13,
    "index": "D",
    "name": "Triangles",
    "rating": 2600,
    "tags": [
      "dp",
      "geometry"
    ]
  },
  {
    "id": "1730/E",
    "contestId": 1730,
    "index": "E",
    "name": "Maximums and Minimums",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "data structures",
      "divide and conquer",
      "number theory"
    ]
  },
  {
    "id": "537/D",
    "contestId": 537,
    "index": "D",
    "name": "Weird Chess",
    "rating": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "513/B1",
    "contestId": 513,
    "index": "B1",
    "name": "Permutations",
    "rating": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1932/F",
    "contestId": 1932,
    "index": "F",
    "name": "Feed Cats",
    "rating": 1900,
    "tags": [
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "id": "1083/F",
    "contestId": 1083,
    "index": "F",
    "name": "The Fair Nut and Amusing Xor",
    "rating": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1322/F",
    "contestId": 1322,
    "index": "F",
    "name": "Assigning Fares",
    "rating": 3500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "1421/A",
    "contestId": 1421,
    "index": "A",
    "name": "XORwice",
    "rating": 800,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1245/B",
    "contestId": 1245,
    "index": "B",
    "name": "Restricted RPS",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "10/D",
    "contestId": 10,
    "index": "D",
    "name": "LCIS",
    "rating": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "44/F",
    "contestId": 44,
    "index": "F",
    "name": "BerPaint",
    "rating": 2700,
    "tags": [
      "geometry",
      "graphs"
    ]
  },
  {
    "id": "702/C",
    "contestId": 702,
    "index": "C",
    "name": "Cellular Network",
    "rating": 1500,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1566/F",
    "contestId": 1566,
    "index": "F",
    "name": "Points Movement",
    "rating": 2600,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1672/A",
    "contestId": 1672,
    "index": "A",
    "name": "Log Chopping",
    "rating": 800,
    "tags": [
      "games",
      "implementation",
      "math"
    ]
  },
  {
    "id": "489/F",
    "contestId": 489,
    "index": "F",
    "name": "Special Matrices",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "724/A",
    "contestId": 724,
    "index": "A",
    "name": "Checking the Calendar",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1411/C",
    "contestId": 1411,
    "index": "C",
    "name": "Peaceful Rooks",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "799/B",
    "contestId": 799,
    "index": "B",
    "name": "T-shirt buying",
    "rating": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1066/E",
    "contestId": 1066,
    "index": "E",
    "name": "Binary Numbers AND Sum",
    "rating": 1700,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "id": "981/B",
    "contestId": 981,
    "index": "B",
    "name": "Businessmen Problems",
    "rating": 1000,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "526/G",
    "contestId": 526,
    "index": "G",
    "name": "Spiders Evil Plan",
    "rating": 3300,
    "tags": [
      "greedy",
      "trees"
    ]
  },
  {
    "id": "698/A",
    "contestId": 698,
    "index": "A",
    "name": "Vacations",
    "rating": 1400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "432/C",
    "contestId": 432,
    "index": "C",
    "name": "Prime Swaps",
    "rating": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1512/F",
    "contestId": 1512,
    "index": "F",
    "name": "Education",
    "rating": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1797/F",
    "contestId": 1797,
    "index": "F",
    "name": "Li Hua and Path",
    "rating": 3000,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "trees"
    ]
  },
  {
    "id": "1472/D",
    "contestId": 1472,
    "index": "D",
    "name": "Even-Odd Game",
    "rating": 1200,
    "tags": [
      "dp",
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "43/C",
    "contestId": 43,
    "index": "C",
    "name": "Lucky Tickets",
    "rating": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "380/B",
    "contestId": 380,
    "index": "B",
    "name": "Sereja and Tree",
    "rating": 2400,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1371/E1",
    "contestId": 1371,
    "index": "E1",
    "name": "Asterism (Easy Version)",
    "rating": 1900,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "1389/F",
    "contestId": 1389,
    "index": "F",
    "name": "Bicolored Segments",
    "rating": 2600,
    "tags": [
      "data structures",
      "dp",
      "graph matchings",
      "sortings"
    ]
  },
  {
    "id": "509/B",
    "contestId": 509,
    "index": "B",
    "name": "Painting Pebbles",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "628/D",
    "contestId": 628,
    "index": "D",
    "name": "Magic Numbers",
    "rating": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "75/B",
    "contestId": 75,
    "index": "B",
    "name": "Facetook Priority Wall",
    "rating": 1500,
    "tags": [
      "expression parsing",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1366/E",
    "contestId": 1366,
    "index": "E",
    "name": "Two Arrays",
    "rating": 2100,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "1332/E",
    "contestId": 1332,
    "index": "E",
    "name": "Height All the Same",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "matrices"
    ]
  },
  {
    "id": "365/A",
    "contestId": 365,
    "index": "A",
    "name": "Good Number",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "960/E",
    "contestId": 960,
    "index": "E",
    "name": "Alternating Tree",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "1439/A2",
    "contestId": 1439,
    "index": "A2",
    "name": "Binary Table (Hard Version)",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1778/A",
    "contestId": 1778,
    "index": "A",
    "name": "Flip Flop Sum",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1452/G",
    "contestId": 1452,
    "index": "G",
    "name": "Game On Tree",
    "rating": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "163/B",
    "contestId": 163,
    "index": "B",
    "name": "Lemmings",
    "rating": 2000,
    "tags": [
      "binary search"
    ]
  },
  {
    "id": "91/E",
    "contestId": 91,
    "index": "E",
    "name": "Igloo Skyscraper",
    "rating": 2500,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "id": "1784/C",
    "contestId": 1784,
    "index": "C",
    "name": "Monsters (hard version)",
    "rating": 2200,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "549/G",
    "contestId": 549,
    "index": "G",
    "name": "Happy Line",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "766/D",
    "contestId": 766,
    "index": "D",
    "name": "Mahmoud and a Dictionary",
    "rating": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1005/A",
    "contestId": 1005,
    "index": "A",
    "name": "Tanya and Stairways",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1452/D",
    "contestId": 1452,
    "index": "D",
    "name": "Radio Towers",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1916/H2",
    "contestId": 1916,
    "index": "H2",
    "name": "Matrix Rank (Hard Version)",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "matrices",
      "string suffix structures"
    ]
  },
  {
    "id": "1198/F",
    "contestId": 1198,
    "index": "F",
    "name": "GCD Groups 2",
    "rating": 2900,
    "tags": [
      "greedy",
      "number theory",
      "probabilities"
    ]
  },
  {
    "id": "1267/K",
    "contestId": 1267,
    "index": "K",
    "name": "Key Storage",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1155/C",
    "contestId": 1155,
    "index": "C",
    "name": "Alarm Clocks Everywhere",
    "rating": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1095/B",
    "contestId": 1095,
    "index": "B",
    "name": "Array Stabilization",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "717/F",
    "contestId": 717,
    "index": "F",
    "name": "Heroes of Making Magic III",
    "rating": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "554/B",
    "contestId": 554,
    "index": "B",
    "name": "Ohana Cleans Up",
    "rating": 1200,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "59/B",
    "contestId": 59,
    "index": "B",
    "name": "Fortune Telling",
    "rating": 1200,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "750/A",
    "contestId": 750,
    "index": "A",
    "name": "New Year and Hurry",
    "rating": 800,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "267/B",
    "contestId": 267,
    "index": "B",
    "name": "Dominoes",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1992/G",
    "contestId": 1992,
    "index": "G",
    "name": "Ultra-Meow",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "342/A",
    "contestId": 342,
    "index": "A",
    "name": "Xenia and Divisors",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "682/A",
    "contestId": 682,
    "index": "A",
    "name": "Alyona and Numbers",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "507/D",
    "contestId": 507,
    "index": "D",
    "name": "The Maths Lecture",
    "rating": 2200,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1606/F",
    "contestId": 1606,
    "index": "F",
    "name": "Tree Queries",
    "rating": 2800,
    "tags": [
      "brute force",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1955/F",
    "contestId": 1955,
    "index": "F",
    "name": "Unfair Game",
    "rating": 1800,
    "tags": [
      "dp",
      "games",
      "greedy",
      "math",
      "schedules"
    ]
  },
  {
    "id": "1618/D",
    "contestId": 1618,
    "index": "D",
    "name": "Array and Operations",
    "rating": 1300,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "686/A",
    "contestId": 686,
    "index": "A",
    "name": "Free Ice Cream",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1184/D2",
    "contestId": 1184,
    "index": "D2",
    "name": "Parallel Universes (Hard)",
    "rating": 3100,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "id": "478/C",
    "contestId": 478,
    "index": "C",
    "name": "Table Decorations",
    "rating": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1882/E1",
    "contestId": 1882,
    "index": "E1",
    "name": "Two Permutations (Easy Version)",
    "rating": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "388/C",
    "contestId": 388,
    "index": "C",
    "name": "Fox and Card Game",
    "rating": 2000,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "962/A",
    "contestId": 962,
    "index": "A",
    "name": "Equator",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1184/B1",
    "contestId": 1184,
    "index": "B1",
    "name": "The Doctor Meets Vader (Easy)",
    "rating": 1400,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "id": "1632/D",
    "contestId": 1632,
    "index": "D",
    "name": "New Year Concert",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1012/C",
    "contestId": 1012,
    "index": "C",
    "name": "Hills",
    "rating": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "337/A",
    "contestId": 337,
    "index": "A",
    "name": "Puzzles",
    "rating": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "576/B",
    "contestId": 576,
    "index": "B",
    "name": "Invariance of Tree",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1119/E",
    "contestId": 1119,
    "index": "E",
    "name": "Pavel and Triangles",
    "rating": 1900,
    "tags": [
      "brute force",
      "dp",
      "fft",
      "greedy",
      "ternary search"
    ]
  },
  {
    "id": "1255/A",
    "contestId": 1255,
    "index": "A",
    "name": "Changing Volume",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1400/E",
    "contestId": 1400,
    "index": "E",
    "name": "Clear the Multiset",
    "rating": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1381/A2",
    "contestId": 1381,
    "index": "A2",
    "name": "Prefix Flip (Hard Version)",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "445/B",
    "contestId": 445,
    "index": "B",
    "name": "DZY Loves Chemistry",
    "rating": 1400,
    "tags": [
      "dfs and similar",
      "dsu",
      "greedy"
    ]
  },
  {
    "id": "480/D",
    "contestId": 480,
    "index": "D",
    "name": "Parcels",
    "rating": 2600,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1879/F",
    "contestId": 1879,
    "index": "F",
    "name": "Last Man Standing",
    "rating": 2800,
    "tags": [
      "brute force",
      "data structures",
      "number theory"
    ]
  },
  {
    "id": "1313/D",
    "contestId": 1313,
    "index": "D",
    "name": "Happy New Year",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "715/B",
    "contestId": 715,
    "index": "B",
    "name": "Complete The Graph",
    "rating": 2300,
    "tags": [
      "binary search",
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1425/D",
    "contestId": 1425,
    "index": "D",
    "name": "Danger of Mad Snakes",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "802/B",
    "contestId": 802,
    "index": "B",
    "name": "Heidi and Library (medium)",
    "rating": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1673/A",
    "contestId": 1673,
    "index": "A",
    "name": "Subtle Substring Subtraction",
    "rating": 800,
    "tags": [
      "games",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "571/C",
    "contestId": 571,
    "index": "C",
    "name": "CNF 2",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "765/B",
    "contestId": 765,
    "index": "B",
    "name": "Code obfuscation",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "279/B",
    "contestId": 279,
    "index": "B",
    "name": "Books",
    "rating": 1400,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "59/C",
    "contestId": 59,
    "index": "C",
    "name": "Title",
    "rating": 1600,
    "tags": [
      "expression parsing"
    ]
  },
  {
    "id": "1949/B",
    "contestId": 1949,
    "index": "B",
    "name": "Charming Meals",
    "rating": 1500,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "299/A",
    "contestId": 299,
    "index": "A",
    "name": "Ksusha and Array",
    "rating": 1000,
    "tags": [
      "brute force",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "1967/E2",
    "contestId": 1967,
    "index": "E2",
    "name": "Again Counting Arrays (Hard Version)",
    "rating": 3500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "984/B",
    "contestId": 984,
    "index": "B",
    "name": "Minesweeper",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1970/A2",
    "contestId": 1970,
    "index": "A2",
    "name": "Balanced Unshuffle (Medium)",
    "rating": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "id": "1043/D",
    "contestId": 1043,
    "index": "D",
    "name": "Mysterious Crime",
    "rating": 1700,
    "tags": [
      "brute force",
      "combinatorics",
      "math",
      "meet-in-the-middle",
      "two pointers"
    ]
  },
  {
    "id": "1647/C",
    "contestId": 1647,
    "index": "C",
    "name": "Madoka and Childish Pranks",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1280/C",
    "contestId": 1280,
    "index": "C",
    "name": "Jeremy Bearimy",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "337/E",
    "contestId": 337,
    "index": "E",
    "name": "Divisor Tree",
    "rating": 2200,
    "tags": [
      "brute force",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "1310/F",
    "contestId": 1310,
    "index": "F",
    "name": "Bad Cryptography",
    "rating": 3400,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1715/C",
    "contestId": 1715,
    "index": "C",
    "name": "Monoblock",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1611/B",
    "contestId": 1611,
    "index": "B",
    "name": "Team Composition: Programmers and Mathematicians",
    "rating": 800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "792/C",
    "contestId": 792,
    "index": "C",
    "name": "Divide by Three",
    "rating": 2000,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1801/E",
    "contestId": 1801,
    "index": "E",
    "name": "Gasoline prices",
    "rating": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "hashing",
      "trees"
    ]
  },
  {
    "id": "793/E",
    "contestId": 793,
    "index": "E",
    "name": "Problem of offices",
    "rating": 2900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1714/G",
    "contestId": 1714,
    "index": "G",
    "name": "Path Prefixes",
    "rating": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1767/F",
    "contestId": 1767,
    "index": "F",
    "name": "Two Subtrees",
    "rating": 3100,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1493/E",
    "contestId": 1493,
    "index": "E",
    "name": "Enormous XOR",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1477/E",
    "contestId": 1477,
    "index": "E",
    "name": "Nezzar and Tournaments",
    "rating": 3300,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "637/A",
    "contestId": 637,
    "index": "A",
    "name": "Voting for Photos",
    "rating": 1000,
    "tags": [
      "*special",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1628/E",
    "contestId": 1628,
    "index": "E",
    "name": "Groceries in Meteor Town",
    "rating": 3100,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "id": "1437/C",
    "contestId": 1437,
    "index": "C",
    "name": "Chef Monocarp",
    "rating": 1800,
    "tags": [
      "dp",
      "flows",
      "graph matchings",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1141/F1",
    "contestId": 1141,
    "index": "F1",
    "name": "Same Sum Blocks (Easy)",
    "rating": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "283/B",
    "contestId": 283,
    "index": "B",
    "name": "Cow Program",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "294/C",
    "contestId": 294,
    "index": "C",
    "name": "Shaass and Lights",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "number theory"
    ]
  },
  {
    "id": "1678/B1",
    "contestId": 1678,
    "index": "B1",
    "name": "Tokitsukaze and Good 01-String (easy version)",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1791/G2",
    "contestId": 1791,
    "index": "G2",
    "name": "Teleporters (Hard Version)",
    "rating": 1900,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1669/G",
    "contestId": 1669,
    "index": "G",
    "name": "Fall Down",
    "rating": 1200,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "id": "1763/D",
    "contestId": 1763,
    "index": "D",
    "name": "Valid Bitonic Permutations",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1263/E",
    "contestId": 1263,
    "index": "E",
    "name": "Editor",
    "rating": 2100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "734/D",
    "contestId": 734,
    "index": "D",
    "name": "Anton and Chess",
    "rating": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1582/F2",
    "contestId": 1582,
    "index": "F2",
    "name": "Korney Korneevich and XOR (hard version)",
    "rating": 2400,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1862/B",
    "contestId": 1862,
    "index": "B",
    "name": "Sequence Game",
    "rating": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "414/D",
    "contestId": 414,
    "index": "D",
    "name": "Mashmokh and Water Tanks",
    "rating": 2300,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "920/D",
    "contestId": 920,
    "index": "D",
    "name": "Tanks",
    "rating": 2400,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1379/F2",
    "contestId": 1379,
    "index": "F2",
    "name": "Chess Strikes Back (hard version)",
    "rating": 2800,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "id": "675/A",
    "contestId": 675,
    "index": "A",
    "name": "Infinite Sequence",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1234/A",
    "contestId": 1234,
    "index": "A",
    "name": "Equalize Prices Again",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1461/D",
    "contestId": 1461,
    "index": "D",
    "name": "Divide and Summarize",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1714/F",
    "contestId": 1714,
    "index": "F",
    "name": "Build a Tree and That Is It",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1107/A",
    "contestId": 1107,
    "index": "A",
    "name": "Digits Sequence Dividing",
    "rating": 900,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1313/C2",
    "contestId": 1313,
    "index": "C2",
    "name": "Skyscrapers (hard version)",
    "rating": 1900,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "62/D",
    "contestId": 62,
    "index": "D",
    "name": "Wormhouse",
    "rating": 2300,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1419/A",
    "contestId": 1419,
    "index": "A",
    "name": "Digit Game",
    "rating": 900,
    "tags": [
      "games",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "839/A",
    "contestId": 839,
    "index": "A",
    "name": "Arya and Bran",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1083/B",
    "contestId": 1083,
    "index": "B",
    "name": "The Fair Nut and Strings",
    "rating": 2000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "113/C",
    "contestId": 113,
    "index": "C",
    "name": "Double Happiness",
    "rating": 2200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1849/F",
    "contestId": 1849,
    "index": "F",
    "name": "XOR Partition",
    "rating": 2700,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "divide and conquer",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "16/A",
    "contestId": 16,
    "index": "A",
    "name": "Flag",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "441/D",
    "contestId": 441,
    "index": "D",
    "name": "Valera and Swaps",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "implementation",
      "math",
      "string suffix structures"
    ]
  },
  {
    "id": "1428/C",
    "contestId": 1428,
    "index": "C",
    "name": "ABBB",
    "rating": 1100,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1776/H",
    "contestId": 1776,
    "index": "H",
    "name": "Beppa and SwerChat",
    "rating": 1300,
    "tags": [
      "two pointers"
    ]
  },
  {
    "id": "292/A",
    "contestId": 292,
    "index": "A",
    "name": "SMSC",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1363/C",
    "contestId": 1363,
    "index": "C",
    "name": "Game On Leaves",
    "rating": 1600,
    "tags": [
      "games",
      "trees"
    ]
  },
  {
    "id": "1738/D",
    "contestId": 1738,
    "index": "D",
    "name": "Permutation Addicts",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "241/G",
    "contestId": 241,
    "index": "G",
    "name": "Challenging Balloons",
    "rating": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "917/E",
    "contestId": 917,
    "index": "E",
    "name": "Upside Down",
    "rating": 3400,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "id": "730/A",
    "contestId": 730,
    "index": "A",
    "name": "Toda 2",
    "rating": 1800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1358/D",
    "contestId": 1358,
    "index": "D",
    "name": "The Best Vacation",
    "rating": 1900,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "17/C",
    "contestId": 17,
    "index": "C",
    "name": "Balance",
    "rating": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "883/L",
    "contestId": 883,
    "index": "L",
    "name": "Berland.Taxi",
    "rating": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "630/O",
    "contestId": 630,
    "index": "O",
    "name": "Arrow",
    "rating": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1941/E",
    "contestId": 1941,
    "index": "E",
    "name": "Rudolf and k Bridges",
    "rating": 1600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "958/F2",
    "contestId": 958,
    "index": "F2",
    "name": "Lightsabers (medium)",
    "rating": 1800,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "id": "552/E",
    "contestId": 552,
    "index": "E",
    "name": "Vanya and Brackets",
    "rating": 2100,
    "tags": [
      "brute force",
      "dp",
      "expression parsing",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1055/C",
    "contestId": 1055,
    "index": "C",
    "name": "Lucky Days",
    "rating": 1900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1580/C",
    "contestId": 1580,
    "index": "C",
    "name": "Train Maintenance",
    "rating": 2200,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1466/H",
    "contestId": 1466,
    "index": "H",
    "name": "Finding satisfactory solutions",
    "rating": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "id": "526/B",
    "contestId": 526,
    "index": "B",
    "name": "Om Nom and Dark Park",
    "rating": 1400,
    "tags": [
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1342/E",
    "contestId": 1342,
    "index": "E",
    "name": "Placing Rooks",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "id": "8/D",
    "contestId": 8,
    "index": "D",
    "name": "Two Friends",
    "rating": 2600,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "id": "614/A",
    "contestId": 614,
    "index": "A",
    "name": "Link/Cut Tree",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "678/A",
    "contestId": 678,
    "index": "A",
    "name": "Johny Likes Numbers",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "798/D",
    "contestId": 798,
    "index": "D",
    "name": "Mike and distribution",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "513/G1",
    "contestId": 513,
    "index": "G1",
    "name": "Inversions problem",
    "rating": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "581/B",
    "contestId": 581,
    "index": "B",
    "name": "Luxurious Houses",
    "rating": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "651/B",
    "contestId": 651,
    "index": "B",
    "name": "Beautiful Paintings",
    "rating": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "869/A",
    "contestId": 869,
    "index": "A",
    "name": "The Artful Expedient",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1207/C",
    "contestId": 1207,
    "index": "C",
    "name": "Gas Pipeline",
    "rating": 1500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "904/C",
    "contestId": 904,
    "index": "C",
    "name": "Shockers",
    "rating": 1600,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "802/G",
    "contestId": 802,
    "index": "G",
    "name": "Fake News (easy)",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "644/B",
    "contestId": 644,
    "index": "B",
    "name": "Processing Queries",
    "rating": 1700,
    "tags": [
      "*special",
      "constructive algorithms",
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "1333/E",
    "contestId": 1333,
    "index": "E",
    "name": "Road to 1600",
    "rating": 2400,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "1132/C",
    "contestId": 1132,
    "index": "C",
    "name": "Painting the Fence",
    "rating": 1700,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "228/D",
    "contestId": 228,
    "index": "D",
    "name": "Zigzag",
    "rating": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "696/C",
    "contestId": 696,
    "index": "C",
    "name": "PLEASE",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "matrices"
    ]
  },
  {
    "id": "1178/G",
    "contestId": 1178,
    "index": "G",
    "name": "The Awesomest Vertex",
    "rating": 3000,
    "tags": [
      "data structures",
      "dfs and similar"
    ]
  },
  {
    "id": "1558/A",
    "contestId": 1558,
    "index": "A",
    "name": "Charmed by the Game",
    "rating": 1300,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1263/C",
    "contestId": 1263,
    "index": "C",
    "name": "Everyone is a Winner!",
    "rating": 1400,
    "tags": [
      "binary search",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "id": "1400/B",
    "contestId": 1400,
    "index": "B",
    "name": "RPG Protagonist",
    "rating": 1700,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "852/E",
    "contestId": 852,
    "index": "E",
    "name": "Casinos and travel",
    "rating": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1603/B",
    "contestId": 1603,
    "index": "B",
    "name": "Moderate Modular Mode",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "48/C",
    "contestId": 48,
    "index": "C",
    "name": "The Race",
    "rating": 1800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "910/B",
    "contestId": 910,
    "index": "B",
    "name": "Door Frames",
    "rating": 1600,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "717/D",
    "contestId": 717,
    "index": "D",
    "name": "Dexterina’s Lab",
    "rating": 1900,
    "tags": [
      "games",
      "matrices",
      "probabilities"
    ]
  },
  {
    "id": "1954/E",
    "contestId": 1954,
    "index": "E",
    "name": "Chain Reaction",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1000/F",
    "contestId": 1000,
    "index": "F",
    "name": "One Occurrence",
    "rating": 2400,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "id": "1771/B",
    "contestId": 1771,
    "index": "B",
    "name": "Hossam and Friends",
    "rating": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "1037/C",
    "contestId": 1037,
    "index": "C",
    "name": "Equalize",
    "rating": 1300,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1238/C",
    "contestId": 1238,
    "index": "C",
    "name": "Standard Free2play",
    "rating": 1600,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1575/M",
    "contestId": 1575,
    "index": "M",
    "name": "Managing Telephone Poles",
    "rating": 2400,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "id": "234/C",
    "contestId": 234,
    "index": "C",
    "name": "Weather",
    "rating": 1300,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "638/B",
    "contestId": 638,
    "index": "B",
    "name": "Making Genome in Berland",
    "rating": 1500,
    "tags": [
      "*special",
      "dfs and similar",
      "strings"
    ]
  },
  {
    "id": "1983/G",
    "contestId": 1983,
    "index": "G",
    "name": "Your Loss",
    "rating": 3000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "trees"
    ]
  },
  {
    "id": "587/A",
    "contestId": 587,
    "index": "A",
    "name": "Duff and Weight Lifting",
    "rating": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "784/D",
    "contestId": 784,
    "index": "D",
    "name": "Touchy-Feely Palindromes",
    "rating": 1900,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1581/A",
    "contestId": 1581,
    "index": "A",
    "name": "CQXYM Count Permutations",
    "rating": 800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1657/D",
    "contestId": 1657,
    "index": "D",
    "name": "For Gamers. By Gamers.",
    "rating": 2000,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1955/D",
    "contestId": 1955,
    "index": "D",
    "name": "Inaccurate Subsequence Search",
    "rating": 1400,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "1516/B",
    "contestId": 1516,
    "index": "B",
    "name": "AGAGA XOOORRR",
    "rating": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "840/A",
    "contestId": 840,
    "index": "A",
    "name": "Leha and Function",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "1985/C",
    "contestId": 1985,
    "index": "C",
    "name": "Good Prefixes",
    "rating": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1009/E",
    "contestId": 1009,
    "index": "E",
    "name": "Intercity Travelling",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1038/D",
    "contestId": 1038,
    "index": "D",
    "name": "Slime",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1369/A",
    "contestId": 1369,
    "index": "A",
    "name": "FashionabLee",
    "rating": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "110/B",
    "contestId": 110,
    "index": "B",
    "name": "Lucky String",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "1726/F",
    "contestId": 1726,
    "index": "F",
    "name": "Late For Work (submissions are not allowed)",
    "rating": 2900,
    "tags": [
      "data structures",
      "greedy",
      "schedules",
      "shortest paths"
    ]
  },
  {
    "id": "1864/I",
    "contestId": 1864,
    "index": "I",
    "name": "Future Dominators",
    "rating": 3500,
    "tags": [
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1494/D",
    "contestId": 1494,
    "index": "D",
    "name": "Dogeforces",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "725/A",
    "contestId": 725,
    "index": "A",
    "name": "Jumping Ball",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "932/A",
    "contestId": 932,
    "index": "A",
    "name": "Palindromic Supersequence",
    "rating": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "691/A",
    "contestId": 691,
    "index": "A",
    "name": "Fashion in Berland",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "234/D",
    "contestId": 234,
    "index": "D",
    "name": "Cinema",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1092/C",
    "contestId": 1092,
    "index": "C",
    "name": "Prefixes and Suffixes",
    "rating": 1700,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "981/A",
    "contestId": 981,
    "index": "A",
    "name": "Antipalindrome",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1536/A",
    "contestId": 1536,
    "index": "A",
    "name": "Omkar and Bad Story",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "652/E",
    "contestId": 652,
    "index": "E",
    "name": "Pursuit For Artifacts",
    "rating": 2300,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "817/C",
    "contestId": 817,
    "index": "C",
    "name": "Really Big Numbers",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "id": "802/O",
    "contestId": 802,
    "index": "O",
    "name": "April Fools' Problem (hard)",
    "rating": 2900,
    "tags": [
      "binary search",
      "data structures",
      "flows"
    ]
  },
  {
    "id": "1733/C",
    "contestId": 1733,
    "index": "C",
    "name": "Parity Shuffle Sorting",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "1433/D",
    "contestId": 1433,
    "index": "D",
    "name": "Districts Connection",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "dfs and similar"
    ]
  },
  {
    "id": "609/A",
    "contestId": 609,
    "index": "A",
    "name": "USB Flash Drives",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1527/B2",
    "contestId": 1527,
    "index": "B2",
    "name": "Palindrome Game (hard version)",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "id": "1701/D",
    "contestId": 1701,
    "index": "D",
    "name": "Permutation Restoration",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1167/F",
    "contestId": 1167,
    "index": "F",
    "name": "Scalar Queries",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "id": "194/A",
    "contestId": 194,
    "index": "A",
    "name": "Exams",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "986/D",
    "contestId": 986,
    "index": "D",
    "name": "Perfect Encoding",
    "rating": 3100,
    "tags": [
      "fft",
      "math"
    ]
  },
  {
    "id": "1142/C",
    "contestId": 1142,
    "index": "C",
    "name": "U2",
    "rating": 2400,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "704/D",
    "contestId": 704,
    "index": "D",
    "name": "Captain America",
    "rating": 3100,
    "tags": [
      "flows",
      "greedy"
    ]
  },
  {
    "id": "763/B",
    "contestId": 763,
    "index": "B",
    "name": "Timofey and rectangles",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "id": "1271/C",
    "contestId": 1271,
    "index": "C",
    "name": "Shawarma Tent",
    "rating": 1300,
    "tags": [
      "brute force",
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "852/I",
    "contestId": 852,
    "index": "I",
    "name": "Dating",
    "rating": 2300,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "127/B",
    "contestId": 127,
    "index": "B",
    "name": "Canvas Frames",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "852/C",
    "contestId": 852,
    "index": "C",
    "name": "Property",
    "rating": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1184/E2",
    "contestId": 1184,
    "index": "E2",
    "name": "Daleks' Invasion (medium)",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "912/A",
    "contestId": 912,
    "index": "A",
    "name": "Tricky Alchemy",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1954/D",
    "contestId": 1954,
    "index": "D",
    "name": "Colored Balls",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1112/E",
    "contestId": 1112,
    "index": "E",
    "name": "Once in a casino",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "823/E",
    "contestId": 823,
    "index": "E",
    "name": "Singer House",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1157/E",
    "contestId": 1157,
    "index": "E",
    "name": "Minimum Array",
    "rating": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1207/D",
    "contestId": 1207,
    "index": "D",
    "name": "Number Of Permutations",
    "rating": 1800,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "id": "1401/A",
    "contestId": 1401,
    "index": "A",
    "name": "Distance and Axis",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "46/F",
    "contestId": 46,
    "index": "F",
    "name": "Hercule Poirot Problem",
    "rating": 2300,
    "tags": [
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1784/E",
    "contestId": 1784,
    "index": "E",
    "name": "Infinite Game",
    "rating": 3100,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "games",
      "probabilities"
    ]
  },
  {
    "id": "810/A",
    "contestId": 810,
    "index": "A",
    "name": "Straight «A»",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1891/F",
    "contestId": 1891,
    "index": "F",
    "name": "A Growing Tree",
    "rating": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1651/F",
    "contestId": 1651,
    "index": "F",
    "name": "Tower Defense",
    "rating": 3000,
    "tags": [
      "binary search",
      "brute force",
      "data structures"
    ]
  },
  {
    "id": "1407/E",
    "contestId": 1407,
    "index": "E",
    "name": "Egor in the Republic of Dagestan",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "514/E",
    "contestId": 514,
    "index": "E",
    "name": "Darth Vader and Tree",
    "rating": 2200,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "568/B",
    "contestId": 568,
    "index": "B",
    "name": "Symmetric and Transitive",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1450/H1",
    "contestId": 1450,
    "index": "H1",
    "name": "Multithreading (Easy Version)",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "id": "219/C",
    "contestId": 219,
    "index": "C",
    "name": "Color Stripe",
    "rating": 1600,
    "tags": [
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1075/B",
    "contestId": 1075,
    "index": "B",
    "name": "Taxi drivers and Lyft",
    "rating": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "459/C",
    "contestId": 459,
    "index": "C",
    "name": "Pashmak and Buses",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "95/A",
    "contestId": 95,
    "index": "A",
    "name": "Hockey",
    "rating": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1804/H",
    "contestId": 1804,
    "index": "H",
    "name": "Code Lock",
    "rating": 3300,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "875/B",
    "contestId": 875,
    "index": "B",
    "name": "Sorting the Coins",
    "rating": 1500,
    "tags": [
      "dsu",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "220/C",
    "contestId": 220,
    "index": "C",
    "name": "Little Elephant and Shifts",
    "rating": 2100,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1332/F",
    "contestId": 1332,
    "index": "F",
    "name": "Independent Set",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1488/C",
    "contestId": 1488,
    "index": "C",
    "name": "Two Policemen",
    "rating": 1900,
    "tags": [
      "*special",
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "id": "1154/E",
    "contestId": 1154,
    "index": "E",
    "name": "Two Teams",
    "rating": 1800,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "490/D",
    "contestId": 490,
    "index": "D",
    "name": "Chocolate",
    "rating": 1900,
    "tags": [
      "brute force",
      "dfs and similar",
      "math",
      "meet-in-the-middle",
      "number theory"
    ]
  },
  {
    "id": "372/E",
    "contestId": 372,
    "index": "E",
    "name": "Drawing Circles is Fun",
    "rating": 3000,
    "tags": [
      "combinatorics",
      "geometry"
    ]
  },
  {
    "id": "439/D",
    "contestId": 439,
    "index": "D",
    "name": "Devu and his Brother",
    "rating": 1700,
    "tags": [
      "binary search",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "id": "595/B",
    "contestId": 595,
    "index": "B",
    "name": "Pasha and Phone",
    "rating": 1600,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "1580/D",
    "contestId": 1580,
    "index": "D",
    "name": "Subsequence",
    "rating": 2900,
    "tags": [
      "brute force",
      "divide and conquer",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1006/E",
    "contestId": 1006,
    "index": "E",
    "name": "Military Problem",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1831/B",
    "contestId": 1831,
    "index": "B",
    "name": "Array merging",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1313/B",
    "contestId": 1313,
    "index": "B",
    "name": "Different Rules",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "119/A",
    "contestId": 119,
    "index": "A",
    "name": "Epic Game",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "774/B",
    "contestId": 774,
    "index": "B",
    "name": "Significant Cups",
    "rating": 2100,
    "tags": [
      "*special",
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "926/E",
    "contestId": 926,
    "index": "E",
    "name": "Merge Equal Elements",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "id": "26/A",
    "contestId": 26,
    "index": "A",
    "name": "Almost Prime",
    "rating": 900,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "1784/B",
    "contestId": 1784,
    "index": "B",
    "name": "Letter Exchange",
    "rating": 1900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "288/A",
    "contestId": 288,
    "index": "A",
    "name": "Polo the Penguin and Strings",
    "rating": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1593/D1",
    "contestId": 1593,
    "index": "D1",
    "name": "All are Same",
    "rating": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "833/A",
    "contestId": 833,
    "index": "A",
    "name": "The Meaningless Game",
    "rating": 1700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1505/D",
    "contestId": 1505,
    "index": "D",
    "name": "Xenolith? Hippodrome?",
    "rating": 1800,
    "tags": [
      "*special",
      "number theory"
    ]
  },
  {
    "id": "1044/F",
    "contestId": 1044,
    "index": "F",
    "name": "DFS",
    "rating": 2700,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "505/E",
    "contestId": 505,
    "index": "E",
    "name": "Mr. Kitayuta vs. Bamboos",
    "rating": 2900,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "986/C",
    "contestId": 986,
    "index": "C",
    "name": "AND Graph",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1456/E",
    "contestId": 1456,
    "index": "E",
    "name": "XOR-ranges",
    "rating": 3500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1644/D",
    "contestId": 1644,
    "index": "D",
    "name": "Cross Coloring",
    "rating": 1700,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "id": "81/E",
    "contestId": 81,
    "index": "E",
    "name": "Pairs",
    "rating": 2700,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "45/B",
    "contestId": 45,
    "index": "B",
    "name": "School",
    "rating": 2200,
    "tags": [
      "dp",
      "dsu"
    ]
  },
  {
    "id": "1860/B",
    "contestId": 1860,
    "index": "B",
    "name": "Fancy Coins",
    "rating": 1200,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1508/E",
    "contestId": 1508,
    "index": "E",
    "name": "Tree Calendar",
    "rating": 3100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1904/A",
    "contestId": 1904,
    "index": "A",
    "name": "Forked!",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1016/D",
    "contestId": 1016,
    "index": "D",
    "name": "Vasya And The Matrix",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "flows",
      "math"
    ]
  },
  {
    "id": "1817/E",
    "contestId": 1817,
    "index": "E",
    "name": "Half-sum",
    "rating": 3400,
    "tags": [
      "brute force",
      "divide and conquer",
      "greedy"
    ]
  },
  {
    "id": "1371/D",
    "contestId": 1371,
    "index": "D",
    "name": "Grid-00100",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1867/B",
    "contestId": 1867,
    "index": "B",
    "name": "XOR Palindromes",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "1223/G",
    "contestId": 1223,
    "index": "G",
    "name": "Wooden Raft",
    "rating": 3200,
    "tags": [
      "binary search",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1926/A",
    "contestId": 1926,
    "index": "A",
    "name": "Vlad and the Best of Five",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1471/B",
    "contestId": 1471,
    "index": "B",
    "name": "Strange List",
    "rating": 1100,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1036/A",
    "contestId": 1036,
    "index": "A",
    "name": "Function Height",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1408/B",
    "contestId": 1408,
    "index": "B",
    "name": "Arrays Sum",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "671/C",
    "contestId": 671,
    "index": "C",
    "name": "Ultimate Weirdness of an Array",
    "rating": 2800,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "id": "374/B",
    "contestId": 374,
    "index": "B",
    "name": "Inna and Nine",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "greedy"
    ]
  },
  {
    "id": "353/D",
    "contestId": 353,
    "index": "D",
    "name": "Queue",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "id": "38/C",
    "contestId": 38,
    "index": "C",
    "name": "Blinds",
    "rating": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "215/E",
    "contestId": 215,
    "index": "E",
    "name": "Periodical Numbers",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "number theory"
    ]
  },
  {
    "id": "234/E",
    "contestId": 234,
    "index": "E",
    "name": "Champions' League",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1903/F",
    "contestId": 1903,
    "index": "F",
    "name": "Babysitting",
    "rating": 2500,
    "tags": [
      "2-sat",
      "binary search",
      "data structures",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "463/B",
    "contestId": 463,
    "index": "B",
    "name": "Caisa and Pylons",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1922/A",
    "contestId": 1922,
    "index": "A",
    "name": "Tricky Template",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "293/D",
    "contestId": 293,
    "index": "D",
    "name": "Ksusha and Square",
    "rating": 2700,
    "tags": [
      "geometry",
      "math",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "id": "1866/C",
    "contestId": 1866,
    "index": "C",
    "name": "Completely Searching for Inversions",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "452/A",
    "contestId": 452,
    "index": "A",
    "name": "Eevee",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1740/E",
    "contestId": 1740,
    "index": "E",
    "name": "Hanging Hearts",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1866/F",
    "contestId": 1866,
    "index": "F",
    "name": "Freak Joker Process",
    "rating": 3100,
    "tags": [
      "binary search",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1680/D",
    "contestId": 1680,
    "index": "D",
    "name": "Dog Walking",
    "rating": 2400,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1824/C",
    "contestId": 1824,
    "index": "C",
    "name": "LuoTianyi and XOR-Tree",
    "rating": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "593/C",
    "contestId": 593,
    "index": "C",
    "name": "Beautiful Function",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "899/B",
    "contestId": 899,
    "index": "B",
    "name": "Months and Years",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "225/D",
    "contestId": 225,
    "index": "D",
    "name": "Snake",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "683/B",
    "contestId": 683,
    "index": "B",
    "name": "The Teacher of Physical Education",
    "rating": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "164/C",
    "contestId": 164,
    "index": "C",
    "name": "Machine Programming",
    "rating": 2400,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "id": "1733/A",
    "contestId": 1733,
    "index": "A",
    "name": "Consecutive Sum",
    "rating": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "919/E",
    "contestId": 919,
    "index": "E",
    "name": "Congruence Equation",
    "rating": 2100,
    "tags": [
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1034/B",
    "contestId": 1034,
    "index": "B",
    "name": "Little C Loves 3 II",
    "rating": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "flows",
      "graph matchings"
    ]
  },
  {
    "id": "793/F",
    "contestId": 793,
    "index": "F",
    "name": "Julia the snail",
    "rating": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "1601/C",
    "contestId": 1601,
    "index": "C",
    "name": "Optimal Insertion",
    "rating": 2300,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "144/B",
    "contestId": 144,
    "index": "B",
    "name": "Meeting",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1851/G",
    "contestId": 1851,
    "index": "G",
    "name": "Vlad and the Mountains",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "dsu",
      "graphs",
      "implementation",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "463/E",
    "contestId": 463,
    "index": "E",
    "name": "Caisa and Tree",
    "rating": 2100,
    "tags": [
      "brute force",
      "dfs and similar",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "978/G",
    "contestId": 978,
    "index": "G",
    "name": "Petya's Exams",
    "rating": 1700,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "265/A",
    "contestId": 265,
    "index": "A",
    "name": "Colorful Stones (Simplified Edition)",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "19/B",
    "contestId": 19,
    "index": "B",
    "name": "Checkout Assistant",
    "rating": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "586/B",
    "contestId": 586,
    "index": "B",
    "name": "Laurenty and Shop",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "663/A",
    "contestId": 663,
    "index": "A",
    "name": "Rebus",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "expression parsing",
      "greedy",
      "math"
    ]
  },
  {
    "id": "935/C",
    "contestId": 935,
    "index": "C",
    "name": "Fifa and Fafa",
    "rating": 1600,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1983/D",
    "contestId": 1983,
    "index": "D",
    "name": "Swap Dilemma",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "268/E",
    "contestId": 268,
    "index": "E",
    "name": "Playlist",
    "rating": 2100,
    "tags": [
      "math",
      "probabilities",
      "sortings"
    ]
  },
  {
    "id": "1407/A",
    "contestId": 1407,
    "index": "A",
    "name": "Ahahahahahahahaha",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1264/E",
    "contestId": 1264,
    "index": "E",
    "name": "Beautiful League",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings"
    ]
  },
  {
    "id": "1204/A",
    "contestId": 1204,
    "index": "A",
    "name": "BowWow and the Timetable",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "167/A",
    "contestId": 167,
    "index": "A",
    "name": "Wizards and Trolleybuses",
    "rating": 1600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1220/C",
    "contestId": 1220,
    "index": "C",
    "name": "Substring Game in the Lesson",
    "rating": 1300,
    "tags": [
      "games",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1699/E",
    "contestId": 1699,
    "index": "E",
    "name": "Three Days Grace",
    "rating": 2600,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "76/E",
    "contestId": 76,
    "index": "E",
    "name": "Points",
    "rating": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1279/A",
    "contestId": 1279,
    "index": "A",
    "name": "New Year Garland",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "822/F",
    "contestId": 822,
    "index": "F",
    "name": "Madness",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "425/C",
    "contestId": 425,
    "index": "C",
    "name": "Sereja and Two Sequences",
    "rating": 2300,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "501/A",
    "contestId": 501,
    "index": "A",
    "name": "Contest",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1372/A",
    "contestId": 1372,
    "index": "A",
    "name": "Omkar and Completion",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1393/A",
    "contestId": 1393,
    "index": "A",
    "name": "Rainbow Dash, Fluttershy and Chess Coloring",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1800/E1",
    "contestId": 1800,
    "index": "E1",
    "name": "Unforgivable Curse (easy version)",
    "rating": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1978/B",
    "contestId": 1978,
    "index": "B",
    "name": "New Bakery",
    "rating": 800,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "1997/E",
    "contestId": 1997,
    "index": "E",
    "name": "Level Up",
    "rating": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "id": "1060/C",
    "contestId": 1060,
    "index": "C",
    "name": "Maximum Subrectangle",
    "rating": 1600,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "652/F",
    "contestId": 652,
    "index": "F",
    "name": "Ants on a Circle",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1374/F",
    "contestId": 1374,
    "index": "F",
    "name": "Cyclic Shifts Sorting",
    "rating": 2400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1102/C",
    "contestId": 1102,
    "index": "C",
    "name": "Doors Breaking and Repairing",
    "rating": 1200,
    "tags": [
      "games"
    ]
  },
  {
    "id": "1030/F",
    "contestId": 1030,
    "index": "F",
    "name": "Putting Boxes Together",
    "rating": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1571/J",
    "contestId": 1571,
    "index": "J",
    "name": "Two Railroads",
    "rating": 3000,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "917/D",
    "contestId": 917,
    "index": "D",
    "name": "Stranger Trees",
    "rating": 2600,
    "tags": [
      "dp",
      "math",
      "matrices",
      "trees"
    ]
  },
  {
    "id": "1553/H",
    "contestId": 1553,
    "index": "H",
    "name": "XOR and Distance",
    "rating": 2900,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "id": "1916/G",
    "contestId": 1916,
    "index": "G",
    "name": "Optimizations From Chelsu",
    "rating": 3500,
    "tags": [
      "divide and conquer",
      "dp",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "226/A",
    "contestId": 226,
    "index": "A",
    "name": "Flying Saucer Segments",
    "rating": 1400,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1935/E",
    "contestId": 1935,
    "index": "E",
    "name": "Distance Learning Courses in MAC",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "181/A",
    "contestId": 181,
    "index": "A",
    "name": "Series of Crimes",
    "rating": 800,
    "tags": [
      "brute force",
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "975/A",
    "contestId": 975,
    "index": "A",
    "name": "Aramic script",
    "rating": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1520/C",
    "contestId": 1520,
    "index": "C",
    "name": "Not Adjacent Matrix",
    "rating": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "442/C",
    "contestId": 442,
    "index": "C",
    "name": "Artem and Array",
    "rating": 2500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1914/C",
    "contestId": 1914,
    "index": "C",
    "name": "Quests",
    "rating": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "53/C",
    "contestId": 53,
    "index": "C",
    "name": "Little Frog",
    "rating": 1200,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "792/B",
    "contestId": 792,
    "index": "B",
    "name": "Counting-out Rhyme",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "479/D",
    "contestId": 479,
    "index": "D",
    "name": "Long Jumps",
    "rating": 1700,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1006/D",
    "contestId": 1006,
    "index": "D",
    "name": "Two Strings Swaps",
    "rating": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1138/B",
    "contestId": 1138,
    "index": "B",
    "name": "Circus",
    "rating": 1800,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "1081/D",
    "contestId": 1081,
    "index": "D",
    "name": "Maximum Distance",
    "rating": 1800,
    "tags": [
      "dsu",
      "graphs",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "1689/E",
    "contestId": 1689,
    "index": "E",
    "name": "ANDfinity",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1859/A",
    "contestId": 1859,
    "index": "A",
    "name": "United We Stand",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "282/C",
    "contestId": 282,
    "index": "C",
    "name": "XOR and OR",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "685/A",
    "contestId": 685,
    "index": "A",
    "name": "Robbers' watch",
    "rating": 1700,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "600/A",
    "contestId": 600,
    "index": "A",
    "name": "Extract Numbers",
    "rating": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1366/B",
    "contestId": 1366,
    "index": "B",
    "name": "Shuffle",
    "rating": 1300,
    "tags": [
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1980/C",
    "contestId": 1980,
    "index": "C",
    "name": "Sofia and the Lost Operations",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1349/F1",
    "contestId": 1349,
    "index": "F1",
    "name": "Slime and Sequences (Easy Version)",
    "rating": 3100,
    "tags": [
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "67/A",
    "contestId": 67,
    "index": "A",
    "name": "Partial Teacher",
    "rating": 1800,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "31/B",
    "contestId": 31,
    "index": "B",
    "name": "Sysadmin Bob",
    "rating": 1500,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1747/E",
    "contestId": 1747,
    "index": "E",
    "name": "List Generation",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "631/A",
    "contestId": 631,
    "index": "A",
    "name": "Interview",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1406/A",
    "contestId": 1406,
    "index": "A",
    "name": "Subset Mex",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "630/B",
    "contestId": 630,
    "index": "B",
    "name": "Moore's Law",
    "rating": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1958/J",
    "contestId": 1958,
    "index": "J",
    "name": "Necromancer",
    "rating": 3200,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1831/A",
    "contestId": 1831,
    "index": "A",
    "name": "Twin Permutations",
    "rating": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "385/D",
    "contestId": 385,
    "index": "D",
    "name": "Bear and Floodlight",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "geometry"
    ]
  },
  {
    "id": "711/D",
    "contestId": 711,
    "index": "D",
    "name": "Directed Roads",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "id": "131/E",
    "contestId": 131,
    "index": "E",
    "name": "Yet Another Task with Queens",
    "rating": 1700,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "1731/A",
    "contestId": 1731,
    "index": "A",
    "name": "Joey Takes Money",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1744/F",
    "contestId": 1744,
    "index": "F",
    "name": "MEX vs MED",
    "rating": 2000,
    "tags": [
      "math",
      "two pointers"
    ]
  },
  {
    "id": "461/C",
    "contestId": 461,
    "index": "C",
    "name": "Appleman and a Sheet of Paper",
    "rating": 2200,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1874/B",
    "contestId": 1874,
    "index": "B",
    "name": "Jellyfish and Math",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1580/F",
    "contestId": 1580,
    "index": "F",
    "name": "Problems for Codeforces",
    "rating": 3300,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "id": "245/F",
    "contestId": 245,
    "index": "F",
    "name": "Log Stream Analysis",
    "rating": 2000,
    "tags": [
      "binary search",
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1450/C1",
    "contestId": 1450,
    "index": "C1",
    "name": "Errich-Tac-Toe (Easy Version)",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1556/B",
    "contestId": 1556,
    "index": "B",
    "name": "Take Your Places!",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1787/I",
    "contestId": 1787,
    "index": "I",
    "name": "Treasure Hunt",
    "rating": 3400,
    "tags": [
      "data structures",
      "divide and conquer",
      "two pointers"
    ]
  },
  {
    "id": "985/A",
    "contestId": 985,
    "index": "A",
    "name": "Chess Placing",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "884/E",
    "contestId": 884,
    "index": "E",
    "name": "Binary Matrix",
    "rating": 2500,
    "tags": [
      "dsu"
    ]
  },
  {
    "id": "460/B",
    "contestId": 460,
    "index": "B",
    "name": "Little Dima and Equation",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "731/F",
    "contestId": 731,
    "index": "F",
    "name": "Video Cards",
    "rating": 1900,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1827/C",
    "contestId": 1827,
    "index": "C",
    "name": "Palindrome Partition",
    "rating": 2600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "200/C",
    "contestId": 200,
    "index": "C",
    "name": "Football Championship",
    "rating": 1800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1315/B",
    "contestId": 1315,
    "index": "B",
    "name": "Homecoming",
    "rating": 1300,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1335/F",
    "contestId": 1335,
    "index": "F",
    "name": "Robots on a Grid",
    "rating": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "matrices"
    ]
  },
  {
    "id": "958/B2",
    "contestId": 958,
    "index": "B2",
    "name": "Maximum Control (medium)",
    "rating": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "856/A",
    "contestId": 856,
    "index": "A",
    "name": "Set Theory",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "416/A",
    "contestId": 416,
    "index": "A",
    "name": "Guess a number!",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "27/A",
    "contestId": 27,
    "index": "A",
    "name": "Next Test",
    "rating": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1070/F",
    "contestId": 1070,
    "index": "F",
    "name": "Debate",
    "rating": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1926/E",
    "contestId": 1926,
    "index": "E",
    "name": "Vlad and an Odd Ordering",
    "rating": 1500,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "dp",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1777/D",
    "contestId": 1777,
    "index": "D",
    "name": "Score of a Tree",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "1278/F",
    "contestId": 1278,
    "index": "F",
    "name": "Cards",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "id": "1753/D",
    "contestId": 1753,
    "index": "D",
    "name": "The Beach",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1445/B",
    "contestId": 1445,
    "index": "B",
    "name": "Elimination",
    "rating": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "65/C",
    "contestId": 65,
    "index": "C",
    "name": "Harry Potter and the Golden Snitch",
    "rating": 2100,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "id": "1677/D",
    "contestId": 1677,
    "index": "D",
    "name": "Tokitsukaze and Permutations",
    "rating": 2500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1674/C",
    "contestId": 1674,
    "index": "C",
    "name": "Infinite Replacement",
    "rating": 1000,
    "tags": [
      "combinatorics",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "414/C",
    "contestId": 414,
    "index": "C",
    "name": "Mashmokh and Reverse Operation",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "divide and conquer"
    ]
  },
  {
    "id": "432/A",
    "contestId": 432,
    "index": "A",
    "name": "Choosing Teams",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1288/B",
    "contestId": 1288,
    "index": "B",
    "name": "Yet Another Meme Problem",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "342/D",
    "contestId": 342,
    "index": "D",
    "name": "Xenia and Dominoes",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "id": "1689/B",
    "contestId": 1689,
    "index": "B",
    "name": "Mystic Permutation",
    "rating": 900,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1325/B",
    "contestId": 1325,
    "index": "B",
    "name": "CopyCopyCopyCopyCopy",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1158/F",
    "contestId": 1158,
    "index": "F",
    "name": "Density of subarrays",
    "rating": 3500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "985/G",
    "contestId": 985,
    "index": "G",
    "name": "Team Players",
    "rating": 2700,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "id": "1923/E",
    "contestId": 1923,
    "index": "E",
    "name": "Count Paths",
    "rating": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "322/A",
    "contestId": 322,
    "index": "A",
    "name": "Ciel and Dancing",
    "rating": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "685/E",
    "contestId": 685,
    "index": "E",
    "name": "Travelling Through the Snow Queen's Kingdom",
    "rating": 2800,
    "tags": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "graphs"
    ]
  },
  {
    "id": "233/B",
    "contestId": 233,
    "index": "B",
    "name": "Non-square Equation",
    "rating": 1400,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "id": "648/A",
    "contestId": 648,
    "index": "A",
    "name": "Наибольший подъем",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1896/D",
    "contestId": 1896,
    "index": "D",
    "name": "Ones and Twos",
    "rating": 1700,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "883/J",
    "contestId": 883,
    "index": "J",
    "name": "Renovation",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "540/C",
    "contestId": 540,
    "index": "C",
    "name": "Ice Cave",
    "rating": 2000,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "id": "1215/A",
    "contestId": 1215,
    "index": "A",
    "name": "Yellow Cards",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "430/B",
    "contestId": 430,
    "index": "B",
    "name": "Balls Game",
    "rating": 1400,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "id": "108/B",
    "contestId": 108,
    "index": "B",
    "name": "Datatypes",
    "rating": 1400,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "id": "1490/F",
    "contestId": 1490,
    "index": "F",
    "name": "Equalize the Array",
    "rating": 1500,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1408/F",
    "contestId": 1408,
    "index": "F",
    "name": "Two Different",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "id": "600/B",
    "contestId": 600,
    "index": "B",
    "name": "Queries about less or equal elements",
    "rating": 1300,
    "tags": [
      "binary search",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1469/F",
    "contestId": 1469,
    "index": "F",
    "name": "Power Sockets",
    "rating": 2600,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "617/B",
    "contestId": 617,
    "index": "B",
    "name": "Chocolate",
    "rating": 1300,
    "tags": [
      "combinatorics"
    ]
  },
  {
    "id": "131/A",
    "contestId": 131,
    "index": "A",
    "name": "cAPS lOCK",
    "rating": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1937/B",
    "contestId": 1937,
    "index": "B",
    "name": "Binary Path",
    "rating": 1300,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1805/A",
    "contestId": 1805,
    "index": "A",
    "name": "We Need the Zero",
    "rating": 800,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "id": "1612/C",
    "contestId": 1612,
    "index": "C",
    "name": "Chat Ban",
    "rating": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "981/F",
    "contestId": 981,
    "index": "F",
    "name": "Round Marriage",
    "rating": 2500,
    "tags": [
      "binary search",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "id": "57/D",
    "contestId": 57,
    "index": "D",
    "name": "Journey",
    "rating": 2500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1843/E",
    "contestId": 1843,
    "index": "E",
    "name": "Tracking Segments",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "770/D",
    "contestId": 770,
    "index": "D",
    "name": "Draw Brackets!",
    "rating": 1400,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1475/F",
    "contestId": 1475,
    "index": "F",
    "name": "Unusual Matrix",
    "rating": 1900,
    "tags": [
      "2-sat",
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "670/B",
    "contestId": 670,
    "index": "B",
    "name": "Game of Robots",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "675/B",
    "contestId": 675,
    "index": "B",
    "name": "Restoring Painting",
    "rating": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1542/E2",
    "contestId": 1542,
    "index": "E2",
    "name": "Abnormal Permutation Pairs (hard version)",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "413/A",
    "contestId": 413,
    "index": "A",
    "name": "Data Recovery",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1411/F",
    "contestId": 1411,
    "index": "F",
    "name": "The Thorny Path",
    "rating": 3000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "51/D",
    "contestId": 51,
    "index": "D",
    "name": "Geometrical problem",
    "rating": 2200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "135/A",
    "contestId": 135,
    "index": "A",
    "name": "Replacement",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1833/A",
    "contestId": 1833,
    "index": "A",
    "name": "Musical Puzzle",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1684/F",
    "contestId": 1684,
    "index": "F",
    "name": "Diverse Segments",
    "rating": 2600,
    "tags": [
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "1498/F",
    "contestId": 1498,
    "index": "F",
    "name": "Christmas Game",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "dp",
      "games",
      "math",
      "trees"
    ]
  },
  {
    "id": "1131/C",
    "contestId": 1131,
    "index": "C",
    "name": "Birthday",
    "rating": 1200,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1344/C",
    "contestId": 1344,
    "index": "C",
    "name": "Quantifier Question",
    "rating": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1453/A",
    "contestId": 1453,
    "index": "A",
    "name": "Cancel the Trains",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "616/D",
    "contestId": 616,
    "index": "D",
    "name": "Longest k-Good Segment",
    "rating": 1600,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "479/A",
    "contestId": 479,
    "index": "A",
    "name": "Expression",
    "rating": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1380/G",
    "contestId": 1380,
    "index": "G",
    "name": "Circular Dungeon",
    "rating": 2600,
    "tags": [
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "285/D",
    "contestId": 285,
    "index": "D",
    "name": "Permutation Sum",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "implementation",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1272/F",
    "contestId": 1272,
    "index": "F",
    "name": "Two Bracket Sequences",
    "rating": 2200,
    "tags": [
      "dp",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1621/H",
    "contestId": 1621,
    "index": "H",
    "name": "Trains and Airplanes",
    "rating": 3500,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "264/B",
    "contestId": 264,
    "index": "B",
    "name": "Good Sequences",
    "rating": 1500,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "id": "123/C",
    "contestId": 123,
    "index": "C",
    "name": "Brackets",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1569/E",
    "contestId": 1569,
    "index": "E",
    "name": "Playoff Restoration",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "hashing",
      "implementation",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1220/G",
    "contestId": 1220,
    "index": "G",
    "name": "Geolocation",
    "rating": 3400,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1526/E",
    "contestId": 1526,
    "index": "E",
    "name": "Oolimry and Suffix Array",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "604/A",
    "contestId": 604,
    "index": "A",
    "name": "Uncowed Forces",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "825/A",
    "contestId": 825,
    "index": "A",
    "name": "Binary Protocol",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "833/D",
    "contestId": 833,
    "index": "D",
    "name": "Red-Black Cobweb",
    "rating": 2800,
    "tags": [
      "data structures",
      "divide and conquer",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "627/C",
    "contestId": 627,
    "index": "C",
    "name": "Package Delivery",
    "rating": 2200,
    "tags": [
      "data structures",
      "divide and conquer",
      "greedy"
    ]
  },
  {
    "id": "257/D",
    "contestId": 257,
    "index": "D",
    "name": "Sum",
    "rating": 1900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "500/F",
    "contestId": 500,
    "index": "F",
    "name": "New Year Shopping",
    "rating": 2700,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "761/D",
    "contestId": 761,
    "index": "D",
    "name": "Dasha and Very Difficult Problem",
    "rating": 1700,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "649/B",
    "contestId": 649,
    "index": "B",
    "name": "Этажи",
    "rating": 1400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "925/F",
    "contestId": 925,
    "index": "F",
    "name": "Parametric Circulation",
    "rating": 3100,
    "tags": [
      "binary search",
      "flows"
    ]
  },
  {
    "id": "1283/E",
    "contestId": 1283,
    "index": "E",
    "name": "New Year Parties",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1929/A",
    "contestId": 1929,
    "index": "A",
    "name": "Sasha and the Beautiful Array",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1368/D",
    "contestId": 1368,
    "index": "D",
    "name": "AND, OR and square sum",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "id": "631/E",
    "contestId": 631,
    "index": "E",
    "name": "Product Sum",
    "rating": 2600,
    "tags": [
      "data structures",
      "dp",
      "geometry"
    ]
  },
  {
    "id": "446/C",
    "contestId": 446,
    "index": "C",
    "name": "DZY Loves Fibonacci Numbers",
    "rating": 2400,
    "tags": [
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1716/D",
    "contestId": 1716,
    "index": "D",
    "name": "Chip Move",
    "rating": 2000,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "id": "1055/B",
    "contestId": 1055,
    "index": "B",
    "name": "Alice and Hairdresser",
    "rating": 1300,
    "tags": [
      "dsu",
      "implementation"
    ]
  },
  {
    "id": "1132/G",
    "contestId": 1132,
    "index": "G",
    "name": "Greedy Subsequences",
    "rating": 2400,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1466/A",
    "contestId": 1466,
    "index": "A",
    "name": "Bovine Dilemma",
    "rating": 800,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "id": "617/E",
    "contestId": 617,
    "index": "E",
    "name": "XOR and Favorite Number",
    "rating": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1474/F",
    "contestId": 1474,
    "index": "F",
    "name": "1 2 3 4 ...",
    "rating": 3000,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "id": "1231/E",
    "contestId": 1231,
    "index": "E",
    "name": "Middle-Out",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1332/D",
    "contestId": 1332,
    "index": "D",
    "name": "Walk on Matrix",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "346/C",
    "contestId": 346,
    "index": "C",
    "name": "Number Transformation II",
    "rating": 2200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "36/B",
    "contestId": 36,
    "index": "B",
    "name": "Fractal",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "931/A",
    "contestId": 931,
    "index": "A",
    "name": "Friends Meeting",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1674/A",
    "contestId": 1674,
    "index": "A",
    "name": "Number Transformation",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1355/A",
    "contestId": 1355,
    "index": "A",
    "name": "Sequence with Digits",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1006/C",
    "contestId": 1006,
    "index": "C",
    "name": "Three Parts of the Array",
    "rating": 1200,
    "tags": [
      "binary search",
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "1557/C",
    "contestId": 1557,
    "index": "C",
    "name": "Moamen and XOR",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "id": "1530/F",
    "contestId": 1530,
    "index": "F",
    "name": "Bingo",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1702/G2",
    "contestId": 1702,
    "index": "G2",
    "name": "Passable Paths (hard version)",
    "rating": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "278/B",
    "contestId": 278,
    "index": "B",
    "name": "New Problem",
    "rating": 1500,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "id": "613/C",
    "contestId": 613,
    "index": "C",
    "name": "Necklace",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1497/C2",
    "contestId": 1497,
    "index": "C2",
    "name": "k-LCM (hard version)",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "593/B",
    "contestId": 593,
    "index": "B",
    "name": "Anton and Lines",
    "rating": 1600,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "1521/A",
    "contestId": 1521,
    "index": "A",
    "name": "Nastia and Nearly Good Numbers",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "60/E",
    "contestId": 60,
    "index": "E",
    "name": "Mushroom Gnomes",
    "rating": 2600,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "id": "1195/A",
    "contestId": 1195,
    "index": "A",
    "name": "Drinks Choosing",
    "rating": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "886/E",
    "contestId": 886,
    "index": "E",
    "name": "Maximum Element",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "195/E",
    "contestId": 195,
    "index": "E",
    "name": "Building Forest",
    "rating": 2000,
    "tags": [
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "187/B",
    "contestId": 187,
    "index": "B",
    "name": "AlgoRace",
    "rating": 1800,
    "tags": [
      "dp",
      "shortest paths"
    ]
  },
  {
    "id": "1996/B",
    "contestId": 1996,
    "index": "B",
    "name": "Scale",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "26/C",
    "contestId": 26,
    "index": "C",
    "name": "Parquet",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1780/A",
    "contestId": 1780,
    "index": "A",
    "name": "Hayato and School",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1243/B1",
    "contestId": 1243,
    "index": "B1",
    "name": "Character Swap (Easy Version)",
    "rating": 1000,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "622/B",
    "contestId": 622,
    "index": "B",
    "name": "The Time",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1559/E",
    "contestId": 1559,
    "index": "E",
    "name": "Mocha and Stars",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1182/B",
    "contestId": 1182,
    "index": "B",
    "name": "Plus from Picture",
    "rating": 1300,
    "tags": [
      "dfs and similar",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1809/D",
    "contestId": 1809,
    "index": "D",
    "name": "Binary String Sorting",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "280/B",
    "contestId": 280,
    "index": "B",
    "name": "Maximum Xor Secondary",
    "rating": 1800,
    "tags": [
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "451/C",
    "contestId": 451,
    "index": "C",
    "name": "Predict Outcome of the Game",
    "rating": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1946/D",
    "contestId": 1946,
    "index": "D",
    "name": "Birthday Gift",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1660/F2",
    "contestId": 1660,
    "index": "F2",
    "name": "Promising String (hard version)",
    "rating": 2100,
    "tags": [
      "data structures",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "id": "1500/A",
    "contestId": 1500,
    "index": "A",
    "name": "Going Home",
    "rating": 1800,
    "tags": [
      "brute force",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1514/C",
    "contestId": 1514,
    "index": "C",
    "name": "Product 1 Modulo N",
    "rating": 1600,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1458/A",
    "contestId": 1458,
    "index": "A",
    "name": "Row GCD",
    "rating": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "717/B",
    "contestId": 717,
    "index": "B",
    "name": "R3D3’s Summer Adventure",
    "rating": 2700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "230/A",
    "contestId": 230,
    "index": "A",
    "name": "Dragons",
    "rating": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1825/A",
    "contestId": 1825,
    "index": "A",
    "name": "LuoTianyi and the Palindrome String",
    "rating": 800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "917/A",
    "contestId": 917,
    "index": "A",
    "name": "The Monster",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1481/E",
    "contestId": 1481,
    "index": "E",
    "name": "Sorting Books",
    "rating": 2500,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1765/N",
    "contestId": 1765,
    "index": "N",
    "name": "Number Reduction",
    "rating": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1453/D",
    "contestId": 1453,
    "index": "D",
    "name": "Checkpoints",
    "rating": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "86/E",
    "contestId": 86,
    "index": "E",
    "name": "Long sequence",
    "rating": 2700,
    "tags": [
      "brute force",
      "math",
      "matrices"
    ]
  },
  {
    "id": "1740/F",
    "contestId": 1740,
    "index": "F",
    "name": "Conditional Mix",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "102/B",
    "contestId": 102,
    "index": "B",
    "name": "Sum of Digits",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1179/A",
    "contestId": 1179,
    "index": "A",
    "name": "Valeriy and Deque",
    "rating": 1500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "873/A",
    "contestId": 873,
    "index": "A",
    "name": "Chores",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "659/F",
    "contestId": 659,
    "index": "F",
    "name": "Polycarp and Hay",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1608/G",
    "contestId": 1608,
    "index": "G",
    "name": "Alphabetic Tree",
    "rating": 3500,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "hashing",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1064/A",
    "contestId": 1064,
    "index": "A",
    "name": "Make a triangle!",
    "rating": 800,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "id": "1311/D",
    "contestId": 1311,
    "index": "D",
    "name": "Three Integers",
    "rating": 2000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1866/L",
    "contestId": 1866,
    "index": "L",
    "name": "Lihmuf Balling",
    "rating": 2400,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "id": "703/A",
    "contestId": 703,
    "index": "A",
    "name": "Mishka and Game",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1431/H",
    "contestId": 1431,
    "index": "H",
    "name": "Rogue-like Game",
    "rating": 2600,
    "tags": [
      "*special",
      "brute force",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1332/B",
    "contestId": 1332,
    "index": "B",
    "name": "Composite Coloring",
    "rating": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1392/B",
    "contestId": 1392,
    "index": "B",
    "name": "Omkar and Infinity Clock",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "387/A",
    "contestId": 387,
    "index": "A",
    "name": "George and Sleep",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1984/G",
    "contestId": 1984,
    "index": "G",
    "name": "Magic Trick II",
    "rating": 3200,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "373/A",
    "contestId": 373,
    "index": "A",
    "name": "Collecting Beats is Fun",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "404/A",
    "contestId": 404,
    "index": "A",
    "name": "Valera and X",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "79/D",
    "contestId": 79,
    "index": "D",
    "name": "Password",
    "rating": 2800,
    "tags": [
      "bitmasks",
      "dp",
      "shortest paths"
    ]
  },
  {
    "id": "801/A",
    "contestId": 801,
    "index": "A",
    "name": "Vicious Keyboard",
    "rating": 1100,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1526/C1",
    "contestId": 1526,
    "index": "C1",
    "name": "Potions (Easy Version)",
    "rating": 1500,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1790/C",
    "contestId": 1790,
    "index": "C",
    "name": "Premutation",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "930/E",
    "contestId": 930,
    "index": "E",
    "name": "Coins Exhibition",
    "rating": 2900,
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "id": "1869/B",
    "contestId": 1869,
    "index": "B",
    "name": "2D Traveling",
    "rating": 1100,
    "tags": [
      "geometry",
      "math",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "724/G",
    "contestId": 724,
    "index": "G",
    "name": "Xor-matic Number of the Graph",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "graphs",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "686/B",
    "contestId": 686,
    "index": "B",
    "name": "Little Robber Girl's Zoo",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1443/A",
    "contestId": 1443,
    "index": "A",
    "name": "Kids Seating",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1979/C",
    "contestId": 1979,
    "index": "C",
    "name": "Earning on Bets",
    "rating": 1200,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "id": "1569/B",
    "contestId": 1569,
    "index": "B",
    "name": "Chess Tournament",
    "rating": 1000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1470/F",
    "contestId": 1470,
    "index": "F",
    "name": "Strange Covering",
    "rating": 3500,
    "tags": [
      "divide and conquer"
    ]
  },
  {
    "id": "1206/B",
    "contestId": 1206,
    "index": "B",
    "name": "Make Product Equal One",
    "rating": 900,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1718/D",
    "contestId": 1718,
    "index": "D",
    "name": "Permutation for Burenka",
    "rating": 3300,
    "tags": [
      "data structures",
      "graph matchings",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "id": "1808/C",
    "contestId": 1808,
    "index": "C",
    "name": "Unlucky Numbers",
    "rating": 1900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "4/D",
    "contestId": 4,
    "index": "D",
    "name": "Mysterious Present",
    "rating": 1700,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "id": "1572/E",
    "contestId": 1572,
    "index": "E",
    "name": "Polygon",
    "rating": 3000,
    "tags": [
      "binary search",
      "dp",
      "geometry"
    ]
  },
  {
    "id": "1130/B",
    "contestId": 1130,
    "index": "B",
    "name": "Two Cakes",
    "rating": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "413/C",
    "contestId": 413,
    "index": "C",
    "name": "Jeopardy!",
    "rating": 1400,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "623/C",
    "contestId": 623,
    "index": "C",
    "name": "Electric Charges",
    "rating": 2900,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "1493/C",
    "contestId": 1493,
    "index": "C",
    "name": "K-beautiful Strings",
    "rating": 2000,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1056/F",
    "contestId": 1056,
    "index": "F",
    "name": "Write The Contest",
    "rating": 2500,
    "tags": [
      "binary search",
      "dp",
      "math"
    ]
  },
  {
    "id": "1989/B",
    "contestId": 1989,
    "index": "B",
    "name": "Substring and Subsequence",
    "rating": 1200,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "731/B",
    "contestId": 731,
    "index": "B",
    "name": "Coupons and Discounts",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1370/E",
    "contestId": 1370,
    "index": "E",
    "name": "Binary Subsequence Rotation",
    "rating": 2100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "57/B",
    "contestId": 57,
    "index": "B",
    "name": "Martian Architecture",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1359/B",
    "contestId": 1359,
    "index": "B",
    "name": "New Theatre Square",
    "rating": 1000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1896/H1",
    "contestId": 1896,
    "index": "H1",
    "name": "Cyclic Hamming (Easy Version)",
    "rating": 3400,
    "tags": [
      "brute force",
      "divide and conquer",
      "dp",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1550/D",
    "contestId": 1550,
    "index": "D",
    "name": "Excellent Arrays",
    "rating": 2300,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "841/B",
    "contestId": 841,
    "index": "B",
    "name": "Godsend",
    "rating": 1100,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "1658/B",
    "contestId": 1658,
    "index": "B",
    "name": "Marin and Anti-coprime Permutation",
    "rating": 800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "444/B",
    "contestId": 444,
    "index": "B",
    "name": "DZY Loves FFT",
    "rating": 2300,
    "tags": [
      "probabilities"
    ]
  },
  {
    "id": "1513/F",
    "contestId": 1513,
    "index": "F",
    "name": "Swapping Problem",
    "rating": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "30/C",
    "contestId": 30,
    "index": "C",
    "name": "Shooting Gallery",
    "rating": 1800,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "1989/C",
    "contestId": 1989,
    "index": "C",
    "name": "Two Movies",
    "rating": 1400,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1862/F",
    "contestId": 1862,
    "index": "F",
    "name": "Magic Will Save the World",
    "rating": 1800,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "id": "1754/A",
    "contestId": 1754,
    "index": "A",
    "name": "Technical Support",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "314/A",
    "contestId": 314,
    "index": "A",
    "name": "Sereja and Contest",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "166/D",
    "contestId": 166,
    "index": "D",
    "name": "Shoe Store",
    "rating": 2500,
    "tags": [
      "dp",
      "graph matchings",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "588/B",
    "contestId": 588,
    "index": "B",
    "name": "Duff in Love",
    "rating": 1300,
    "tags": [
      "math"
    ]
  },
  {
    "id": "749/A",
    "contestId": 749,
    "index": "A",
    "name": "Bachgold Problem",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1706/B",
    "contestId": 1706,
    "index": "B",
    "name": "Making Towers",
    "rating": 1100,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1943/F",
    "contestId": 1943,
    "index": "F",
    "name": "Minimum Hamming Distance",
    "rating": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1913/F",
    "contestId": 1913,
    "index": "F",
    "name": "Palindromic Problem",
    "rating": 2800,
    "tags": [
      "binary search",
      "data structures",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1733/E",
    "contestId": 1733,
    "index": "E",
    "name": "Conveyor",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "id": "490/E",
    "contestId": 490,
    "index": "E",
    "name": "Restoring Increasing Sequence",
    "rating": 2000,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1487/F",
    "contestId": 1487,
    "index": "F",
    "name": "Ones",
    "rating": 2900,
    "tags": [
      "dp",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "50/D",
    "contestId": 50,
    "index": "D",
    "name": "Bombing",
    "rating": 2100,
    "tags": [
      "binary search",
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "1942/E",
    "contestId": 1942,
    "index": "E",
    "name": "Farm Game",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "games"
    ]
  },
  {
    "id": "1138/A",
    "contestId": 1138,
    "index": "A",
    "name": "Sushi for Two",
    "rating": 900,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1165/B",
    "contestId": 1165,
    "index": "B",
    "name": "Polycarp Training",
    "rating": 1000,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "174/C",
    "contestId": 174,
    "index": "C",
    "name": "Range Increments",
    "rating": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1062/E",
    "contestId": 1062,
    "index": "E",
    "name": "Company",
    "rating": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "768/F",
    "contestId": 768,
    "index": "F",
    "name": "Barrels and boxes",
    "rating": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "id": "249/D",
    "contestId": 249,
    "index": "D",
    "name": "Donkey and Stars",
    "rating": 2700,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1623/E",
    "contestId": 1623,
    "index": "E",
    "name": "Middle Duplication",
    "rating": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "id": "360/E",
    "contestId": 360,
    "index": "E",
    "name": "Levko and Game",
    "rating": 2800,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "1715/A",
    "contestId": 1715,
    "index": "A",
    "name": "Crossmarket",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1875/D",
    "contestId": 1875,
    "index": "D",
    "name": "Jellyfish and Mex",
    "rating": 1600,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "807/B",
    "contestId": 807,
    "index": "B",
    "name": "T-Shirt Hunt",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "548/A",
    "contestId": 548,
    "index": "A",
    "name": "Mike and Fax",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1157/C2",
    "contestId": 1157,
    "index": "C2",
    "name": "Increasing Subsequence (hard version)",
    "rating": 1700,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "44/A",
    "contestId": 44,
    "index": "A",
    "name": "Indian Summer",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "604/B",
    "contestId": 604,
    "index": "B",
    "name": "More Cowbell",
    "rating": 1400,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "1716/C",
    "contestId": 1716,
    "index": "C",
    "name": "Robot in a Hallway",
    "rating": 2000,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "ternary search"
    ]
  },
  {
    "id": "427/B",
    "contestId": 427,
    "index": "B",
    "name": "Prison Transfer",
    "rating": 1100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "3/A",
    "contestId": 3,
    "index": "A",
    "name": "Shortest path of the king",
    "rating": 1000,
    "tags": [
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "620/D",
    "contestId": 620,
    "index": "D",
    "name": "Professor GukiZ and Two Arrays",
    "rating": 2200,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "id": "1904/F",
    "contestId": 1904,
    "index": "F",
    "name": "Beautiful Tree",
    "rating": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1034/A",
    "contestId": 1034,
    "index": "A",
    "name": "Enlarge GCD",
    "rating": 1800,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "413/E",
    "contestId": 413,
    "index": "E",
    "name": "Maze 2D",
    "rating": 2200,
    "tags": [
      "data structures",
      "divide and conquer"
    ]
  },
  {
    "id": "501/B",
    "contestId": 501,
    "index": "B",
    "name": "Misha and Changing Handles",
    "rating": 1100,
    "tags": [
      "data structures",
      "dsu",
      "strings"
    ]
  },
  {
    "id": "734/B",
    "contestId": 734,
    "index": "B",
    "name": "Anton and Digits",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "670/A",
    "contestId": 670,
    "index": "A",
    "name": "Holidays",
    "rating": 900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1646/E",
    "contestId": 1646,
    "index": "E",
    "name": "Power Board",
    "rating": 2200,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1566/B",
    "contestId": 1566,
    "index": "B",
    "name": "MIN-MEX Cut",
    "rating": 800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1285/A",
    "contestId": 1285,
    "index": "A",
    "name": "Mezo Playing Zoma",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "337/B",
    "contestId": 337,
    "index": "B",
    "name": "Routine Problem",
    "rating": 1400,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1027/E",
    "contestId": 1027,
    "index": "E",
    "name": "Inverse Coloring",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1737/E",
    "contestId": 1737,
    "index": "E",
    "name": "Ela Goes Hiking",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1876/A",
    "contestId": 1876,
    "index": "A",
    "name": "Helmets in Night Light",
    "rating": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "5/D",
    "contestId": 5,
    "index": "D",
    "name": "Follow Traffic Rules",
    "rating": 2100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "509/E",
    "contestId": 509,
    "index": "E",
    "name": "Pretty Song",
    "rating": 2000,
    "tags": [
      "math",
      "strings"
    ]
  },
  {
    "id": "1401/C",
    "contestId": 1401,
    "index": "C",
    "name": "Mere Array",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "631/D",
    "contestId": 631,
    "index": "D",
    "name": "Messenger",
    "rating": 2100,
    "tags": [
      "data structures",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "409/G",
    "contestId": 409,
    "index": "G",
    "name": "On a plane",
    "rating": 2200,
    "tags": [
      "*special",
      "geometry"
    ]
  },
  {
    "id": "1183/H",
    "contestId": 1183,
    "index": "H",
    "name": "Subsequences (hard version)",
    "rating": 1900,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "1288/E",
    "contestId": 1288,
    "index": "E",
    "name": "Messenger Simulator",
    "rating": 2000,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "612/B",
    "contestId": 612,
    "index": "B",
    "name": "HDD is Outdated Technology",
    "rating": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1370/A",
    "contestId": 1370,
    "index": "A",
    "name": "Maximum GCD",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1676/E",
    "contestId": 1676,
    "index": "E",
    "name": "Eating Queries",
    "rating": 1100,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "545/C",
    "contestId": 545,
    "index": "C",
    "name": "Woodcutters",
    "rating": 1500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "522/C",
    "contestId": 522,
    "index": "C",
    "name": "Chicken or Fish?",
    "rating": 2100,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "28/E",
    "contestId": 28,
    "index": "E",
    "name": "DravDe saves the world",
    "rating": 2800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1407/B",
    "contestId": 1407,
    "index": "B",
    "name": "Big Vova",
    "rating": 1300,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "350/D",
    "contestId": 350,
    "index": "D",
    "name": "Looking for Owls",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "geometry",
      "hashing",
      "sortings"
    ]
  },
  {
    "id": "1592/C",
    "contestId": 1592,
    "index": "C",
    "name": "Bakry and Partitioning",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1152/C",
    "contestId": 1152,
    "index": "C",
    "name": "Neko does Maths",
    "rating": 1800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "615/A",
    "contestId": 615,
    "index": "A",
    "name": "Bulbs",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1538/G",
    "contestId": 1538,
    "index": "G",
    "name": "Gift Set",
    "rating": 2100,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "1701/C",
    "contestId": 1701,
    "index": "C",
    "name": "Schedule Management",
    "rating": 1400,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "513/C",
    "contestId": 513,
    "index": "C",
    "name": "Second price auction",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "probabilities"
    ]
  },
  {
    "id": "1340/F",
    "contestId": 1340,
    "index": "F",
    "name": "Nastya and CBS",
    "rating": 3300,
    "tags": [
      "brute force",
      "data structures",
      "hashing"
    ]
  },
  {
    "id": "1188/B",
    "contestId": 1188,
    "index": "B",
    "name": "Count Pairs",
    "rating": 2300,
    "tags": [
      "math",
      "matrices",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1793/E",
    "contestId": 1793,
    "index": "E",
    "name": "Velepin and Marketing",
    "rating": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1427/B",
    "contestId": 1427,
    "index": "B",
    "name": "Chess Cheater",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "670/F",
    "contestId": 670,
    "index": "F",
    "name": "Restore a Number",
    "rating": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "493/A",
    "contestId": 493,
    "index": "A",
    "name": "Vasya and Football",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "893/E",
    "contestId": 893,
    "index": "E",
    "name": "Counting Arrays",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1158/B",
    "contestId": 1158,
    "index": "B",
    "name": "The minimal unique substring",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "math",
      "strings"
    ]
  },
  {
    "id": "1513/B",
    "contestId": 1513,
    "index": "B",
    "name": "AND Sequences",
    "rating": 1400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "74/A",
    "contestId": 74,
    "index": "A",
    "name": "Room Leader",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "114/A",
    "contestId": 114,
    "index": "A",
    "name": "Cifera",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "676/C",
    "contestId": 676,
    "index": "C",
    "name": "Vasya and String",
    "rating": 1500,
    "tags": [
      "binary search",
      "dp",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1139/D",
    "contestId": 1139,
    "index": "D",
    "name": "Steps to One",
    "rating": 2300,
    "tags": [
      "dp",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "id": "1637/F",
    "contestId": 1637,
    "index": "F",
    "name": "Towers",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1887/F",
    "contestId": 1887,
    "index": "F",
    "name": "Minimum Segments",
    "rating": 3400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "90/B",
    "contestId": 90,
    "index": "B",
    "name": "African Crossword",
    "rating": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1956/D",
    "contestId": 1956,
    "index": "D",
    "name": "Nene and the Mex Operator",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "divide and conquer",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "600/F",
    "contestId": 600,
    "index": "F",
    "name": "Edge coloring of bipartite graph",
    "rating": 2800,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "168/A",
    "contestId": 168,
    "index": "A",
    "name": "Wizards and Demonstration",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "243/E",
    "contestId": 243,
    "index": "E",
    "name": "Matrix",
    "rating": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1209/G2",
    "contestId": 1209,
    "index": "G2",
    "name": "Into Blocks (hard version)",
    "rating": 3200,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1404/B",
    "contestId": 1404,
    "index": "B",
    "name": "Tree Tag",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "trees"
    ]
  },
  {
    "id": "89/A",
    "contestId": 89,
    "index": "A",
    "name": "Robbery",
    "rating": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "749/D",
    "contestId": 749,
    "index": "D",
    "name": "Leaving Auction",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1585/A",
    "contestId": 1585,
    "index": "A",
    "name": "Life of a Flower",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "883/F",
    "contestId": 883,
    "index": "F",
    "name": "Lost in Transliteration",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "883/K",
    "contestId": 883,
    "index": "K",
    "name": "Road Widening",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1303/E",
    "contestId": 1303,
    "index": "E",
    "name": "Erase Subsequences",
    "rating": 2200,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "1906/M",
    "contestId": 1906,
    "index": "M",
    "name": "Triangle Construction",
    "rating": 1700,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1218/H",
    "contestId": 1218,
    "index": "H",
    "name": "Function Composition",
    "rating": 2900,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "id": "1400/F",
    "contestId": 1400,
    "index": "F",
    "name": "x-prime Substrings",
    "rating": 2800,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "724/D",
    "contestId": 724,
    "index": "D",
    "name": "Dense Subsequence",
    "rating": 1900,
    "tags": [
      "data structures",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1468/L",
    "contestId": 1468,
    "index": "L",
    "name": "Prime Divisors Selection",
    "rating": 2700,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "37/D",
    "contestId": 37,
    "index": "D",
    "name": "Lesson Timetable",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1028/A",
    "contestId": 1028,
    "index": "A",
    "name": "Find Square",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1567/B",
    "contestId": 1567,
    "index": "B",
    "name": "MEXor Mixup",
    "rating": 1000,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "id": "273/E",
    "contestId": 273,
    "index": "E",
    "name": "Dima and Game",
    "rating": 2600,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "id": "999/D",
    "contestId": 999,
    "index": "D",
    "name": "Equalize the Remainders",
    "rating": 1900,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1462/F",
    "contestId": 1462,
    "index": "F",
    "name": "The Treasure of The Segments",
    "rating": 1800,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1324/E",
    "contestId": 1324,
    "index": "E",
    "name": "Sleeping Schedule",
    "rating": 1700,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1994/B",
    "contestId": 1994,
    "index": "B",
    "name": "Fun Game",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1550/C",
    "contestId": 1550,
    "index": "C",
    "name": "Manhattan Subarrays",
    "rating": 1700,
    "tags": [
      "brute force",
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1203/F2",
    "contestId": 1203,
    "index": "F2",
    "name": "Complete the Projects (hard version)",
    "rating": 2300,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "723/C",
    "contestId": 723,
    "index": "C",
    "name": "Polycarp at the Radio",
    "rating": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "53/A",
    "contestId": 53,
    "index": "A",
    "name": "Autocomplete",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "202/B",
    "contestId": 202,
    "index": "B",
    "name": "Brand New Easy Problem",
    "rating": 1700,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1764/A",
    "contestId": 1764,
    "index": "A",
    "name": "Doremy's Paint",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1543/A",
    "contestId": 1543,
    "index": "A",
    "name": "Exciting Bets",
    "rating": 900,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "160/D",
    "contestId": 160,
    "index": "D",
    "name": "Edges in MST",
    "rating": 2300,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "sortings"
    ]
  },
  {
    "id": "1383/B",
    "contestId": 1383,
    "index": "B",
    "name": "GameGame",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1005/E1",
    "contestId": 1005,
    "index": "E1",
    "name": "Median on Segments (Permutations Edition)",
    "rating": 1800,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "39/E",
    "contestId": 39,
    "index": "E",
    "name": "What Has Dirichlet Got to Do with That?",
    "rating": 2000,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "id": "886/D",
    "contestId": 886,
    "index": "D",
    "name": "Restoration of string",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1495/F",
    "contestId": 1495,
    "index": "F",
    "name": "Squares",
    "rating": 3300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1661/E",
    "contestId": 1661,
    "index": "E",
    "name": "Narrow Components",
    "rating": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "dsu",
      "math",
      "trees"
    ]
  },
  {
    "id": "120/E",
    "contestId": 120,
    "index": "E",
    "name": "Put Knight!",
    "rating": 1400,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "1346/A",
    "contestId": 1346,
    "index": "A",
    "name": "Color Revolution",
    "rating": 1000,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "id": "339/D",
    "contestId": 339,
    "index": "D",
    "name": "Xenia and Bit Operations",
    "rating": 1700,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1717/E",
    "contestId": 1717,
    "index": "E",
    "name": "Madoka and The Best University",
    "rating": 2200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1205/E",
    "contestId": 1205,
    "index": "E",
    "name": "Expected Value Again",
    "rating": 3100,
    "tags": [
      "combinatorics",
      "strings"
    ]
  },
  {
    "id": "1485/E",
    "contestId": 1485,
    "index": "E",
    "name": "Move and Swap",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "581/C",
    "contestId": 581,
    "index": "C",
    "name": "Developing Skills",
    "rating": 1400,
    "tags": [
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "177/D1",
    "contestId": 177,
    "index": "D1",
    "name": "Encrypting Messages",
    "rating": 1200,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1769/C1",
    "contestId": 1769,
    "index": "C1",
    "name": "Подкрутка I",
    "rating": 1200,
    "tags": [
      "*special",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "115/C",
    "contestId": 115,
    "index": "C",
    "name": "Plumber",
    "rating": 2200,
    "tags": [
      "math"
    ]
  },
  {
    "id": "461/E",
    "contestId": 461,
    "index": "E",
    "name": "Appleman and a Game",
    "rating": 3000,
    "tags": [
      "binary search",
      "shortest paths",
      "strings"
    ]
  },
  {
    "id": "1781/B",
    "contestId": 1781,
    "index": "B",
    "name": "Going to the Cinema",
    "rating": 1000,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1311/F",
    "contestId": 1311,
    "index": "F",
    "name": "Moving Points",
    "rating": 1900,
    "tags": [
      "data structures",
      "divide and conquer",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1876/C",
    "contestId": 1876,
    "index": "C",
    "name": "Autosynthesis",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "244/A",
    "contestId": 244,
    "index": "A",
    "name": "Dividing Orange",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "540/D",
    "contestId": 540,
    "index": "D",
    "name": "Bad Luck Island",
    "rating": 1900,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "559/C",
    "contestId": 559,
    "index": "C",
    "name": "Gerald and Giant Chess",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1214/B",
    "contestId": 1214,
    "index": "B",
    "name": "Badges",
    "rating": 1100,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1201/C",
    "contestId": 1201,
    "index": "C",
    "name": "Maximum Median",
    "rating": 1400,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "575/G",
    "contestId": 575,
    "index": "G",
    "name": "Run for beer",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "shortest paths"
    ]
  },
  {
    "id": "371/C",
    "contestId": 371,
    "index": "C",
    "name": "Hamburgers",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "id": "1607/F",
    "contestId": 1607,
    "index": "F",
    "name": "Robot on the Board 2",
    "rating": 2300,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1933/E",
    "contestId": 1933,
    "index": "E",
    "name": "Turtle vs. Rabbit Race: Optimal Trainings",
    "rating": 1500,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "1644/F",
    "contestId": 1644,
    "index": "F",
    "name": "Basis",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1031/A",
    "contestId": 1031,
    "index": "A",
    "name": "Golden Plate",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "767/C",
    "contestId": 767,
    "index": "C",
    "name": "Garland",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1828/B",
    "contestId": 1828,
    "index": "B",
    "name": "Permutation Swap",
    "rating": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "720/A",
    "contestId": 720,
    "index": "A",
    "name": "Closing ceremony",
    "rating": 2000,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "294/D",
    "contestId": 294,
    "index": "D",
    "name": "Shaass and Painter Robot",
    "rating": 2500,
    "tags": [
      "brute force",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "1175/G",
    "contestId": 1175,
    "index": "G",
    "name": "Yet Another Partiton Problem",
    "rating": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "geometry",
      "two pointers"
    ]
  },
  {
    "id": "140/F",
    "contestId": 140,
    "index": "F",
    "name": "New Year Snowflake",
    "rating": 2600,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "1725/G",
    "contestId": 1725,
    "index": "G",
    "name": "Garage",
    "rating": 1500,
    "tags": [
      "binary search",
      "geometry",
      "math"
    ]
  },
  {
    "id": "1680/B",
    "contestId": 1680,
    "index": "B",
    "name": "Robots",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1658/E",
    "contestId": 1658,
    "index": "E",
    "name": "Gojou and Matrix Game",
    "rating": 2500,
    "tags": [
      "data structures",
      "dp",
      "games",
      "hashing",
      "implementation",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "275/B",
    "contestId": 275,
    "index": "B",
    "name": "Convex Shape",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "877/A",
    "contestId": 877,
    "index": "A",
    "name": "Alex and broken contest",
    "rating": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1178/F1",
    "contestId": 1178,
    "index": "F1",
    "name": "Short Colorful Strip",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "id": "1165/C",
    "contestId": 1165,
    "index": "C",
    "name": "Good String",
    "rating": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "913/G",
    "contestId": 913,
    "index": "G",
    "name": "Power Substring",
    "rating": 3200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "15/E",
    "contestId": 15,
    "index": "E",
    "name": "Triangles",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "899/A",
    "contestId": 899,
    "index": "A",
    "name": "Splitting in Teams",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1167/A",
    "contestId": 1167,
    "index": "A",
    "name": "Telephone Number",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "9/C",
    "contestId": 9,
    "index": "C",
    "name": "Hexadecimal's Numbers",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "712/D",
    "contestId": 712,
    "index": "D",
    "name": "Memory and Scores",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "29/B",
    "contestId": 29,
    "index": "B",
    "name": "Traffic Lights",
    "rating": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1674/F",
    "contestId": 1674,
    "index": "F",
    "name": "Desktop Rearrangement",
    "rating": 1800,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1212/D",
    "contestId": 1212,
    "index": "D",
    "name": "Divide by three, multiply by two",
    "rating": 1400,
    "tags": [
      "*special",
      "math"
    ]
  },
  {
    "id": "1057/A",
    "contestId": 1057,
    "index": "A",
    "name": "Bmail Computer Network",
    "rating": 900,
    "tags": [
      "*special",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "365/B",
    "contestId": 365,
    "index": "B",
    "name": "The Fibonacci Segment",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1140/C",
    "contestId": 1140,
    "index": "C",
    "name": "Playlist",
    "rating": 1600,
    "tags": [
      "brute force",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1807/G2",
    "contestId": 1807,
    "index": "G2",
    "name": "Subsequence Addition (Hard Version)",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "237/D",
    "contestId": 237,
    "index": "D",
    "name": "T-decomposition",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "400/B",
    "contestId": 400,
    "index": "B",
    "name": "Inna and New Matrix of Candies",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation",
      "schedules"
    ]
  },
  {
    "id": "1353/B",
    "contestId": 1353,
    "index": "B",
    "name": "Two Arrays And Swaps",
    "rating": 800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1054/G",
    "contestId": 1054,
    "index": "G",
    "name": "New Road Network",
    "rating": 3300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1764/F",
    "contestId": 1764,
    "index": "F",
    "name": "Doremy's Experimental Tree",
    "rating": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1385/D",
    "contestId": 1385,
    "index": "D",
    "name": "a-Good String",
    "rating": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "divide and conquer",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "980/A",
    "contestId": 980,
    "index": "A",
    "name": "Links and Pearls",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1988/A",
    "contestId": 1988,
    "index": "A",
    "name": "Split the Multiset",
    "rating": 900,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "228/C",
    "contestId": 228,
    "index": "C",
    "name": "Fractal Detector",
    "rating": 2000,
    "tags": [
      "dp",
      "hashing"
    ]
  },
  {
    "id": "801/B",
    "contestId": 801,
    "index": "B",
    "name": "Valued Keys",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1784/D",
    "contestId": 1784,
    "index": "D",
    "name": "Wooden Spoon",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1800/F",
    "contestId": 1800,
    "index": "F",
    "name": "Dasha and Nightmares",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "hashing",
      "meet-in-the-middle",
      "strings"
    ]
  },
  {
    "id": "1787/A",
    "contestId": 1787,
    "index": "A",
    "name": "Exponential Equation",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "852/G",
    "contestId": 852,
    "index": "G",
    "name": "Bathroom terminal",
    "rating": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1872/A",
    "contestId": 1872,
    "index": "A",
    "name": "Two Vessels",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1656/E",
    "contestId": 1656,
    "index": "E",
    "name": "Equal Tree Sums",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "math",
      "trees"
    ]
  },
  {
    "id": "1801/D",
    "contestId": 1801,
    "index": "D",
    "name": "The way home",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "graphs",
      "greedy",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "1902/F",
    "contestId": 1902,
    "index": "F",
    "name": "Trees and XOR Queries Again",
    "rating": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "graphs",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "id": "1439/A1",
    "contestId": 1439,
    "index": "A1",
    "name": "Binary Table (Easy Version)",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1849/A",
    "contestId": 1849,
    "index": "A",
    "name": "Morning Sandwich",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "417/B",
    "contestId": 417,
    "index": "B",
    "name": "Crash",
    "rating": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1332/G",
    "contestId": 1332,
    "index": "G",
    "name": "No Monotone Triples",
    "rating": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1373/B",
    "contestId": 1373,
    "index": "B",
    "name": "01 Game",
    "rating": 900,
    "tags": [
      "games"
    ]
  },
  {
    "id": "1728/C",
    "contestId": 1728,
    "index": "C",
    "name": "Digital Logarithm",
    "rating": 1400,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "73/B",
    "contestId": 73,
    "index": "B",
    "name": "Need For Brake",
    "rating": 2000,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "56/C",
    "contestId": 56,
    "index": "C",
    "name": "Corporation Mail",
    "rating": 1700,
    "tags": [
      "data structures",
      "expression parsing",
      "implementation"
    ]
  },
  {
    "id": "639/B",
    "contestId": 639,
    "index": "B",
    "name": "Bear and Forgotten Tree 3",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1188/C",
    "contestId": 1188,
    "index": "C",
    "name": "Array Beauty",
    "rating": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "167/E",
    "contestId": 167,
    "index": "E",
    "name": "Wizards and Bets",
    "rating": 2900,
    "tags": [
      "dfs and similar",
      "graphs",
      "math",
      "matrices"
    ]
  },
  {
    "id": "1736/B",
    "contestId": 1736,
    "index": "B",
    "name": "Playing with GCD",
    "rating": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1872/C",
    "contestId": 1872,
    "index": "C",
    "name": "Non-coprime Split",
    "rating": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "19/D",
    "contestId": 19,
    "index": "D",
    "name": "Points",
    "rating": 2800,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "718/E",
    "contestId": 718,
    "index": "E",
    "name": "Matvey's Birthday",
    "rating": 3300,
    "tags": [
      "bitmasks",
      "graphs"
    ]
  },
  {
    "id": "294/A",
    "contestId": 294,
    "index": "A",
    "name": "Shaass and Oskols",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "299/B",
    "contestId": 299,
    "index": "B",
    "name": "Ksusha the Squirrel",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1851/B",
    "contestId": 1851,
    "index": "B",
    "name": "Parity Sort",
    "rating": 800,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1092/B",
    "contestId": 1092,
    "index": "B",
    "name": "Teams Forming",
    "rating": 800,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "509/A",
    "contestId": 509,
    "index": "A",
    "name": "Maximum in Table",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1549/A",
    "contestId": 1549,
    "index": "A",
    "name": "Gregor and Cryptography",
    "rating": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "440/A",
    "contestId": 440,
    "index": "A",
    "name": "Forgotten Episode",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1725/F",
    "contestId": 1725,
    "index": "F",
    "name": "Field Photography",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1368/G",
    "contestId": 1368,
    "index": "G",
    "name": "Shifting Dominoes",
    "rating": 3200,
    "tags": [
      "data structures",
      "geometry",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "54/D",
    "contestId": 54,
    "index": "D",
    "name": "Writing a Song",
    "rating": 2100,
    "tags": [
      "brute force",
      "dp",
      "strings"
    ]
  },
  {
    "id": "1418/F",
    "contestId": 1418,
    "index": "F",
    "name": "Equal Product",
    "rating": 3000,
    "tags": [
      "data structures",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1838/C",
    "contestId": 1838,
    "index": "C",
    "name": "No Prime Differences",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1941/A",
    "contestId": 1941,
    "index": "A",
    "name": "Rudolf and the Ticket",
    "rating": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "56/A",
    "contestId": 56,
    "index": "A",
    "name": "Bar",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "177/B1",
    "contestId": 177,
    "index": "B1",
    "name": "Rectangular Game",
    "rating": 1000,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "1045/B",
    "contestId": 1045,
    "index": "B",
    "name": "Space Isaac",
    "rating": 2400,
    "tags": [
      "hashing",
      "number theory"
    ]
  },
  {
    "id": "175/B",
    "contestId": 175,
    "index": "B",
    "name": "Plane of Tanks: Pro",
    "rating": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "452/F",
    "contestId": 452,
    "index": "F",
    "name": "Permutation",
    "rating": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "hashing"
    ]
  },
  {
    "id": "1879/B",
    "contestId": 1879,
    "index": "B",
    "name": "Chips on the Board",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1359/C",
    "contestId": 1359,
    "index": "C",
    "name": "Mixing Water",
    "rating": 1700,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "10/A",
    "contestId": 10,
    "index": "A",
    "name": "Power Consumption Calculation",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1527/A",
    "contestId": 1527,
    "index": "A",
    "name": "And Then There Were K",
    "rating": 800,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "id": "690/B2",
    "contestId": 690,
    "index": "B2",
    "name": "Recover Polygon (medium)",
    "rating": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1921/F",
    "contestId": 1921,
    "index": "F",
    "name": "Sum of Progression",
    "rating": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "379/E",
    "contestId": 379,
    "index": "E",
    "name": "New Year Tree Decorations",
    "rating": 2500,
    "tags": [
      "geometry",
      "schedules",
      "sortings"
    ]
  },
  {
    "id": "17/E",
    "contestId": 17,
    "index": "E",
    "name": "Palisection",
    "rating": 2900,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "453/E",
    "contestId": 453,
    "index": "E",
    "name": "Little Pony and Lord Tirek",
    "rating": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "623/E",
    "contestId": 623,
    "index": "E",
    "name": "Transforming Sequence",
    "rating": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "1076/C",
    "contestId": 1076,
    "index": "C",
    "name": "Meme Problem",
    "rating": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "832/A",
    "contestId": 832,
    "index": "A",
    "name": "Sasha and Sticks",
    "rating": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "1336/E1",
    "contestId": 1336,
    "index": "E1",
    "name": "Chiori and Doll Picking (easy version)",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1338/E",
    "contestId": 1338,
    "index": "E",
    "name": "JYPnation",
    "rating": 3500,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "1359/E",
    "contestId": 1359,
    "index": "E",
    "name": "Modular Stability",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1065/E",
    "contestId": 1065,
    "index": "E",
    "name": "Side Transmutations",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "strings"
    ]
  },
  {
    "id": "735/E",
    "contestId": 735,
    "index": "E",
    "name": "Ostap and Tree",
    "rating": 2500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "1633/D",
    "contestId": 1633,
    "index": "D",
    "name": "Make Them Equal",
    "rating": 1600,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1463/E",
    "contestId": 1463,
    "index": "E",
    "name": "Plan of Lectures",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1737/B",
    "contestId": 1737,
    "index": "B",
    "name": "Ela's Fitness and the Luxury Number",
    "rating": 1300,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "id": "6/D",
    "contestId": 6,
    "index": "D",
    "name": "Lizards and Basements 2",
    "rating": 2600,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "683/E",
    "contestId": 683,
    "index": "E",
    "name": "Hammer throwing",
    "rating": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1047/A",
    "contestId": 1047,
    "index": "A",
    "name": "Little C Loves 3 I",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1821/C",
    "contestId": 1821,
    "index": "C",
    "name": "Tear It Apart",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "id": "1872/G",
    "contestId": 1872,
    "index": "G",
    "name": "Replace With Product",
    "rating": 2000,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "346/A",
    "contestId": 346,
    "index": "A",
    "name": "Alice and Bob",
    "rating": 1600,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "id": "755/B",
    "contestId": 755,
    "index": "B",
    "name": "PolandBall and Game",
    "rating": 1100,
    "tags": [
      "binary search",
      "data structures",
      "games",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1927/E",
    "contestId": 1927,
    "index": "E",
    "name": "Klever Permutation",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1353/C",
    "contestId": 1353,
    "index": "C",
    "name": "Board Moves",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1879/D",
    "contestId": 1879,
    "index": "D",
    "name": "Sum of XOR Functions",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "id": "493/B",
    "contestId": 493,
    "index": "B",
    "name": "Vasya and Wrestling",
    "rating": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1239/A",
    "contestId": 1239,
    "index": "A",
    "name": "Ivan the Fool and the Probability Theory",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1249/A",
    "contestId": 1249,
    "index": "A",
    "name": "Yet Another Dividing into Teams",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1814/C",
    "contestId": 1814,
    "index": "C",
    "name": "Search in Parallel",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "357/A",
    "contestId": 357,
    "index": "A",
    "name": "Group of Students",
    "rating": 1000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "472/A",
    "contestId": 472,
    "index": "A",
    "name": "Design Tutorial: Learn from Math",
    "rating": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1673/B",
    "contestId": 1673,
    "index": "B",
    "name": "A Perfectly Balanced String?",
    "rating": 1100,
    "tags": [
      "brute force",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1066/F",
    "contestId": 1066,
    "index": "F",
    "name": "Yet another 2D Walking",
    "rating": 2100,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "553/C",
    "contestId": 553,
    "index": "C",
    "name": "Love Triangles",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "553/E",
    "contestId": 553,
    "index": "E",
    "name": "Kyoya and Train",
    "rating": 3200,
    "tags": [
      "dp",
      "fft",
      "graphs",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "727/A",
    "contestId": 727,
    "index": "A",
    "name": "Transformation: from A to B",
    "rating": 1000,
    "tags": [
      "brute force",
      "dfs and similar",
      "math"
    ]
  },
  {
    "id": "875/F",
    "contestId": 875,
    "index": "F",
    "name": "Royal Questions",
    "rating": 2500,
    "tags": [
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1622/B",
    "contestId": 1622,
    "index": "B",
    "name": "Berland Music",
    "rating": 1000,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1861/A",
    "contestId": 1861,
    "index": "A",
    "name": "Prime Deletion",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1696/D",
    "contestId": 1696,
    "index": "D",
    "name": "Permutation Graph",
    "rating": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "1672/I",
    "contestId": 1672,
    "index": "I",
    "name": "PermutationForces",
    "rating": 3000,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1560/F1",
    "contestId": 1560,
    "index": "F1",
    "name": "Nearest Beautiful Number (easy version)",
    "rating": 1900,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "id": "1091/E",
    "contestId": 1091,
    "index": "E",
    "name": "New Year and the Acquaintance Estimation",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "465/A",
    "contestId": 465,
    "index": "A",
    "name": "inc ARG",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "630/E",
    "contestId": 630,
    "index": "E",
    "name": "A rectangle",
    "rating": 1900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1850/G",
    "contestId": 1850,
    "index": "G",
    "name": "The Morning Star",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "data structures",
      "geometry",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1003/E",
    "contestId": 1003,
    "index": "E",
    "name": "Tree Constructing",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "989/B",
    "contestId": 989,
    "index": "B",
    "name": "A Tide of Riverscape",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "405/D",
    "contestId": 405,
    "index": "D",
    "name": "Toy Sum",
    "rating": 1700,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1207/F",
    "contestId": 1207,
    "index": "F",
    "name": "Remainder Problem",
    "rating": 2100,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "570/E",
    "contestId": 570,
    "index": "E",
    "name": "Pig and Palindromes",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "459/E",
    "contestId": 459,
    "index": "E",
    "name": "Pashmak and Graph",
    "rating": 1900,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "id": "1217/A",
    "contestId": 1217,
    "index": "A",
    "name": "Creating a Character",
    "rating": 1300,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "433/B",
    "contestId": 433,
    "index": "B",
    "name": "Kuriyama Mirai's Stones",
    "rating": 1200,
    "tags": [
      "dp",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1272/D",
    "contestId": 1272,
    "index": "D",
    "name": "Remove One Element",
    "rating": 1500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "1834/A",
    "contestId": 1834,
    "index": "A",
    "name": "Unit Array",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "597/A",
    "contestId": 597,
    "index": "A",
    "name": "Divisibility",
    "rating": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "id": "347/A",
    "contestId": 347,
    "index": "A",
    "name": "Difference Row",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1066/A",
    "contestId": 1066,
    "index": "A",
    "name": "Vova and Train",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "349/A",
    "contestId": 349,
    "index": "A",
    "name": "Cinema Line",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1500/F",
    "contestId": 1500,
    "index": "F",
    "name": "Cupboards Jumps",
    "rating": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1385/F",
    "contestId": 1385,
    "index": "F",
    "name": "Removing Leaves",
    "rating": 2300,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1060/H",
    "contestId": 1060,
    "index": "H",
    "name": "Sophisticated Device",
    "rating": 3300,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "132/C",
    "contestId": 132,
    "index": "C",
    "name": "Logo Turtle",
    "rating": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "878/D",
    "contestId": 878,
    "index": "D",
    "name": "Magic Breeding",
    "rating": 2900,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "id": "43/B",
    "contestId": 43,
    "index": "B",
    "name": "Letter",
    "rating": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "835/A",
    "contestId": 835,
    "index": "A",
    "name": "Key races",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "518/D",
    "contestId": 518,
    "index": "D",
    "name": "Ilya and Escalator",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "576/A",
    "contestId": 576,
    "index": "A",
    "name": "Vasya and Petya's Game",
    "rating": 1500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1132/D",
    "contestId": 1132,
    "index": "D",
    "name": "Stressful Training",
    "rating": 2300,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "1787/C",
    "contestId": 1787,
    "index": "C",
    "name": "Remove the Bracket",
    "rating": 1600,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "746/D",
    "contestId": 746,
    "index": "D",
    "name": "Green and Black Tea",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "903/A",
    "contestId": 903,
    "index": "A",
    "name": "Hungry Student Problem",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1660/F1",
    "contestId": 1660,
    "index": "F1",
    "name": "Promising String (easy version)",
    "rating": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "id": "305/A",
    "contestId": 305,
    "index": "A",
    "name": "Strange Addition",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "311/A",
    "contestId": 311,
    "index": "A",
    "name": "The Closest Pair",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1678/B2",
    "contestId": 1678,
    "index": "B2",
    "name": "Tokitsukaze and Good 01-String (hard version)",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "742/A",
    "contestId": 742,
    "index": "A",
    "name": "Arpa’s hard exam and Mehrdad’s naive cheat",
    "rating": 1000,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "364/A",
    "contestId": 364,
    "index": "A",
    "name": "Matrix",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "559/A",
    "contestId": 559,
    "index": "A",
    "name": "Gerald's Hexagon",
    "rating": 1600,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "id": "22/A",
    "contestId": 22,
    "index": "A",
    "name": "Second Order Statistics",
    "rating": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "182/E",
    "contestId": 182,
    "index": "E",
    "name": "Wooden Fence",
    "rating": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "769/A",
    "contestId": 769,
    "index": "A",
    "name": "Year of University Entrance",
    "rating": 800,
    "tags": [
      "*special",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "516/D",
    "contestId": 516,
    "index": "D",
    "name": "Drazil and Morning Exercise",
    "rating": 2800,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "808/B",
    "contestId": 808,
    "index": "B",
    "name": "Average Sleep Time",
    "rating": 1300,
    "tags": [
      "data structures",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1739/F",
    "contestId": 1739,
    "index": "F",
    "name": "Keyboard Design",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "data structures",
      "dp",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "513/D1",
    "contestId": 513,
    "index": "D1",
    "name": "Constrained Tree",
    "rating": 2400,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "id": "1620/A",
    "contestId": 1620,
    "index": "A",
    "name": "Equal or Not Equal",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "dsu",
      "implementation"
    ]
  },
  {
    "id": "128/B",
    "contestId": 128,
    "index": "B",
    "name": "String",
    "rating": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "hashing",
      "implementation",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1088/F",
    "contestId": 1088,
    "index": "F",
    "name": "Ehab and a weird weight formula",
    "rating": 2800,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "176/A",
    "contestId": 176,
    "index": "A",
    "name": "Trading Business",
    "rating": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1163/A",
    "contestId": 1163,
    "index": "A",
    "name": "Eating Soup",
    "rating": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1797/E",
    "contestId": 1797,
    "index": "E",
    "name": "Li Hua and Array",
    "rating": 2300,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "112/A",
    "contestId": 112,
    "index": "A",
    "name": "Petya and Strings",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "303/B",
    "contestId": 303,
    "index": "B",
    "name": "Rectangle Puzzle II",
    "rating": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "411/B",
    "contestId": 411,
    "index": "B",
    "name": "Multi-core Processor",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1811/C",
    "contestId": 1811,
    "index": "C",
    "name": "Restore the Array",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1202/F",
    "contestId": 1202,
    "index": "F",
    "name": "You Are Given Some Letters...",
    "rating": 2700,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "id": "590/C",
    "contestId": 590,
    "index": "C",
    "name": "Three States",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1476/B",
    "contestId": 1476,
    "index": "B",
    "name": "Inflation",
    "rating": 1300,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1935/A",
    "contestId": 1935,
    "index": "A",
    "name": "Entertainment in MAC",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "1559/C",
    "contestId": 1559,
    "index": "C",
    "name": "Mocha and Hiking",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "1227/A",
    "contestId": 1227,
    "index": "A",
    "name": "Math Problem",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1436/D",
    "contestId": 1436,
    "index": "D",
    "name": "Bandit in a City",
    "rating": 1900,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "585/C",
    "contestId": 585,
    "index": "C",
    "name": "Alice, Bob, Oranges and Apples",
    "rating": 2400,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "695/B",
    "contestId": 695,
    "index": "B",
    "name": "Break Up",
    "rating": 2600,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "1988/E",
    "contestId": 1988,
    "index": "E",
    "name": "Range Minimum Sum",
    "rating": 2300,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "implementation"
    ]
  },
  {
    "id": "1237/F",
    "contestId": 1237,
    "index": "F",
    "name": "Balanced Domino Placements",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "920/G",
    "contestId": 920,
    "index": "G",
    "name": "List Of Integers",
    "rating": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "599/E",
    "contestId": 599,
    "index": "E",
    "name": "Sandy and Nuts",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1610/D",
    "contestId": 1610,
    "index": "D",
    "name": "Not Quite Lee",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1162/B",
    "contestId": 1162,
    "index": "B",
    "name": "Double Matrix",
    "rating": 1400,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1778/D",
    "contestId": 1778,
    "index": "D",
    "name": "Flexible String Revisit",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1949/C",
    "contestId": 1949,
    "index": "C",
    "name": "Annual Ants' Gathering",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1431/C",
    "contestId": 1431,
    "index": "C",
    "name": "Black Friday",
    "rating": 1600,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1965/C",
    "contestId": 1965,
    "index": "C",
    "name": "Folding Strip",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "417/E",
    "contestId": 417,
    "index": "E",
    "name": "Square Table",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "23/C",
    "contestId": 23,
    "index": "C",
    "name": "Oranges and Apples",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "729/C",
    "contestId": 729,
    "index": "C",
    "name": "Road to Cinema",
    "rating": 1700,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "932/C",
    "contestId": 932,
    "index": "C",
    "name": "Permutation Cycle",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "1658/D1",
    "contestId": 1658,
    "index": "D1",
    "name": "388535 (Easy Version)",
    "rating": 1600,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "id": "1841/C",
    "contestId": 1841,
    "index": "C",
    "name": "Ranom Numbers",
    "rating": 1800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "409/H",
    "contestId": 409,
    "index": "H",
    "name": "A + B Strikes Back",
    "rating": 1500,
    "tags": [
      "*special",
      "brute force",
      "constructive algorithms",
      "dsu",
      "implementation"
    ]
  },
  {
    "id": "1549/B",
    "contestId": 1549,
    "index": "B",
    "name": "Gregor and the Pawn Game",
    "rating": 800,
    "tags": [
      "dfs and similar",
      "dp",
      "flows",
      "graph matchings",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1914/D",
    "contestId": 1914,
    "index": "D",
    "name": "Three Activities",
    "rating": 1200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1974/B",
    "contestId": 1974,
    "index": "B",
    "name": "Symmetric Encoding",
    "rating": 800,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1490/G",
    "contestId": 1490,
    "index": "G",
    "name": "Old Floppy Drive",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "math"
    ]
  },
  {
    "id": "1088/E",
    "contestId": 1088,
    "index": "E",
    "name": "Ehab and a component choosing problem",
    "rating": 2400,
    "tags": [
      "dp",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "id": "967/A",
    "contestId": 967,
    "index": "A",
    "name": "Mind the Gap",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1194/E",
    "contestId": 1194,
    "index": "E",
    "name": "Count The Rectangles",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "698/B",
    "contestId": 698,
    "index": "B",
    "name": "Fix a Tree",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "342/C",
    "contestId": 342,
    "index": "C",
    "name": "Cupboard and Balloons",
    "rating": 1900,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "259/A",
    "contestId": 259,
    "index": "A",
    "name": "Little Elephant and Chess",
    "rating": 1000,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "id": "1399/E2",
    "contestId": 1399,
    "index": "E2",
    "name": "Weights Division (hard version)",
    "rating": 2200,
    "tags": [
      "binary search",
      "dfs and similar",
      "greedy",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "1499/B",
    "contestId": 1499,
    "index": "B",
    "name": "Binary Removals",
    "rating": 1000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1093/A",
    "contestId": 1093,
    "index": "A",
    "name": "Dice Rolling",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1020/B",
    "contestId": 1020,
    "index": "B",
    "name": "Badge",
    "rating": 1000,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "218/A",
    "contestId": 218,
    "index": "A",
    "name": "Mountain Scenery",
    "rating": 1100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "643/A",
    "contestId": 643,
    "index": "A",
    "name": "Bear and Colors",
    "rating": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "344/B",
    "contestId": 344,
    "index": "B",
    "name": "Simple Molecules",
    "rating": 1200,
    "tags": [
      "brute force",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1967/B2",
    "contestId": 1967,
    "index": "B2",
    "name": "Reverse Card (Hard Version)",
    "rating": 2200,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1077/F2",
    "contestId": 1077,
    "index": "F2",
    "name": "Pictures with Kittens (hard version)",
    "rating": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "258/E",
    "contestId": 258,
    "index": "E",
    "name": "Little Elephant and Tree",
    "rating": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "764/A",
    "contestId": 764,
    "index": "A",
    "name": "Taymyr is calling you",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1019/D",
    "contestId": 1019,
    "index": "D",
    "name": "Large Triangle",
    "rating": 2700,
    "tags": [
      "binary search",
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "734/C",
    "contestId": 734,
    "index": "C",
    "name": "Anton and Making Potions",
    "rating": 1600,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1106/A",
    "contestId": 1106,
    "index": "A",
    "name": "Lunar New Year and Cross Counting",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1244/A",
    "contestId": 1244,
    "index": "A",
    "name": "Pens and Pencils",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "794/C",
    "contestId": 794,
    "index": "C",
    "name": "Naming Company",
    "rating": 1800,
    "tags": [
      "games",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1970/C2",
    "contestId": 1970,
    "index": "C2",
    "name": "Game on Tree (Medium)",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "trees"
    ]
  },
  {
    "id": "274/E",
    "contestId": 274,
    "index": "E",
    "name": "Mirror Room",
    "rating": 3000,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1703/B",
    "contestId": 1703,
    "index": "B",
    "name": "ICPC Balloons",
    "rating": 800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "471/A",
    "contestId": 471,
    "index": "A",
    "name": "MUH and Sticks",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "196/B",
    "contestId": 196,
    "index": "B",
    "name": "Infinite Maze",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1101/C",
    "contestId": 1101,
    "index": "C",
    "name": "Division and Union",
    "rating": 1500,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "780/B",
    "contestId": 780,
    "index": "B",
    "name": "The Meeting Place Cannot Be Changed",
    "rating": 1600,
    "tags": [
      "binary search"
    ]
  },
  {
    "id": "1625/E1",
    "contestId": 1625,
    "index": "E1",
    "name": "Cats on the Upgrade (easy version)",
    "rating": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "509/C",
    "contestId": 509,
    "index": "C",
    "name": "Sums of Digits",
    "rating": 2000,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1498/C",
    "contestId": 1498,
    "index": "C",
    "name": "Planar Reflections",
    "rating": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1687/C",
    "contestId": 1687,
    "index": "C",
    "name": "Sanae and Giant Robot",
    "rating": 2500,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1726/A",
    "contestId": 1726,
    "index": "A",
    "name": "Mainak and Array",
    "rating": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1117/D",
    "contestId": 1117,
    "index": "D",
    "name": "Magic Gems",
    "rating": 2100,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "id": "471/C",
    "contestId": 471,
    "index": "C",
    "name": "MUH and House of Cards",
    "rating": 1700,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1656/A",
    "contestId": 1656,
    "index": "A",
    "name": "Good Pairs",
    "rating": 800,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "id": "1249/F",
    "contestId": 1249,
    "index": "F",
    "name": "Maximum Weight Subset",
    "rating": 2200,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "832/B",
    "contestId": 832,
    "index": "B",
    "name": "Petya and Exam",
    "rating": 1600,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1545/E2",
    "contestId": 1545,
    "index": "E2",
    "name": "AquaMoon and Time Stop (hard version)",
    "rating": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "876/B",
    "contestId": 876,
    "index": "B",
    "name": "Divisiblity of Differences",
    "rating": 1300,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1915/E",
    "contestId": 1915,
    "index": "E",
    "name": "Romantic Glasses",
    "rating": 1300,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1342/A",
    "contestId": 1342,
    "index": "A",
    "name": "Road To Zero",
    "rating": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1601/A",
    "contestId": 1601,
    "index": "A",
    "name": "Array Elimination",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "559/D",
    "contestId": 559,
    "index": "D",
    "name": "Randomizer",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "geometry",
      "probabilities"
    ]
  },
  {
    "id": "1874/E",
    "contestId": 1874,
    "index": "E",
    "name": "Jellyfish and Hack",
    "rating": 3000,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1045/H",
    "contestId": 1045,
    "index": "H",
    "name": "Self-exploration",
    "rating": 2400,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1046/C",
    "contestId": 1046,
    "index": "C",
    "name": "Space Formula",
    "rating": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1292/F",
    "contestId": 1292,
    "index": "F",
    "name": "Nora's Toy Boxes",
    "rating": 3500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "305/E",
    "contestId": 305,
    "index": "E",
    "name": "Playing with String",
    "rating": 2300,
    "tags": [
      "games"
    ]
  },
  {
    "id": "69/C",
    "contestId": 69,
    "index": "C",
    "name": "Game",
    "rating": 2000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "381/A",
    "contestId": 381,
    "index": "A",
    "name": "Sereja and Dima",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1475/E",
    "contestId": 1475,
    "index": "E",
    "name": "Advertising Agency",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1111/A",
    "contestId": 1111,
    "index": "A",
    "name": "Superhero Transformation",
    "rating": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "73/D",
    "contestId": 73,
    "index": "D",
    "name": "FreeDiv",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "960/B",
    "contestId": 960,
    "index": "B",
    "name": "Minimize the error",
    "rating": 1500,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1781/A",
    "contestId": 1781,
    "index": "A",
    "name": "Parallel Projection",
    "rating": 800,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1467/B",
    "contestId": 1467,
    "index": "B",
    "name": "Hills And Valleys",
    "rating": 1700,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1396/A",
    "contestId": 1396,
    "index": "A",
    "name": "Multiples of Length",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "216/D",
    "contestId": 216,
    "index": "D",
    "name": "Spider's Web",
    "rating": 1700,
    "tags": [
      "binary search",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "838/D",
    "contestId": 838,
    "index": "D",
    "name": "Airplane Arrangements",
    "rating": 2700,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1197/E",
    "contestId": 1197,
    "index": "E",
    "name": "Culture Code",
    "rating": 2300,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dp",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "84/A",
    "contestId": 84,
    "index": "A",
    "name": "Toy Army",
    "rating": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1304/A",
    "contestId": 1304,
    "index": "A",
    "name": "Two Rabbits",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "840/B",
    "contestId": 840,
    "index": "B",
    "name": "Leha and another game about graph",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "660/A",
    "contestId": 660,
    "index": "A",
    "name": "Co-prime Array",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "598/E",
    "contestId": 598,
    "index": "E",
    "name": "Chocolate Bar",
    "rating": 2000,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "859/D",
    "contestId": 859,
    "index": "D",
    "name": "Third Month Insanity",
    "rating": 2100,
    "tags": [
      "dp",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "1012/B",
    "contestId": 1012,
    "index": "B",
    "name": "Chemical table",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "matrices"
    ]
  },
  {
    "id": "1266/E",
    "contestId": 1266,
    "index": "E",
    "name": "Spaceship Solitaire",
    "rating": 2100,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1818/A",
    "contestId": 1818,
    "index": "A",
    "name": "Politics",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "575/D",
    "contestId": 575,
    "index": "D",
    "name": "Tablecity",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1508/F",
    "contestId": 1508,
    "index": "F",
    "name": "Optimal Encoding",
    "rating": 3500,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "id": "347/B",
    "contestId": 347,
    "index": "B",
    "name": "Fixed Points",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "27/B",
    "contestId": 27,
    "index": "B",
    "name": "Tournament",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "id": "1527/E",
    "contestId": 1527,
    "index": "E",
    "name": "Partition Game",
    "rating": 2500,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "126/D",
    "contestId": 126,
    "index": "D",
    "name": "Fibonacci Sums",
    "rating": 2300,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1883/B",
    "contestId": 1883,
    "index": "B",
    "name": "Chemistry",
    "rating": 900,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "106/C",
    "contestId": 106,
    "index": "C",
    "name": "Buns",
    "rating": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "183/E",
    "contestId": 183,
    "index": "E",
    "name": "Candy Shop",
    "rating": 2900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1793/A",
    "contestId": 1793,
    "index": "A",
    "name": "Yet Another Promotion",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1194/B",
    "contestId": 1194,
    "index": "B",
    "name": "Yet Another Crosses Problem",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1204/E",
    "contestId": 1204,
    "index": "E",
    "name": "Natasha, Sasha and the Prefix Sums",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1950/D",
    "contestId": 1950,
    "index": "D",
    "name": "Product of Binary Decimals",
    "rating": 1100,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "1983/A",
    "contestId": 1983,
    "index": "A",
    "name": "Array Divisibility",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1968/C",
    "contestId": 1968,
    "index": "C",
    "name": "Assembly via Remainders",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "id": "1007/B",
    "contestId": 1007,
    "index": "B",
    "name": "Pave the Parallelepiped",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "431/D",
    "contestId": 431,
    "index": "D",
    "name": "Random Task",
    "rating": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "939/F",
    "contestId": 939,
    "index": "F",
    "name": "Cutlet",
    "rating": 2400,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1715/E",
    "contestId": 1715,
    "index": "E",
    "name": "Long Way Home",
    "rating": 2400,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp",
      "geometry",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "1713/E",
    "contestId": 1713,
    "index": "E",
    "name": "Cross Swapping",
    "rating": 2400,
    "tags": [
      "2-sat",
      "data structures",
      "dsu",
      "greedy",
      "matrices"
    ]
  },
  {
    "id": "1319/B",
    "contestId": 1319,
    "index": "B",
    "name": "Journey Planning",
    "rating": 1400,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1325/D",
    "contestId": 1325,
    "index": "D",
    "name": "Ehab the Xorcist",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "358/B",
    "contestId": 358,
    "index": "B",
    "name": "Dima and Text Messages",
    "rating": 1500,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "id": "696/D",
    "contestId": 696,
    "index": "D",
    "name": "Legen...",
    "rating": 2500,
    "tags": [
      "data structures",
      "dp",
      "matrices",
      "strings"
    ]
  },
  {
    "id": "1251/E1",
    "contestId": 1251,
    "index": "E1",
    "name": "Voting (Easy Version)",
    "rating": 2300,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1789/D",
    "contestId": 1789,
    "index": "D",
    "name": "Serval and Shift-Shift-Shift",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "813/F",
    "contestId": 813,
    "index": "F",
    "name": "Bipartite Checking",
    "rating": 2500,
    "tags": [
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "82/A",
    "contestId": 82,
    "index": "A",
    "name": "Double Cola",
    "rating": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1551/C",
    "contestId": 1551,
    "index": "C",
    "name": "Interesting Story",
    "rating": 1500,
    "tags": [
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1291/A",
    "contestId": 1291,
    "index": "A",
    "name": "Even But Not Even",
    "rating": 900,
    "tags": [
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "1718/B",
    "contestId": 1718,
    "index": "B",
    "name": "Fibonacci Strings",
    "rating": 2000,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1497/B",
    "contestId": 1497,
    "index": "B",
    "name": "M-arrays",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "87/C",
    "contestId": 87,
    "index": "C",
    "name": "Interesting Game",
    "rating": 2000,
    "tags": [
      "dp",
      "games",
      "math"
    ]
  },
  {
    "id": "149/D",
    "contestId": 149,
    "index": "D",
    "name": "Coloring Brackets",
    "rating": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "774/A",
    "contestId": 774,
    "index": "A",
    "name": "Amusement Park",
    "rating": 2100,
    "tags": [
      "*special",
      "ternary search"
    ]
  },
  {
    "id": "1807/F",
    "contestId": 1807,
    "index": "F",
    "name": "Bouncy Ball",
    "rating": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "id": "1031/D",
    "contestId": 1031,
    "index": "D",
    "name": "Minimum path",
    "rating": 1900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1082/D",
    "contestId": 1082,
    "index": "D",
    "name": "Maximum Diameter Graph",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1362/B",
    "contestId": 1362,
    "index": "B",
    "name": "Johnny and His Hobbies",
    "rating": 1200,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "id": "1480/A",
    "contestId": 1480,
    "index": "A",
    "name": "Yet Another String Game",
    "rating": 800,
    "tags": [
      "games",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "581/A",
    "contestId": 581,
    "index": "A",
    "name": "Vasya the Hipster",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "612/D",
    "contestId": 612,
    "index": "D",
    "name": "The Union of k-Segments",
    "rating": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1358/C",
    "contestId": 1358,
    "index": "C",
    "name": "Celex Update",
    "rating": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1131/G",
    "contestId": 1131,
    "index": "G",
    "name": "Most Dangerous Shark",
    "rating": 2700,
    "tags": [
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "245/G",
    "contestId": 245,
    "index": "G",
    "name": "Suggested Friends",
    "rating": 2200,
    "tags": [
      "brute force",
      "graphs"
    ]
  },
  {
    "id": "802/C",
    "contestId": 802,
    "index": "C",
    "name": "Heidi and Library (hard)",
    "rating": 2600,
    "tags": [
      "flows"
    ]
  },
  {
    "id": "305/B",
    "contestId": 305,
    "index": "B",
    "name": "Continued Fractions",
    "rating": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "979/E",
    "contestId": 979,
    "index": "E",
    "name": "Kuro and Topological Parity",
    "rating": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1423/I",
    "contestId": 1423,
    "index": "I",
    "name": "Lookup Tables",
    "rating": 3000,
    "tags": [
      "bitmasks"
    ]
  },
  {
    "id": "91/B",
    "contestId": 91,
    "index": "B",
    "name": "Queue",
    "rating": 1500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1471/A",
    "contestId": 1471,
    "index": "A",
    "name": "Strange Partition",
    "rating": 900,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "231/E",
    "contestId": 231,
    "index": "E",
    "name": "Cactus",
    "rating": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "415/A",
    "contestId": 415,
    "index": "A",
    "name": "Mashmokh and Lights",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1625/D",
    "contestId": 1625,
    "index": "D",
    "name": "Binary Spiders",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "data structures",
      "implementation",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "412/A",
    "contestId": 412,
    "index": "A",
    "name": "Poster",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "802/K",
    "contestId": 802,
    "index": "K",
    "name": "Send the Fool Further! (medium)",
    "rating": 2100,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "525/D",
    "contestId": 525,
    "index": "D",
    "name": "Arthur and Walls",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "1805/F2",
    "contestId": 1805,
    "index": "F2",
    "name": "Survival of the Weakest (hard version)",
    "rating": 3100,
    "tags": [
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "962/C",
    "contestId": 962,
    "index": "C",
    "name": "Make a Square",
    "rating": 1400,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1555/F",
    "contestId": 1555,
    "index": "F",
    "name": "Good Graph",
    "rating": 2700,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "425/A",
    "contestId": 425,
    "index": "A",
    "name": "Sereja and Swaps",
    "rating": 1500,
    "tags": [
      "brute force",
      "sortings"
    ]
  },
  {
    "id": "401/E",
    "contestId": 401,
    "index": "E",
    "name": "Olympic Games",
    "rating": 2500,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1593/A",
    "contestId": 1593,
    "index": "A",
    "name": "Elections",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1868/C",
    "contestId": 1868,
    "index": "C",
    "name": "Travel Plan",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "id": "1290/B",
    "contestId": 1290,
    "index": "B",
    "name": "Irreducible Anagrams",
    "rating": 1800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1000/A",
    "contestId": 1000,
    "index": "A",
    "name": "Codehorses T-shirts",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1257/F",
    "contestId": 1257,
    "index": "F",
    "name": "Make Them Similar",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "hashing",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1462/C",
    "contestId": 1462,
    "index": "C",
    "name": "Unique Number",
    "rating": 900,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "888/B",
    "contestId": 888,
    "index": "B",
    "name": "Buggy Robot",
    "rating": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "402/A",
    "contestId": 402,
    "index": "A",
    "name": "Nuts",
    "rating": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "518/F",
    "contestId": 518,
    "index": "F",
    "name": "Pasha and Pipe",
    "rating": 2300,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1536/D",
    "contestId": 1536,
    "index": "D",
    "name": "Omkar and Medians",
    "rating": 2000,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1159/B",
    "contestId": 1159,
    "index": "B",
    "name": "Expansion coefficient of the array",
    "rating": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1957/E",
    "contestId": 1957,
    "index": "E",
    "name": "Carousel of Combinations",
    "rating": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "725/F",
    "contestId": 725,
    "index": "F",
    "name": "Family Photos",
    "rating": 2900,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "id": "484/B",
    "contestId": 484,
    "index": "B",
    "name": "Maximum Value",
    "rating": 2100,
    "tags": [
      "binary search",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "908/F",
    "contestId": 908,
    "index": "F",
    "name": "New Year and Rainbow Roads",
    "rating": 2400,
    "tags": [
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "598/B",
    "contestId": 598,
    "index": "B",
    "name": "Queries on a String",
    "rating": 1300,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "293/A",
    "contestId": 293,
    "index": "A",
    "name": "Weird Game",
    "rating": 1500,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "id": "1642/B",
    "contestId": 1642,
    "index": "B",
    "name": "Power Walking",
    "rating": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1112/B",
    "contestId": 1112,
    "index": "B",
    "name": "System Testing",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1458/E",
    "contestId": 1458,
    "index": "E",
    "name": "Nim Shortcuts",
    "rating": 3100,
    "tags": [
      "data structures",
      "games"
    ]
  },
  {
    "id": "1679/E",
    "contestId": 1679,
    "index": "E",
    "name": "Typical Party in Dorm",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "strings"
    ]
  },
  {
    "id": "1288/D",
    "contestId": 1288,
    "index": "D",
    "name": "Minimax Problem",
    "rating": 2000,
    "tags": [
      "binary search",
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "431/C",
    "contestId": 431,
    "index": "C",
    "name": "k-Tree",
    "rating": 1600,
    "tags": [
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "239/A",
    "contestId": 239,
    "index": "A",
    "name": "Two Bags of Potatoes",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "646/B",
    "contestId": 646,
    "index": "B",
    "name": "Ошибка передачи сообщения",
    "rating": 1400,
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "id": "1941/C",
    "contestId": 1941,
    "index": "C",
    "name": "Rudolf and the Ugly String",
    "rating": 900,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1970/A3",
    "contestId": 1970,
    "index": "A3",
    "name": "Balanced Unshuffle (Hard)",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "id": "429/B",
    "contestId": 429,
    "index": "B",
    "name": "Working out",
    "rating": 1600,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1827/D",
    "contestId": 1827,
    "index": "D",
    "name": "Two Centroids",
    "rating": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "741/B",
    "contestId": 741,
    "index": "B",
    "name": "Arpa's weak amphitheater and Mehrdad's valuable Hoses",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu"
    ]
  },
  {
    "id": "1073/G",
    "contestId": 1073,
    "index": "G",
    "name": "Yet Another LCP Problem",
    "rating": 2600,
    "tags": [
      "data structures",
      "string suffix structures"
    ]
  },
  {
    "id": "1906/B",
    "contestId": 1906,
    "index": "B",
    "name": "Button Pressing",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "hashing"
    ]
  },
  {
    "id": "847/L",
    "contestId": 847,
    "index": "L",
    "name": "Berland SU Computer Network",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "hashing",
      "trees"
    ]
  },
  {
    "id": "388/D",
    "contestId": 388,
    "index": "D",
    "name": "Fox and Perfect Sets",
    "rating": 2700,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1085/G",
    "contestId": 1085,
    "index": "G",
    "name": "Beautiful Matrix",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1341/B",
    "contestId": 1341,
    "index": "B",
    "name": "Nastya and Door",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "952/A",
    "contestId": 952,
    "index": "A",
    "name": "Quirky Quantifiers",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1286/E",
    "contestId": 1286,
    "index": "E",
    "name": "Fedya the Potter Strikes Back",
    "rating": 3200,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "id": "1598/F",
    "contestId": 1598,
    "index": "F",
    "name": "RBS",
    "rating": 2400,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1918/A",
    "contestId": 1918,
    "index": "A",
    "name": "Brick Wall",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "660/D",
    "contestId": 660,
    "index": "D",
    "name": "Number of Parallelograms",
    "rating": 1900,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "940/F",
    "contestId": 940,
    "index": "F",
    "name": "Machine Learning",
    "rating": 2600,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "id": "1793/C",
    "contestId": 1793,
    "index": "C",
    "name": "Dora and Search",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "1146/G",
    "contestId": 1146,
    "index": "G",
    "name": "Zoning Restrictions",
    "rating": 2700,
    "tags": [
      "dp",
      "flows",
      "graphs"
    ]
  },
  {
    "id": "81/C",
    "contestId": 81,
    "index": "C",
    "name": "Average Score",
    "rating": 1700,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "723/B",
    "contestId": 723,
    "index": "B",
    "name": "Text Document Analysis",
    "rating": 1100,
    "tags": [
      "expression parsing",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "138/E",
    "contestId": 138,
    "index": "E",
    "name": "Hellish Constraints",
    "rating": 2900,
    "tags": [
      "brute force",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "543/D",
    "contestId": 543,
    "index": "D",
    "name": "Road Improvement",
    "rating": 2300,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "1846/C",
    "contestId": 1846,
    "index": "C",
    "name": "Rudolf and the Another Competition",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1500/B",
    "contestId": 1500,
    "index": "B",
    "name": "Two chandeliers",
    "rating": 2200,
    "tags": [
      "binary search",
      "brute force",
      "chinese remainder theorem",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1444/B",
    "contestId": 1444,
    "index": "B",
    "name": "Divide and Sum",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1143/C",
    "contestId": 1143,
    "index": "C",
    "name": "Queen",
    "rating": 1400,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1738/G",
    "contestId": 1738,
    "index": "G",
    "name": "Anti-Increasing Addicts",
    "rating": 2900,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1329/B",
    "contestId": 1329,
    "index": "B",
    "name": "Dreamoon Likes Sequences",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "290/E",
    "contestId": 290,
    "index": "E",
    "name": "HQ",
    "rating": 2500,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "id": "1107/G",
    "contestId": 1107,
    "index": "G",
    "name": "Vasya and Maximum Profit",
    "rating": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "dp",
      "dsu"
    ]
  },
  {
    "id": "1970/F3",
    "contestId": 1970,
    "index": "F3",
    "name": "Playing Quidditch (Hard)",
    "rating": 2300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1418/A",
    "contestId": 1418,
    "index": "A",
    "name": "Buying Torches",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1766/A",
    "contestId": 1766,
    "index": "A",
    "name": "Extremely Round",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1900/A",
    "contestId": 1900,
    "index": "A",
    "name": "Cover in Water",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1248/B",
    "contestId": 1248,
    "index": "B",
    "name": "Grow The Tree",
    "rating": 900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1695/A",
    "contestId": 1695,
    "index": "A",
    "name": "Subrectangle Guess",
    "rating": 800,
    "tags": [
      "games"
    ]
  },
  {
    "id": "141/A",
    "contestId": 141,
    "index": "A",
    "name": "Amusing Joke",
    "rating": 800,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "12/C",
    "contestId": 12,
    "index": "C",
    "name": "Fruits",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "35/A",
    "contestId": 35,
    "index": "A",
    "name": "Shell Game",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1431/J",
    "contestId": 1431,
    "index": "J",
    "name": "Zero-XOR Array",
    "rating": 3400,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "id": "1212/C",
    "contestId": 1212,
    "index": "C",
    "name": "Less or Equal",
    "rating": 1200,
    "tags": [
      "*special",
      "sortings"
    ]
  },
  {
    "id": "407/E",
    "contestId": 407,
    "index": "E",
    "name": "k-d-sequence",
    "rating": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "9/E",
    "contestId": 9,
    "index": "E",
    "name": "Interesting Graph and Apples",
    "rating": 2300,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "868/B",
    "contestId": 868,
    "index": "B",
    "name": "Race Against Time",
    "rating": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1521/B",
    "contestId": 1521,
    "index": "B",
    "name": "Nastia and a Good Array",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "620/A",
    "contestId": 620,
    "index": "A",
    "name": "Professor GukiZ's Robot",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1296/E1",
    "contestId": 1296,
    "index": "E1",
    "name": "String Coloring (easy version)",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "828/B",
    "contestId": 828,
    "index": "B",
    "name": "Black Square",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "216/E",
    "contestId": 216,
    "index": "E",
    "name": "Martian Luck",
    "rating": 2000,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1829/G",
    "contestId": 1829,
    "index": "G",
    "name": "Hits Different",
    "rating": 1600,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1417/A",
    "contestId": 1417,
    "index": "A",
    "name": "Copy-paste",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "887/C",
    "contestId": 887,
    "index": "C",
    "name": "Solution for Cube",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1795/E",
    "contestId": 1795,
    "index": "E",
    "name": "Explosions?",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1530/D",
    "contestId": 1530,
    "index": "D",
    "name": "Secret Santa",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1945/H",
    "contestId": 1945,
    "index": "H",
    "name": "GCD is Greater",
    "rating": 2600,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "id": "908/A",
    "contestId": 908,
    "index": "A",
    "name": "New Year and Counting Cards",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "940/A",
    "contestId": 940,
    "index": "A",
    "name": "Points on the line",
    "rating": 1200,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1108/D",
    "contestId": 1108,
    "index": "D",
    "name": "Diverse Garland",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1183/E",
    "contestId": 1183,
    "index": "E",
    "name": "Subsequences (easy version)",
    "rating": 2000,
    "tags": [
      "dp",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "1183/B",
    "contestId": 1183,
    "index": "B",
    "name": "Equalize Prices",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1637/H",
    "contestId": 1637,
    "index": "H",
    "name": "Minimize Inversions Number",
    "rating": 3500,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1068/B",
    "contestId": 1068,
    "index": "B",
    "name": "LCM",
    "rating": 1200,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1722/A",
    "contestId": 1722,
    "index": "A",
    "name": "Spell Check",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "496/E",
    "contestId": 496,
    "index": "E",
    "name": "Distributing Parts",
    "rating": 2100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1624/G",
    "contestId": 1624,
    "index": "G",
    "name": "MinOr Tree",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1955/E",
    "contestId": 1955,
    "index": "E",
    "name": "Long Inversions",
    "rating": 1700,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "306/B",
    "contestId": 306,
    "index": "B",
    "name": "Optimizer",
    "rating": 2100,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1045/J",
    "contestId": 1045,
    "index": "J",
    "name": "Moonwalk challenge",
    "rating": 2600,
    "tags": [
      "data structures",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1796/B",
    "contestId": 1796,
    "index": "B",
    "name": "Asterisk-Minor Template",
    "rating": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1140/G",
    "contestId": 1140,
    "index": "G",
    "name": "Double Tree",
    "rating": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "306/D",
    "contestId": 306,
    "index": "D",
    "name": "Polygon",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "id": "1987/A",
    "contestId": 1987,
    "index": "A",
    "name": "Upload More RAM",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "605/A",
    "contestId": 605,
    "index": "A",
    "name": "Sorting Railway Cars",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "343/C",
    "contestId": 343,
    "index": "C",
    "name": "Read Time",
    "rating": 1900,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1679/A",
    "contestId": 1679,
    "index": "A",
    "name": "AvtoBus",
    "rating": 900,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "949/A",
    "contestId": 949,
    "index": "A",
    "name": "Zebras",
    "rating": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1705/B",
    "contestId": 1705,
    "index": "B",
    "name": "Mark the Dust Sweeper",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1295/F",
    "contestId": 1295,
    "index": "F",
    "name": "Good Contest",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "524/E",
    "contestId": 524,
    "index": "E",
    "name": "Rooks and Rectangles",
    "rating": 2400,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1520/B",
    "contestId": 1520,
    "index": "B",
    "name": "Ordinary Numbers",
    "rating": 800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1701/A",
    "contestId": 1701,
    "index": "A",
    "name": "Grass Field",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "823/B",
    "contestId": 823,
    "index": "B",
    "name": "DNA Evolution",
    "rating": 2100,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "id": "577/A",
    "contestId": 577,
    "index": "A",
    "name": "Multiplication Table",
    "rating": 1000,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "816/A",
    "contestId": 816,
    "index": "A",
    "name": "Karen and Morning",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "567/A",
    "contestId": 567,
    "index": "A",
    "name": "Lineland Mail",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1790/A",
    "contestId": 1790,
    "index": "A",
    "name": "Polycarp and the Day of Pi",
    "rating": 800,
    "tags": [
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "id": "598/C",
    "contestId": 598,
    "index": "C",
    "name": "Nearest vectors",
    "rating": 2300,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "1659/B",
    "contestId": 1659,
    "index": "B",
    "name": "Bit Flipping",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "217/D",
    "contestId": 217,
    "index": "D",
    "name": "Bitonix' Patrol",
    "rating": 2900,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dfs and similar",
      "math"
    ]
  },
  {
    "id": "1905/E",
    "contestId": 1905,
    "index": "E",
    "name": "One-X",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "724/E",
    "contestId": 724,
    "index": "E",
    "name": "Goods transportation",
    "rating": 2900,
    "tags": [
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "id": "1901/A",
    "contestId": 1901,
    "index": "A",
    "name": "Line Trip",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1542/A",
    "contestId": 1542,
    "index": "A",
    "name": "Odd Set",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "618/F",
    "contestId": 618,
    "index": "F",
    "name": "Double Knapsack",
    "rating": 3000,
    "tags": [
      "constructive algorithms",
      "two pointers"
    ]
  },
  {
    "id": "1450/H2",
    "contestId": 1450,
    "index": "H2",
    "name": "Multithreading (Hard Version)",
    "rating": 3300,
    "tags": [
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1198/E",
    "contestId": 1198,
    "index": "E",
    "name": "Rectangle Painting 2",
    "rating": 2500,
    "tags": [
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "id": "1628/D2",
    "contestId": 1628,
    "index": "D2",
    "name": "Game on Sum (Hard Version)",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "games",
      "math"
    ]
  },
  {
    "id": "1551/F",
    "contestId": 1551,
    "index": "F",
    "name": "Equidistant Vertices",
    "rating": 2200,
    "tags": [
      "brute force",
      "combinatorics",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1264/D1",
    "contestId": 1264,
    "index": "D1",
    "name": "Beautiful Bracket Sequence (easy version)",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "1608/B",
    "contestId": 1608,
    "index": "B",
    "name": "Build the Permutation",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "44/C",
    "contestId": 44,
    "index": "C",
    "name": "Holidays",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "236/A",
    "contestId": 236,
    "index": "A",
    "name": "Boy or Girl",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1794/C",
    "contestId": 1794,
    "index": "C",
    "name": "Scoring Subsequences",
    "rating": 1300,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "630/P",
    "contestId": 630,
    "index": "P",
    "name": "Area of a Star",
    "rating": 2100,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1382/A",
    "contestId": 1382,
    "index": "A",
    "name": "Common Subsequence",
    "rating": 800,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1608/A",
    "contestId": 1608,
    "index": "A",
    "name": "Find Array",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "295/E",
    "contestId": 295,
    "index": "E",
    "name": "Yaroslav and Points",
    "rating": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1559/B",
    "contestId": 1559,
    "index": "B",
    "name": "Mocha and Red and Blue",
    "rating": 900,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1415/E",
    "contestId": 1415,
    "index": "E",
    "name": "New Game Plus!",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1783/E",
    "contestId": 1783,
    "index": "E",
    "name": "Game of the Year",
    "rating": 2300,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1842/I",
    "contestId": 1842,
    "index": "I",
    "name": "Tenzing and Necklace",
    "rating": 3500,
    "tags": [
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "245/C",
    "contestId": 245,
    "index": "C",
    "name": "Game with Coins",
    "rating": 1700,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1791/A",
    "contestId": 1791,
    "index": "A",
    "name": "Codeforces Checking",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "257/C",
    "contestId": 257,
    "index": "C",
    "name": "View Angle",
    "rating": 1800,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "id": "1426/D",
    "contestId": 1426,
    "index": "D",
    "name": "Non-zero Segments",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1082/F",
    "contestId": 1082,
    "index": "F",
    "name": "Speed Dial",
    "rating": 2800,
    "tags": [
      "dp",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1015/A",
    "contestId": 1015,
    "index": "A",
    "name": "Points in Segments",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "678/F",
    "contestId": 678,
    "index": "F",
    "name": "Lena and Queries",
    "rating": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "geometry"
    ]
  },
  {
    "id": "1824/A",
    "contestId": 1824,
    "index": "A",
    "name": "LuoTianyi and the Show",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "144/E",
    "contestId": 144,
    "index": "E",
    "name": "Competition",
    "rating": 2200,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "154/A",
    "contestId": 154,
    "index": "A",
    "name": "Hometask",
    "rating": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "649/E",
    "contestId": 649,
    "index": "E",
    "name": "Автобус",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "792/F",
    "contestId": 792,
    "index": "F",
    "name": "Mages and Monsters",
    "rating": 3100,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "id": "371/B",
    "contestId": 371,
    "index": "B",
    "name": "Fox Dividing Cheese",
    "rating": 1300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1283/B",
    "contestId": 1283,
    "index": "B",
    "name": "Candies Division",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1392/F",
    "contestId": 1392,
    "index": "F",
    "name": "Omkar and Landslide",
    "rating": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "924/B",
    "contestId": 924,
    "index": "B",
    "name": "Three-level Laser",
    "rating": 1600,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1420/C1",
    "contestId": 1420,
    "index": "C1",
    "name": "Pokémon Army (easy version)",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "254/B",
    "contestId": 254,
    "index": "B",
    "name": "Jury Size",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "618/C",
    "contestId": 618,
    "index": "C",
    "name": "Constellation",
    "rating": 1600,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "370/B",
    "contestId": 370,
    "index": "B",
    "name": "Berland Bingo",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1913/B",
    "contestId": 1913,
    "index": "B",
    "name": "Swap and Delete",
    "rating": 1000,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "1982/C",
    "contestId": 1982,
    "index": "C",
    "name": "Boring Day",
    "rating": 1200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "864/C",
    "contestId": 864,
    "index": "C",
    "name": "Bus",
    "rating": 1500,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1614/D2",
    "contestId": 1614,
    "index": "D2",
    "name": "Divan and Kostomuksha (hard version)",
    "rating": 2300,
    "tags": [
      "dp",
      "number theory"
    ]
  },
  {
    "id": "1020/A",
    "contestId": 1020,
    "index": "A",
    "name": "New Building for SIS",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1183/G",
    "contestId": 1183,
    "index": "G",
    "name": "Candy Box (hard version)",
    "rating": 2000,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1674/B",
    "contestId": 1674,
    "index": "B",
    "name": "Dictionary",
    "rating": 800,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "512/E",
    "contestId": 512,
    "index": "E",
    "name": "Fox And Polygon",
    "rating": 2900,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "id": "1641/C",
    "contestId": 1641,
    "index": "C",
    "name": "Anonymity Is Important",
    "rating": 2200,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "385/E",
    "contestId": 385,
    "index": "E",
    "name": "Bear in the Field",
    "rating": 2300,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "id": "1503/F",
    "contestId": 1503,
    "index": "F",
    "name": "Balance the Cards",
    "rating": 3500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "geometry",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1758/A",
    "contestId": 1758,
    "index": "A",
    "name": "SSeeeeiinngg DDoouubbllee",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "846/D",
    "contestId": 846,
    "index": "D",
    "name": "Monitor",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1485/F",
    "contestId": 1485,
    "index": "F",
    "name": "Copy or Prefix Sum",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "id": "260/B",
    "contestId": 260,
    "index": "B",
    "name": "Ancient Prophesy",
    "rating": 1600,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1909/A",
    "contestId": 1909,
    "index": "A",
    "name": "Distinct Buttons",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1739/A",
    "contestId": 1739,
    "index": "A",
    "name": "Immobile Knight",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1091/F",
    "contestId": 1091,
    "index": "F",
    "name": "New Year and the Mallard Expedition",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1475/A",
    "contestId": 1475,
    "index": "A",
    "name": "Odd Divisor",
    "rating": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "493/E",
    "contestId": 493,
    "index": "E",
    "name": "Vasya and Polynomial",
    "rating": 2800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1744/C",
    "contestId": 1744,
    "index": "C",
    "name": "Traffic Light",
    "rating": 1000,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1327/D",
    "contestId": 1327,
    "index": "D",
    "name": "Infinite Path",
    "rating": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1509/C",
    "contestId": 1509,
    "index": "C",
    "name": "The Sports Festival",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "248/A",
    "contestId": 248,
    "index": "A",
    "name": "Cupboards",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1621/G",
    "contestId": 1621,
    "index": "G",
    "name": "Weighted Increasing Subsequences",
    "rating": 3200,
    "tags": [
      "data structures",
      "dp",
      "math"
    ]
  },
  {
    "id": "1728/B",
    "contestId": 1728,
    "index": "B",
    "name": "Best Permutation",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1385/A",
    "contestId": 1385,
    "index": "A",
    "name": "Three Pairwise Maximums",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "356/A",
    "contestId": 356,
    "index": "A",
    "name": "Knight Tournament",
    "rating": 1500,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "id": "47/E",
    "contestId": 47,
    "index": "E",
    "name": "Cannon",
    "rating": 2200,
    "tags": [
      "data structures",
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "1845/B",
    "contestId": 1845,
    "index": "B",
    "name": "Come Together",
    "rating": 900,
    "tags": [
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1923/C",
    "contestId": 1923,
    "index": "C",
    "name": "Find B",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "557/A",
    "contestId": 557,
    "index": "A",
    "name": "Ilya and Diplomas",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1978/A",
    "contestId": 1978,
    "index": "A",
    "name": "Alice and Books",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1227/D2",
    "contestId": 1227,
    "index": "D2",
    "name": "Optimal Subsequences (Hard Version)",
    "rating": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "243/C",
    "contestId": 243,
    "index": "C",
    "name": "Colorado Potato Beetle",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "id": "296/B",
    "contestId": 296,
    "index": "B",
    "name": "Yaroslav and Two Strings",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1725/E",
    "contestId": 1725,
    "index": "E",
    "name": "Electrical Efficiency",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "363/C",
    "contestId": 363,
    "index": "C",
    "name": "Fixing Typos",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "49/C",
    "contestId": 49,
    "index": "C",
    "name": "Disposition",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "351/C",
    "contestId": 351,
    "index": "C",
    "name": "Jeff and Brackets",
    "rating": 2500,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "452/B",
    "contestId": 452,
    "index": "B",
    "name": "4-point polyline",
    "rating": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry",
      "trees"
    ]
  },
  {
    "id": "1981/C",
    "contestId": 1981,
    "index": "C",
    "name": "Turtle and an Incomplete Sequence",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "258/D",
    "contestId": 258,
    "index": "D",
    "name": "Little Elephant and Broken Sorting",
    "rating": 2600,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "483/B",
    "contestId": 483,
    "index": "B",
    "name": "Friends and Presents",
    "rating": 1800,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "489/D",
    "contestId": 489,
    "index": "D",
    "name": "Unbearable Controversy of Being",
    "rating": 1700,
    "tags": [
      "brute force",
      "combinatorics",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "849/B",
    "contestId": 849,
    "index": "B",
    "name": "Tell Your World",
    "rating": 1600,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "id": "63/A",
    "contestId": 63,
    "index": "A",
    "name": "Sinking Ship",
    "rating": 900,
    "tags": [
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1881/A",
    "contestId": 1881,
    "index": "A",
    "name": "Don't Try to Count",
    "rating": 800,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "id": "573/D",
    "contestId": 573,
    "index": "D",
    "name": "Bear and Cavalry",
    "rating": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "1788/C",
    "contestId": 1788,
    "index": "C",
    "name": "Matching Numbers",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "630/R",
    "contestId": 630,
    "index": "R",
    "name": "Game",
    "rating": 1200,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "1677/E",
    "contestId": 1677,
    "index": "E",
    "name": "Tokitsukaze and Beautiful Subsegments",
    "rating": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "875/C",
    "contestId": 875,
    "index": "C",
    "name": "National Property",
    "rating": 2100,
    "tags": [
      "2-sat",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1361/B",
    "contestId": 1361,
    "index": "B",
    "name": "Johnny and Grandmaster",
    "rating": 1900,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1676/F",
    "contestId": 1676,
    "index": "F",
    "name": "Longest Strike",
    "rating": 1300,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1017/F",
    "contestId": 1017,
    "index": "F",
    "name": "The Neutral Zone",
    "rating": 2500,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1619/D",
    "contestId": 1619,
    "index": "D",
    "name": "New Year's Problem",
    "rating": 1800,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "682/C",
    "contestId": 682,
    "index": "C",
    "name": "Alyona and the Tree",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "817/E",
    "contestId": 817,
    "index": "E",
    "name": "Choosing The Commander",
    "rating": 2000,
    "tags": [
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "id": "216/C",
    "contestId": 216,
    "index": "C",
    "name": "Hiring Staff",
    "rating": 1800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "980/D",
    "contestId": 980,
    "index": "D",
    "name": "Perfect Groups",
    "rating": 2100,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "858/C",
    "contestId": 858,
    "index": "C",
    "name": "Did you mean...",
    "rating": 1500,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1323/A",
    "contestId": 1323,
    "index": "A",
    "name": "Even Subset Sum Problem",
    "rating": 800,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "727/D",
    "contestId": 727,
    "index": "D",
    "name": "T-shirts Distribution",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "flows",
      "greedy"
    ]
  },
  {
    "id": "937/E",
    "contestId": 937,
    "index": "E",
    "name": "Lock Puzzle",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "867/A",
    "contestId": 867,
    "index": "A",
    "name": "Between the Offices",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1118/D1",
    "contestId": 1118,
    "index": "D1",
    "name": "Coffee and Coursework (Easy version)",
    "rating": 1700,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "116/A",
    "contestId": 116,
    "index": "A",
    "name": "Tram",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "985/D",
    "contestId": 985,
    "index": "D",
    "name": "Sand Fortress",
    "rating": 2100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1917/C",
    "contestId": 1917,
    "index": "C",
    "name": "Watering an Array",
    "rating": 1600,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1557/B",
    "contestId": 1557,
    "index": "B",
    "name": "Moamen and k-subarrays",
    "rating": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1328/A",
    "contestId": 1328,
    "index": "A",
    "name": "Divisibility Problem",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "406/E",
    "contestId": 406,
    "index": "E",
    "name": "Hamming Triples",
    "rating": 2800,
    "tags": [
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1266/F",
    "contestId": 1266,
    "index": "F",
    "name": "Almost Same Distance",
    "rating": 2900,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "825/F",
    "contestId": 825,
    "index": "F",
    "name": "String Compression",
    "rating": 2400,
    "tags": [
      "dp",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "937/D",
    "contestId": 937,
    "index": "D",
    "name": "Sleepy Game",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "games",
      "graphs"
    ]
  },
  {
    "id": "1788/A",
    "contestId": 1788,
    "index": "A",
    "name": "One and Two",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1943/D1",
    "contestId": 1943,
    "index": "D1",
    "name": "Counting Is Fun (Easy Version)",
    "rating": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1140/A",
    "contestId": 1140,
    "index": "A",
    "name": "Detective Book",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "476/E",
    "contestId": 476,
    "index": "E",
    "name": "Dreamoon and Strings",
    "rating": 2200,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "333/E",
    "contestId": 333,
    "index": "E",
    "name": "Summer Earnings",
    "rating": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "1935/C",
    "contestId": 1935,
    "index": "C",
    "name": "Messenger in MAC",
    "rating": 1800,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1336/C",
    "contestId": 1336,
    "index": "C",
    "name": "Kaavi and Magic Spell",
    "rating": 2200,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "238/A",
    "contestId": 238,
    "index": "A",
    "name": "Not Wool Sequences",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "285/B",
    "contestId": 285,
    "index": "B",
    "name": "Find Marble",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "160/B",
    "contestId": 160,
    "index": "B",
    "name": "Unlucky Ticket",
    "rating": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "261/D",
    "contestId": 261,
    "index": "D",
    "name": "Maxim and Increasing Subsequence",
    "rating": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1875/A",
    "contestId": 1875,
    "index": "A",
    "name": "Jellyfish and Undertale",
    "rating": 900,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1712/B",
    "contestId": 1712,
    "index": "B",
    "name": "Woeful Permutation",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "11/A",
    "contestId": 11,
    "index": "A",
    "name": "Increasing Sequence",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "62/A",
    "contestId": 62,
    "index": "A",
    "name": "A Student's Dream",
    "rating": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "149/C",
    "contestId": 149,
    "index": "C",
    "name": "Division into Teams",
    "rating": 1500,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1539/C",
    "contestId": 1539,
    "index": "C",
    "name": "Stable Groups",
    "rating": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1538/B",
    "contestId": 1538,
    "index": "B",
    "name": "Friends and Candies",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1621/E",
    "contestId": 1621,
    "index": "E",
    "name": "New School",
    "rating": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "201/D",
    "contestId": 201,
    "index": "D",
    "name": "Brand New Problem",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "id": "817/D",
    "contestId": 817,
    "index": "D",
    "name": "Imbalanced Array",
    "rating": 1900,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu",
      "sortings"
    ]
  },
  {
    "id": "1095/D",
    "contestId": 1095,
    "index": "D",
    "name": "Circular Dance",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1027/G",
    "contestId": 1027,
    "index": "G",
    "name": "X-mouse in the Campus",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1495/C",
    "contestId": 1495,
    "index": "C",
    "name": "Garden of the Sun",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "1027/C",
    "contestId": 1027,
    "index": "C",
    "name": "Minimum Value Rectangle",
    "rating": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1148/D",
    "contestId": 1148,
    "index": "D",
    "name": "Dirty Deeds Done Dirt Cheap",
    "rating": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1598/G",
    "contestId": 1598,
    "index": "G",
    "name": "The Sum of Good Numbers",
    "rating": 3200,
    "tags": [
      "hashing",
      "math",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1304/B",
    "contestId": 1304,
    "index": "B",
    "name": "Longest Palindrome",
    "rating": 1100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1977/D",
    "contestId": 1977,
    "index": "D",
    "name": "XORificator",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "hashing"
    ]
  },
  {
    "id": "1144/B",
    "contestId": 1144,
    "index": "B",
    "name": "Parity Alternated Deletions",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1658/D2",
    "contestId": 1658,
    "index": "D2",
    "name": "388535 (Hard Version)",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "data structures",
      "math"
    ]
  },
  {
    "id": "341/E",
    "contestId": 341,
    "index": "E",
    "name": "Candies Game",
    "rating": 3000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1395/A",
    "contestId": 1395,
    "index": "A",
    "name": "Boboniu Likes to Color Balls",
    "rating": 1000,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1360/E",
    "contestId": 1360,
    "index": "E",
    "name": "Polygon",
    "rating": 1300,
    "tags": [
      "dp",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "195/A",
    "contestId": 195,
    "index": "A",
    "name": "Let's Watch Football",
    "rating": 1000,
    "tags": [
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "id": "990/E",
    "contestId": 990,
    "index": "E",
    "name": "Post Lamps",
    "rating": 2100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1525/A",
    "contestId": 1525,
    "index": "A",
    "name": "Potion-making",
    "rating": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "492/E",
    "contestId": 492,
    "index": "E",
    "name": "Vanya and Field",
    "rating": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1648/B",
    "contestId": 1648,
    "index": "B",
    "name": "Integral Array",
    "rating": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "math"
    ]
  },
  {
    "id": "1621/I",
    "contestId": 1621,
    "index": "I",
    "name": "Two Sequences",
    "rating": 3500,
    "tags": [
      "data structures",
      "hashing",
      "string suffix structures"
    ]
  },
  {
    "id": "1490/A",
    "contestId": 1490,
    "index": "A",
    "name": "Dense Array",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "18/B",
    "contestId": 18,
    "index": "B",
    "name": "Platforms",
    "rating": 1700,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1704/A",
    "contestId": 1704,
    "index": "A",
    "name": "Two 0-1 Sequences",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1722/C",
    "contestId": 1722,
    "index": "C",
    "name": "Word Game",
    "rating": 800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "892/B",
    "contestId": 892,
    "index": "B",
    "name": "Wrath",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1893/A",
    "contestId": 1893,
    "index": "A",
    "name": "Anonymous Informant",
    "rating": 1400,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "71/B",
    "contestId": 71,
    "index": "B",
    "name": "Progress Bar",
    "rating": 1300,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "208/C",
    "contestId": 208,
    "index": "C",
    "name": "Police Station",
    "rating": 1900,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1899/A",
    "contestId": 1899,
    "index": "A",
    "name": "Game with Integers",
    "rating": 800,
    "tags": [
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1477/C",
    "contestId": 1477,
    "index": "C",
    "name": "Nezzar and Nice Beatmap",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "261/B",
    "contestId": 261,
    "index": "B",
    "name": "Maxim and Restaurant",
    "rating": 1900,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1728/F",
    "contestId": 1728,
    "index": "F",
    "name": "Fishermen",
    "rating": 3100,
    "tags": [
      "flows",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "id": "477/E",
    "contestId": 477,
    "index": "E",
    "name": "Dreamoon and Notepad",
    "rating": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "870/F",
    "contestId": 870,
    "index": "F",
    "name": "Paths",
    "rating": 2700,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "id": "1189/B",
    "contestId": 1189,
    "index": "B",
    "name": "Number Circle",
    "rating": 1100,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "439/C",
    "contestId": 439,
    "index": "C",
    "name": "Devu and Partitioning of the Array",
    "rating": 1700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "1942/B",
    "contestId": 1942,
    "index": "B",
    "name": "Bessie and MEX",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "955/A",
    "contestId": 955,
    "index": "A",
    "name": "Feed the cat",
    "rating": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1470/A",
    "contestId": 1470,
    "index": "A",
    "name": "Strange Birthday Party",
    "rating": 1300,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "382/D",
    "contestId": 382,
    "index": "D",
    "name": "Ksenia and Pawns",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "237/E",
    "contestId": 237,
    "index": "E",
    "name": "Build String",
    "rating": 2000,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "id": "1425/A",
    "contestId": 1425,
    "index": "A",
    "name": "Arena of Greed",
    "rating": 1400,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "id": "1218/F",
    "contestId": 1218,
    "index": "F",
    "name": "Workout plan",
    "rating": 1500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1091/D",
    "contestId": 1091,
    "index": "D",
    "name": "New Year and the Permutation Concatenation",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "329/D",
    "contestId": 329,
    "index": "D",
    "name": "The Evil Temple and the Moving Rocks",
    "rating": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "275/A",
    "contestId": 275,
    "index": "A",
    "name": "Lights Out",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1740/G",
    "contestId": 1740,
    "index": "G",
    "name": "Dangerous Laser Power",
    "rating": 3100,
    "tags": [
      "constructive algorithms",
      "dsu",
      "sortings"
    ]
  },
  {
    "id": "1225/C",
    "contestId": 1225,
    "index": "C",
    "name": "p-binary",
    "rating": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "math"
    ]
  },
  {
    "id": "172/C",
    "contestId": 172,
    "index": "C",
    "name": "Bus",
    "rating": 1500,
    "tags": [
      "*special",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "407/C",
    "contestId": 407,
    "index": "C",
    "name": "Curious Array",
    "rating": 2500,
    "tags": [
      "brute force",
      "combinatorics",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1772/E",
    "contestId": 1772,
    "index": "E",
    "name": "Permutation Game",
    "rating": 1700,
    "tags": [
      "games"
    ]
  },
  {
    "id": "1955/C",
    "contestId": 1955,
    "index": "C",
    "name": "Inhabitant of the Deep Sea",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1283/C",
    "contestId": 1283,
    "index": "C",
    "name": "Friends and Gifts",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "math"
    ]
  },
  {
    "id": "27/E",
    "contestId": 27,
    "index": "E",
    "name": "Number With The Given Amount Of Divisors",
    "rating": 2000,
    "tags": [
      "brute force",
      "dp",
      "number theory"
    ]
  },
  {
    "id": "754/D",
    "contestId": 754,
    "index": "D",
    "name": "Fedor and coupons",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1673/D",
    "contestId": 1673,
    "index": "D",
    "name": "Lost Arithmetic Progression",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "928/A",
    "contestId": 928,
    "index": "A",
    "name": "Login Verification",
    "rating": 1200,
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "id": "986/E",
    "contestId": 986,
    "index": "E",
    "name": "Prince's Problem",
    "rating": 2800,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "1906/F",
    "contestId": 1906,
    "index": "F",
    "name": "Maximize The Value",
    "rating": 2100,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "1992/A",
    "contestId": 1992,
    "index": "A",
    "name": "Only Pluses",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1439/D",
    "contestId": 1439,
    "index": "D",
    "name": "INOI Final Contests",
    "rating": 3100,
    "tags": [
      "combinatorics",
      "dp",
      "fft"
    ]
  },
  {
    "id": "1263/F",
    "contestId": 1263,
    "index": "F",
    "name": "Economic Difficulties",
    "rating": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "flows",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1781/D",
    "contestId": 1781,
    "index": "D",
    "name": "Many Perfect Squares",
    "rating": 1800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "186/A",
    "contestId": 186,
    "index": "A",
    "name": "Comparing Strings",
    "rating": 1100,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1700/B",
    "contestId": 1700,
    "index": "B",
    "name": "Palindromic Numbers",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1704/H2",
    "contestId": 1704,
    "index": "H2",
    "name": "Game of AI (hard version)",
    "rating": 3500,
    "tags": [
      "combinatorics",
      "fft",
      "math"
    ]
  },
  {
    "id": "629/C",
    "contestId": 629,
    "index": "C",
    "name": "Famil Door and Brackets",
    "rating": 2000,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "1975/A",
    "contestId": 1975,
    "index": "A",
    "name": "Bazoka and Mocha's Array",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1065/C",
    "contestId": 1065,
    "index": "C",
    "name": "Make It Equal",
    "rating": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1870/B",
    "contestId": 1870,
    "index": "B",
    "name": "Friendly Arrays",
    "rating": 1200,
    "tags": [
      "bitmasks",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1621/F",
    "contestId": 1621,
    "index": "F",
    "name": "Strange Instructions",
    "rating": 2700,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1301/D",
    "contestId": 1301,
    "index": "D",
    "name": "Time to Run",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "832/E",
    "contestId": 832,
    "index": "E",
    "name": "Vasya and Shifts",
    "rating": 2600,
    "tags": [
      "matrices"
    ]
  },
  {
    "id": "1037/G",
    "contestId": 1037,
    "index": "G",
    "name": "A Game on Strings",
    "rating": 3200,
    "tags": [
      "games"
    ]
  },
  {
    "id": "727/E",
    "contestId": 727,
    "index": "E",
    "name": "Games on a CD",
    "rating": 2300,
    "tags": [
      "data structures",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1674/E",
    "contestId": 1674,
    "index": "E",
    "name": "Breaking the Wall",
    "rating": 2000,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "494/D",
    "contestId": 494,
    "index": "D",
    "name": "Birthday",
    "rating": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1677/A",
    "contestId": 1677,
    "index": "A",
    "name": "Tokitsukaze and Strange Inequality",
    "rating": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "128/D",
    "contestId": 128,
    "index": "D",
    "name": "Numbers",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "147/A",
    "contestId": 147,
    "index": "A",
    "name": "Punctuation",
    "rating": 1300,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1517/C",
    "contestId": 1517,
    "index": "C",
    "name": "Fillomino 2",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1746/F",
    "contestId": 1746,
    "index": "F",
    "name": "Kazaee",
    "rating": 2800,
    "tags": [
      "data structures",
      "hashing",
      "probabilities"
    ]
  },
  {
    "id": "1360/H",
    "contestId": 1360,
    "index": "H",
    "name": "Binary Median",
    "rating": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "1385/B",
    "contestId": 1385,
    "index": "B",
    "name": "Restore the Permutation by Merger",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1759/E",
    "contestId": 1759,
    "index": "E",
    "name": "The Humanoid",
    "rating": 1500,
    "tags": [
      "brute force",
      "dp",
      "sortings"
    ]
  },
  {
    "id": "369/E",
    "contestId": 369,
    "index": "E",
    "name": "Valera and Queries",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1761/D",
    "contestId": 1761,
    "index": "D",
    "name": "Carry Bit",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "919/D",
    "contestId": 919,
    "index": "D",
    "name": "Substring",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1426/E",
    "contestId": 1426,
    "index": "E",
    "name": "Rock, Paper, Scissors",
    "rating": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "flows",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1413/E",
    "contestId": 1413,
    "index": "E",
    "name": "Solo mid Oracle",
    "rating": 2100,
    "tags": [
      "greedy",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "1131/F",
    "contestId": 1131,
    "index": "F",
    "name": "Asya And Kittens",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "dsu"
    ]
  },
  {
    "id": "1968/G1",
    "contestId": 1968,
    "index": "G1",
    "name": "Division + LCP (easy version)",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1667/E",
    "contestId": 1667,
    "index": "E",
    "name": "Centroid Probabilities",
    "rating": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "1882/E2",
    "contestId": 1882,
    "index": "E2",
    "name": "Two Permutations (Hard Version)",
    "rating": 3100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1711/A",
    "contestId": 1711,
    "index": "A",
    "name": "Perfect Permutation",
    "rating": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1421/C",
    "contestId": 1421,
    "index": "C",
    "name": "Palindromifier",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "602/B",
    "contestId": 602,
    "index": "B",
    "name": "Approximating a Constant Range",
    "rating": 1400,
    "tags": [
      "dp",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1630/D",
    "contestId": 1630,
    "index": "D",
    "name": "Flipping Range",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1474/A",
    "contestId": 1474,
    "index": "A",
    "name": "Puzzle From the Future",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1174/D",
    "contestId": 1174,
    "index": "D",
    "name": "Ehab and the Expected XOR Problem",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "id": "1834/F",
    "contestId": 1834,
    "index": "F",
    "name": "Typewriter",
    "rating": 2500,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1244/D",
    "contestId": 1244,
    "index": "D",
    "name": "Paint the Tree",
    "rating": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "803/E",
    "contestId": 803,
    "index": "E",
    "name": "Roma and Poker",
    "rating": 2000,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1866/G",
    "contestId": 1866,
    "index": "G",
    "name": "Grouped Carriages",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "flows",
      "greedy"
    ]
  },
  {
    "id": "1836/B",
    "contestId": 1836,
    "index": "B",
    "name": "Astrophysicists",
    "rating": 1100,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1530/H",
    "contestId": 1530,
    "index": "H",
    "name": "Turing's Award",
    "rating": 3400,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "269/B",
    "contestId": 269,
    "index": "B",
    "name": "Greenhouse Effect",
    "rating": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "884/C",
    "contestId": 884,
    "index": "C",
    "name": "Bertown Subway",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1367/F1",
    "contestId": 1367,
    "index": "F1",
    "name": "Flying Sort (Easy Version)",
    "rating": 2100,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1505/E",
    "contestId": 1505,
    "index": "E",
    "name": "Cakewalk",
    "rating": 1800,
    "tags": [
      "*special",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "1731/E",
    "contestId": 1731,
    "index": "E",
    "name": "Graph Cost",
    "rating": 2000,
    "tags": [
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1165/A",
    "contestId": 1165,
    "index": "A",
    "name": "Remainder",
    "rating": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "11/D",
    "contestId": 11,
    "index": "D",
    "name": "A Simple Task",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "986/B",
    "contestId": 986,
    "index": "B",
    "name": "Petr and Permutations",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1268/A",
    "contestId": 1268,
    "index": "A",
    "name": "Long Beautiful Integer",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1322/A",
    "contestId": 1322,
    "index": "A",
    "name": "Unusual Competitions",
    "rating": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1672/F1",
    "contestId": 1672,
    "index": "F1",
    "name": "Array Shuffling",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1154/D",
    "contestId": 1154,
    "index": "D",
    "name": "Walking Robot",
    "rating": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1774/H",
    "contestId": 1774,
    "index": "H",
    "name": "Maximum Permutation",
    "rating": 3500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1406/B",
    "contestId": 1406,
    "index": "B",
    "name": "Maximum Product",
    "rating": 1200,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1976/E",
    "contestId": 1976,
    "index": "E",
    "name": "Splittable Permutations",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "id": "576/D",
    "contestId": 576,
    "index": "D",
    "name": "Flights for Regular Customers",
    "rating": 2700,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "1244/G",
    "contestId": 1244,
    "index": "G",
    "name": "Running in Pairs",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "578/F",
    "contestId": 578,
    "index": "F",
    "name": "Mirror Box",
    "rating": 3200,
    "tags": [
      "matrices",
      "trees"
    ]
  },
  {
    "id": "1936/E",
    "contestId": 1936,
    "index": "E",
    "name": "Yet Yet Another Permutation Problem",
    "rating": 3400,
    "tags": [
      "divide and conquer",
      "fft",
      "math"
    ]
  },
  {
    "id": "1144/E",
    "contestId": 1144,
    "index": "E",
    "name": "Median String",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "id": "845/B",
    "contestId": 845,
    "index": "B",
    "name": "Luba And The Ticket",
    "rating": 1600,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "12/A",
    "contestId": 12,
    "index": "A",
    "name": "Super Agent",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "746/G",
    "contestId": 746,
    "index": "G",
    "name": "New Roads",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1668/B",
    "contestId": 1668,
    "index": "B",
    "name": "Social Distance",
    "rating": 900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1152/F2",
    "contestId": 1152,
    "index": "F2",
    "name": "Neko Rules the Catniverse (Large Version)",
    "rating": 3000,
    "tags": [
      "bitmasks",
      "dp",
      "matrices"
    ]
  },
  {
    "id": "427/E",
    "contestId": 427,
    "index": "E",
    "name": "Police Patrol",
    "rating": 2000,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "1697/E",
    "contestId": 1697,
    "index": "E",
    "name": "Coloring",
    "rating": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "geometry",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1647/B",
    "contestId": 1647,
    "index": "B",
    "name": "Madoka and the Elegant Gift",
    "rating": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1283/D",
    "contestId": 1283,
    "index": "D",
    "name": "Christmas Trees",
    "rating": 1800,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "1236/E",
    "contestId": 1236,
    "index": "E",
    "name": "Alice and the Unfair Game",
    "rating": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "dsu"
    ]
  },
  {
    "id": "631/C",
    "contestId": 631,
    "index": "C",
    "name": "Report",
    "rating": 1700,
    "tags": [
      "data structures",
      "sortings"
    ]
  },
  {
    "id": "822/A",
    "contestId": 822,
    "index": "A",
    "name": "I'm bored with life",
    "rating": 800,
    "tags": [
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "736/E",
    "contestId": 736,
    "index": "E",
    "name": "Chess Championship",
    "rating": 2900,
    "tags": [
      "constructive algorithms",
      "flows",
      "greedy",
      "math"
    ]
  },
  {
    "id": "406/D",
    "contestId": 406,
    "index": "D",
    "name": "Hill Climbing",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "geometry",
      "trees"
    ]
  },
  {
    "id": "1844/F2",
    "contestId": 1844,
    "index": "F2",
    "name": "Min Cost Permutation (Hard Version)",
    "rating": 2800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1804/D",
    "contestId": 1804,
    "index": "D",
    "name": "Accommodation",
    "rating": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "118/E",
    "contestId": 118,
    "index": "E",
    "name": "Bertown roads",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1606/A",
    "contestId": 1606,
    "index": "A",
    "name": "AB Balance",
    "rating": 900,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "1186/C",
    "contestId": 1186,
    "index": "C",
    "name": "Vus the Cossack and Strings",
    "rating": 1800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1179/C",
    "contestId": 1179,
    "index": "C",
    "name": "Serge and Dining Room",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "graph matchings",
      "greedy",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "id": "1327/E",
    "contestId": 1327,
    "index": "E",
    "name": "Count The Blocks",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1458/F",
    "contestId": 1458,
    "index": "F",
    "name": "Range Diameter Sum",
    "rating": 3500,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "697/B",
    "contestId": 697,
    "index": "B",
    "name": "Barnicle",
    "rating": 1400,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "strings"
    ]
  },
  {
    "id": "1102/F",
    "contestId": 1102,
    "index": "F",
    "name": "Elongated Matrix",
    "rating": 2000,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1177/A",
    "contestId": 1177,
    "index": "A",
    "name": "Digits Sequence (Easy Edition)",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "555/D",
    "contestId": 555,
    "index": "D",
    "name": "Case of a Top Secret",
    "rating": 2500,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1874/D",
    "contestId": 1874,
    "index": "D",
    "name": "Jellyfish and Miku",
    "rating": 2800,
    "tags": [
      "divide and conquer",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1237/A",
    "contestId": 1237,
    "index": "A",
    "name": "Balanced Rating Changes",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1416/D",
    "contestId": 1416,
    "index": "D",
    "name": "Graph and Queries",
    "rating": 2600,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1455/F",
    "contestId": 1455,
    "index": "F",
    "name": "String and Operations",
    "rating": 2800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "869/E",
    "contestId": 869,
    "index": "E",
    "name": "The Untended Antiquity",
    "rating": 2400,
    "tags": [
      "data structures",
      "hashing"
    ]
  },
  {
    "id": "1348/F",
    "contestId": 1348,
    "index": "F",
    "name": "Phoenix and Memory",
    "rating": 2600,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1843/F1",
    "contestId": 1843,
    "index": "F1",
    "name": "Omsk Metro (simple version)",
    "rating": 1800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "id": "1626/E",
    "contestId": 1626,
    "index": "E",
    "name": "Black and White Tree",
    "rating": 2400,
    "tags": [
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1650/F",
    "contestId": 1650,
    "index": "F",
    "name": "Vitaly and Advanced Useless Algorithms",
    "rating": 2200,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1883/F",
    "contestId": 1883,
    "index": "F",
    "name": "You Are So Beautiful",
    "rating": 1400,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "556/A",
    "contestId": 556,
    "index": "A",
    "name": "Case of the Zeros and Ones",
    "rating": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1475/B",
    "contestId": 1475,
    "index": "B",
    "name": "New Year's Number",
    "rating": 900,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "id": "1703/A",
    "contestId": 1703,
    "index": "A",
    "name": "YES or YES?",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "590/A",
    "contestId": 590,
    "index": "A",
    "name": "Median Smoothing",
    "rating": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "514/C",
    "contestId": 514,
    "index": "C",
    "name": "Watto and Mechanism",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1982/E",
    "contestId": 1982,
    "index": "E",
    "name": "Number of k-good subarrays",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "divide and conquer",
      "dp",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1651/E",
    "contestId": 1651,
    "index": "E",
    "name": "Sum of Matchings",
    "rating": 2600,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "graph matchings",
      "greedy",
      "math"
    ]
  },
  {
    "id": "780/F",
    "contestId": 780,
    "index": "F",
    "name": "Axel and Marston in Bitland",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "graphs",
      "matrices"
    ]
  },
  {
    "id": "632/B",
    "contestId": 632,
    "index": "B",
    "name": "Alice, Bob, Two Teams",
    "rating": 1400,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "1328/D",
    "contestId": 1328,
    "index": "D",
    "name": "Carousel",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1257/D",
    "contestId": 1257,
    "index": "D",
    "name": "Yet Another Monster Killing Problem",
    "rating": 1700,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1609/C",
    "contestId": 1609,
    "index": "C",
    "name": "Complex Market Analysis",
    "rating": 1400,
    "tags": [
      "binary search",
      "dp",
      "implementation",
      "number theory",
      "schedules",
      "two pointers"
    ]
  },
  {
    "id": "339/B",
    "contestId": 339,
    "index": "B",
    "name": "Xenia and Ringroad",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "625/E",
    "contestId": 625,
    "index": "E",
    "name": "Frog Fights",
    "rating": 2800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "412/B",
    "contestId": 412,
    "index": "B",
    "name": "Network Configuration",
    "rating": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "833/B",
    "contestId": 833,
    "index": "B",
    "name": "The Bakery",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "509/D",
    "contestId": 509,
    "index": "D",
    "name": "Restoring Numbers",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1704/G",
    "contestId": 1704,
    "index": "G",
    "name": "Mio and Lucky Array",
    "rating": 3500,
    "tags": [
      "constructive algorithms",
      "fft",
      "math",
      "strings"
    ]
  },
  {
    "id": "959/A",
    "contestId": 959,
    "index": "A",
    "name": "Mahmoud and Ehab and the even-odd game",
    "rating": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "697/A",
    "contestId": 697,
    "index": "A",
    "name": "Pineapple Incident",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1077/A",
    "contestId": 1077,
    "index": "A",
    "name": "Frog Jumping",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1686/B",
    "contestId": 1686,
    "index": "B",
    "name": "Odd Subarrays",
    "rating": 800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "213/A",
    "contestId": 213,
    "index": "A",
    "name": "Game",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "greedy"
    ]
  },
  {
    "id": "195/C",
    "contestId": 195,
    "index": "C",
    "name": "Try and Catch",
    "rating": 1800,
    "tags": [
      "expression parsing",
      "implementation"
    ]
  },
  {
    "id": "1208/A",
    "contestId": 1208,
    "index": "A",
    "name": "XORinacci",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "415/B",
    "contestId": 415,
    "index": "B",
    "name": "Mashmokh and Tokens",
    "rating": 1500,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1165/F2",
    "contestId": 1165,
    "index": "F2",
    "name": "Microtransactions (hard version)",
    "rating": 2000,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1142/D",
    "contestId": 1142,
    "index": "D",
    "name": "Foreigner",
    "rating": 2800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1259/B",
    "contestId": 1259,
    "index": "B",
    "name": "Make Them Odd",
    "rating": 1200,
    "tags": [
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1920/E",
    "contestId": 1920,
    "index": "E",
    "name": "Counting Binary Strings",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "131/B",
    "contestId": 131,
    "index": "B",
    "name": "Opposites Attract",
    "rating": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1950/F",
    "contestId": 1950,
    "index": "F",
    "name": "0, 1, 2, Tree!",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1835/B",
    "contestId": 1835,
    "index": "B",
    "name": "Lottery",
    "rating": 2500,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "729/A",
    "contestId": 729,
    "index": "A",
    "name": "Interview with Oleg",
    "rating": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1185/C2",
    "contestId": 1185,
    "index": "C2",
    "name": "Exam in BerSU (hard version)",
    "rating": 1700,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "464/A",
    "contestId": 464,
    "index": "A",
    "name": "No to Palindromes!",
    "rating": 1700,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1133/F1",
    "contestId": 1133,
    "index": "F1",
    "name": "Spanning Tree with Maximum Degree",
    "rating": 1600,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "645/F",
    "contestId": 645,
    "index": "F",
    "name": "Cowslip Collections",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1862/A",
    "contestId": 1862,
    "index": "A",
    "name": "Gift Carpet",
    "rating": 800,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1641/B",
    "contestId": 1641,
    "index": "B",
    "name": "Repetitions Decoding",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1545/E1",
    "contestId": 1545,
    "index": "E1",
    "name": "AquaMoon and Time Stop (easy version)",
    "rating": 3500,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1039/E",
    "contestId": 1039,
    "index": "E",
    "name": "Summer Oenothera Exhibition",
    "rating": 3400,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1552/G",
    "contestId": 1552,
    "index": "G",
    "name": "A Serious Referee",
    "rating": 3000,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "sortings"
    ]
  },
  {
    "id": "1946/E",
    "contestId": 1946,
    "index": "E",
    "name": "Girl Permutation",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1810/H",
    "contestId": 1810,
    "index": "H",
    "name": "Last Number",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "877/B",
    "contestId": 877,
    "index": "B",
    "name": "Nikita and string",
    "rating": 1500,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "118/D",
    "contestId": 118,
    "index": "D",
    "name": "Caesar's Legions",
    "rating": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1195/D2",
    "contestId": 1195,
    "index": "D2",
    "name": "Submarine in the Rybinsk Sea (hard edition)",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "6/C",
    "contestId": 6,
    "index": "C",
    "name": "Alice, Bob and Chocolate",
    "rating": 1200,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "93/D",
    "contestId": 93,
    "index": "D",
    "name": "Flags",
    "rating": 2500,
    "tags": [
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "id": "928/C",
    "contestId": 928,
    "index": "C",
    "name": "Dependency management",
    "rating": 1900,
    "tags": [
      "*special",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1220/E",
    "contestId": 1220,
    "index": "E",
    "name": "Tourism",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1381/C",
    "contestId": 1381,
    "index": "C",
    "name": "Mastermind",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "graph matchings",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1129/B",
    "contestId": 1129,
    "index": "B",
    "name": "Wrong Answer",
    "rating": 2000,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "31/D",
    "contestId": 31,
    "index": "D",
    "name": "Chocolate",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "id": "219/B",
    "contestId": 219,
    "index": "B",
    "name": "Special Offer! Super Price 999 Bourles!",
    "rating": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "269/C",
    "contestId": 269,
    "index": "C",
    "name": "Flawed Flow",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "330/A",
    "contestId": 330,
    "index": "A",
    "name": "Cakeminator",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "21/B",
    "contestId": 21,
    "index": "B",
    "name": "Intersection",
    "rating": 2000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1023/F",
    "contestId": 1023,
    "index": "F",
    "name": "Mobile Phone Network",
    "rating": 2600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "601/C",
    "contestId": 601,
    "index": "C",
    "name": "Kleofáš and the n-thlon",
    "rating": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "812/E",
    "contestId": 812,
    "index": "E",
    "name": "Sagheer and Apple Tree",
    "rating": 2300,
    "tags": [
      "games",
      "trees"
    ]
  },
  {
    "id": "1110/E",
    "contestId": 1110,
    "index": "E",
    "name": "Magic Stones",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1783/A",
    "contestId": 1783,
    "index": "A",
    "name": "Make it Beautiful",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "id": "546/A",
    "contestId": 546,
    "index": "A",
    "name": "Soldier and Bananas",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1608/D",
    "contestId": 1608,
    "index": "D",
    "name": "Dominoes",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "fft",
      "graphs",
      "math",
      "number theory"
    ]
  },
  {
    "id": "293/C",
    "contestId": 293,
    "index": "C",
    "name": "Cube Problem",
    "rating": 2400,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "268/B",
    "contestId": 268,
    "index": "B",
    "name": "Buttons",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1421/B",
    "contestId": 1421,
    "index": "B",
    "name": "Putting Bricks in the Wall",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "562/B",
    "contestId": 562,
    "index": "B",
    "name": "Clique in the Divisibility Graph",
    "rating": 1500,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1783/B",
    "contestId": 1783,
    "index": "B",
    "name": "Matrix of Differences",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1671/F",
    "contestId": 1671,
    "index": "F",
    "name": "Permutation Counting",
    "rating": 2700,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "1701/B",
    "contestId": 1701,
    "index": "B",
    "name": "Permutation",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1080/F",
    "contestId": 1080,
    "index": "F",
    "name": "Katya and Segments Sets",
    "rating": 2400,
    "tags": [
      "data structures",
      "interactive",
      "sortings"
    ]
  },
  {
    "id": "1326/F2",
    "contestId": 1326,
    "index": "F2",
    "name": "Wise Men (Hard Version)",
    "rating": 3200,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "id": "731/A",
    "contestId": 731,
    "index": "A",
    "name": "Night at the Museum",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1178/C",
    "contestId": 1178,
    "index": "C",
    "name": "Tiles",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "greedy",
      "math"
    ]
  },
  {
    "id": "39/C",
    "contestId": 39,
    "index": "C",
    "name": "Moon Craters",
    "rating": 2100,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "id": "1316/C",
    "contestId": 1316,
    "index": "C",
    "name": "Primitive Primes",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "1729/D",
    "contestId": 1729,
    "index": "D",
    "name": "Friends and the Restaurant",
    "rating": 1200,
    "tags": [
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "510/C",
    "contestId": 510,
    "index": "C",
    "name": "Fox And Names",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "sortings"
    ]
  },
  {
    "id": "1060/D",
    "contestId": 1060,
    "index": "D",
    "name": "Social Circles",
    "rating": 1900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1866/D",
    "contestId": 1866,
    "index": "D",
    "name": "Digital Wallet",
    "rating": 2300,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1303/G",
    "contestId": 1303,
    "index": "G",
    "name": "Sum of Prefix Sums",
    "rating": 2700,
    "tags": [
      "data structures",
      "divide and conquer",
      "geometry",
      "trees"
    ]
  },
  {
    "id": "94/A",
    "contestId": 94,
    "index": "A",
    "name": "Restoring Password",
    "rating": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1238/E",
    "contestId": 1238,
    "index": "E",
    "name": "Keyboard Purchase",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1479/B2",
    "contestId": 1479,
    "index": "B2",
    "name": "Painting the Array II",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1931/G",
    "contestId": 1931,
    "index": "G",
    "name": "One-Dimensional Puzzle",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "476/C",
    "contestId": 476,
    "index": "C",
    "name": "Dreamoon and Sums",
    "rating": 1600,
    "tags": [
      "math"
    ]
  },
  {
    "id": "288/E",
    "contestId": 288,
    "index": "E",
    "name": "Polo the Penguin and Lucky Numbers",
    "rating": 2800,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "462/B",
    "contestId": 462,
    "index": "B",
    "name": "Appleman and Card Game",
    "rating": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "466/C",
    "contestId": 466,
    "index": "C",
    "name": "Number of Ways",
    "rating": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "451/E",
    "contestId": 451,
    "index": "E",
    "name": "Devu and Flowers",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "id": "989/D",
    "contestId": 989,
    "index": "D",
    "name": "A Shade of Moonlight",
    "rating": 2500,
    "tags": [
      "binary search",
      "geometry",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "584/E",
    "contestId": 584,
    "index": "E",
    "name": "Anton and Ira",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1380/B",
    "contestId": 1380,
    "index": "B",
    "name": "Universal Solution",
    "rating": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "527/A",
    "contestId": 527,
    "index": "A",
    "name": "Playing with Paper",
    "rating": 1100,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1173/A",
    "contestId": 1173,
    "index": "A",
    "name": "Nauuo and Votes",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1349/E",
    "contestId": 1349,
    "index": "E",
    "name": "Slime and Hats",
    "rating": 3500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1996/D",
    "contestId": 1996,
    "index": "D",
    "name": "Fun",
    "rating": 1500,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "900/A",
    "contestId": 900,
    "index": "A",
    "name": "Find Extra One",
    "rating": 800,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "383/A",
    "contestId": 383,
    "index": "A",
    "name": "Milking cows",
    "rating": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "749/B",
    "contestId": 749,
    "index": "B",
    "name": "Parallelogram is Back",
    "rating": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "id": "1354/D",
    "contestId": 1354,
    "index": "D",
    "name": "Multiset",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1769/B2",
    "contestId": 1769,
    "index": "B2",
    "name": "Копирование файлов II",
    "rating": 1400,
    "tags": [
      "*special",
      "binary search",
      "brute force",
      "math"
    ]
  },
  {
    "id": "1922/F",
    "contestId": 1922,
    "index": "F",
    "name": "Replace on Segment",
    "rating": 2500,
    "tags": [
      "dp",
      "graph matchings"
    ]
  },
  {
    "id": "246/B",
    "contestId": 246,
    "index": "B",
    "name": "Increase and Decrease",
    "rating": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1603/D",
    "contestId": 1603,
    "index": "D",
    "name": "Artistic Partition",
    "rating": 3000,
    "tags": [
      "divide and conquer",
      "dp",
      "number theory"
    ]
  },
  {
    "id": "908/D",
    "contestId": 908,
    "index": "D",
    "name": "New Year and Arbitrary Arrangement",
    "rating": 2200,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "367/E",
    "contestId": 367,
    "index": "E",
    "name": "Sereja and Intervals",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1515/E",
    "contestId": 1515,
    "index": "E",
    "name": "Phoenix and Computers",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1426/C",
    "contestId": 1426,
    "index": "C",
    "name": "Increase and Copy",
    "rating": 1100,
    "tags": [
      "binary search",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1955/H",
    "contestId": 1955,
    "index": "H",
    "name": "The Most Reckless Defense",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp",
      "flows",
      "graph matchings",
      "shortest paths"
    ]
  },
  {
    "id": "277/C",
    "contestId": 277,
    "index": "C",
    "name": "Game",
    "rating": 2400,
    "tags": [
      "games",
      "implementation"
    ]
  },
  {
    "id": "159/C",
    "contestId": 159,
    "index": "C",
    "name": "String Manipulation 1.0",
    "rating": 1400,
    "tags": [
      "*special",
      "binary search",
      "brute force",
      "data structures",
      "strings"
    ]
  },
  {
    "id": "1486/A",
    "contestId": 1486,
    "index": "A",
    "name": "Shifting Stacks",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1225/E",
    "contestId": 1225,
    "index": "E",
    "name": "Rock Is Push",
    "rating": 2200,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "989/C",
    "contestId": 989,
    "index": "C",
    "name": "A Mist of Florescence",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "1361/C",
    "contestId": 1361,
    "index": "C",
    "name": "Johnny and Megan's Necklace",
    "rating": 2500,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1903/C",
    "contestId": 1903,
    "index": "C",
    "name": "Theofanis' Nightmare",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1840/F",
    "contestId": 1840,
    "index": "F",
    "name": "Railguns",
    "rating": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1943/D2",
    "contestId": 1943,
    "index": "D2",
    "name": "Counting Is Fun (Hard Version)",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1547/E",
    "contestId": 1547,
    "index": "E",
    "name": "Air Conditioners",
    "rating": 1500,
    "tags": [
      "data structures",
      "dp",
      "implementation",
      "shortest paths",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "237/B",
    "contestId": 237,
    "index": "B",
    "name": "Young Table",
    "rating": 1500,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "939/C",
    "contestId": 939,
    "index": "C",
    "name": "Convenient For Everybody",
    "rating": 1600,
    "tags": [
      "binary search",
      "two pointers"
    ]
  },
  {
    "id": "448/C",
    "contestId": 448,
    "index": "C",
    "name": "Painting Fence",
    "rating": 1900,
    "tags": [
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1073/E",
    "contestId": 1073,
    "index": "E",
    "name": "Segment Sum",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "343/A",
    "contestId": 343,
    "index": "A",
    "name": "Rational Resistance",
    "rating": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "671/E",
    "contestId": 671,
    "index": "E",
    "name": "Organizing a Race",
    "rating": 3300,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "648/C",
    "contestId": 648,
    "index": "C",
    "name": "Путь Робота",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1991/H",
    "contestId": 1991,
    "index": "H",
    "name": "Prime Split Game",
    "rating": 3300,
    "tags": [
      "bitmasks",
      "dp",
      "fft",
      "games",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1610/C",
    "contestId": 1610,
    "index": "C",
    "name": "Keshi Is Throwing a Party",
    "rating": 1600,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "928/B",
    "contestId": 928,
    "index": "B",
    "name": "Chat",
    "rating": 1400,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "id": "1033/F",
    "contestId": 1033,
    "index": "F",
    "name": "Boolean Computer",
    "rating": 2800,
    "tags": [
      "bitmasks",
      "brute force",
      "fft",
      "math"
    ]
  },
  {
    "id": "993/D",
    "contestId": 993,
    "index": "D",
    "name": "Compute Power",
    "rating": 2500,
    "tags": [
      "binary search",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "774/H",
    "contestId": 774,
    "index": "H",
    "name": "Repairing Of String",
    "rating": 2200,
    "tags": [
      "*special",
      "constructive algorithms"
    ]
  },
  {
    "id": "1958/C",
    "contestId": 1958,
    "index": "C",
    "name": "Firewood",
    "rating": 1500,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1638/E",
    "contestId": 1638,
    "index": "E",
    "name": "Colorful Operations",
    "rating": 2400,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "97/B",
    "contestId": 97,
    "index": "B",
    "name": "Superset",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "id": "229/A",
    "contestId": 229,
    "index": "A",
    "name": "Shifts",
    "rating": 1500,
    "tags": [
      "brute force",
      "two pointers"
    ]
  },
  {
    "id": "1948/A",
    "contestId": 1948,
    "index": "A",
    "name": "Special Characters",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "1469/C",
    "contestId": 1469,
    "index": "C",
    "name": "Building a Fence",
    "rating": 1600,
    "tags": [
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "235/C",
    "contestId": 235,
    "index": "C",
    "name": "Cyclical Quest",
    "rating": 2700,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "955/F",
    "contestId": 955,
    "index": "F",
    "name": "Heaps",
    "rating": 2600,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "1769/B1",
    "contestId": 1769,
    "index": "B1",
    "name": "Копирование файлов I",
    "rating": 1000,
    "tags": [
      "*special",
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1010/D",
    "contestId": 1010,
    "index": "D",
    "name": "Mars rover",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "983/E",
    "contestId": 983,
    "index": "E",
    "name": "NN country",
    "rating": 2800,
    "tags": [
      "binary search",
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1730/D",
    "contestId": 1730,
    "index": "D",
    "name": "Prefixes and Suffixes",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1537/B",
    "contestId": 1537,
    "index": "B",
    "name": "Bad Boy",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "241/A",
    "contestId": 241,
    "index": "A",
    "name": "Old Peykan",
    "rating": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1188/A2",
    "contestId": 1188,
    "index": "A2",
    "name": "Add on a Tree: Revolution",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "108/A",
    "contestId": 108,
    "index": "A",
    "name": "Palindromic Times",
    "rating": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "166/C",
    "contestId": 166,
    "index": "C",
    "name": "Median",
    "rating": 1500,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1349/F2",
    "contestId": 1349,
    "index": "F2",
    "name": "Slime and Sequences (Hard Version)",
    "rating": 3500,
    "tags": [
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "1890/A",
    "contestId": 1890,
    "index": "A",
    "name": "Doremy's Paint 3",
    "rating": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1301/B",
    "contestId": 1301,
    "index": "B",
    "name": "Motarack's Birthday",
    "rating": 1500,
    "tags": [
      "binary search",
      "greedy",
      "ternary search"
    ]
  },
  {
    "id": "1395/C",
    "contestId": 1395,
    "index": "C",
    "name": "Boboniu and Bit Operations",
    "rating": 1600,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "840/C",
    "contestId": 840,
    "index": "C",
    "name": "On the Bench",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1399/E1",
    "contestId": 1399,
    "index": "E1",
    "name": "Weights Division (easy version)",
    "rating": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1769/D1",
    "contestId": 1769,
    "index": "D1",
    "name": "Игра в Девятку I",
    "rating": 1800,
    "tags": [
      "*special",
      "brute force",
      "dp"
    ]
  },
  {
    "id": "923/D",
    "contestId": 923,
    "index": "D",
    "name": "Picking Strings",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1742/D",
    "contestId": 1742,
    "index": "D",
    "name": "Coprime",
    "rating": 1100,
    "tags": [
      "brute force",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1365/E",
    "contestId": 1365,
    "index": "E",
    "name": "Maximum Subsequence Value",
    "rating": 1900,
    "tags": [
      "brute force",
      "constructive algorithms"
    ]
  },
  {
    "id": "838/C",
    "contestId": 838,
    "index": "C",
    "name": "Future Failure",
    "rating": 2800,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "id": "1538/E",
    "contestId": 1538,
    "index": "E",
    "name": "Funny Substrings",
    "rating": 2100,
    "tags": [
      "data structures",
      "hashing",
      "implementation",
      "matrices",
      "strings"
    ]
  },
  {
    "id": "32/E",
    "contestId": 32,
    "index": "E",
    "name": "Hide-and-Seek",
    "rating": 2400,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "1637/E",
    "contestId": 1637,
    "index": "E",
    "name": "Best Pair",
    "rating": 2100,
    "tags": [
      "binary search",
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1585/G",
    "contestId": 1585,
    "index": "G",
    "name": "Poachers",
    "rating": 2500,
    "tags": [
      "dp",
      "games",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "923/E",
    "contestId": 923,
    "index": "E",
    "name": "Perpetual Subtraction",
    "rating": 3100,
    "tags": [
      "fft",
      "math",
      "matrices"
    ]
  },
  {
    "id": "1829/A",
    "contestId": 1829,
    "index": "A",
    "name": "Love Story",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1957/B",
    "contestId": 1957,
    "index": "B",
    "name": "A BIT of a Construction",
    "rating": 1100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1168/C",
    "contestId": 1168,
    "index": "C",
    "name": "And Reachability",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1041/B",
    "contestId": 1041,
    "index": "B",
    "name": "Buying a TV Set",
    "rating": 1000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "871/E",
    "contestId": 871,
    "index": "E",
    "name": "Restore the Tree",
    "rating": 2900,
    "tags": [
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "933/B",
    "contestId": 933,
    "index": "B",
    "name": "A Determined Cleanup",
    "rating": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "825/B",
    "contestId": 825,
    "index": "B",
    "name": "Five-In-a-Row",
    "rating": 1600,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "505/B",
    "contestId": 505,
    "index": "B",
    "name": "Mr. Kitayuta's Colorful Graph",
    "rating": 1400,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "14/E",
    "contestId": 14,
    "index": "E",
    "name": "Camels",
    "rating": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "433/A",
    "contestId": 433,
    "index": "A",
    "name": "Kitahara Haruki's Gift",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "547/A",
    "contestId": 547,
    "index": "A",
    "name": "Mike and Frog",
    "rating": 2200,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "893/D",
    "contestId": 893,
    "index": "D",
    "name": "Credit Card",
    "rating": 1900,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "961/E",
    "contestId": 961,
    "index": "E",
    "name": "Tufurama",
    "rating": 1900,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1984/C2",
    "contestId": 1984,
    "index": "C2",
    "name": "Magnitude (Hard Version)",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1975/H",
    "contestId": 1975,
    "index": "H",
    "name": "378QAQ and Core",
    "rating": 3500,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1672/G",
    "contestId": 1672,
    "index": "G",
    "name": "Cross Xor",
    "rating": 3200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math",
      "matrices"
    ]
  },
  {
    "id": "704/C",
    "contestId": 704,
    "index": "C",
    "name": "Black Widow",
    "rating": 2900,
    "tags": [
      "dp",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "id": "376/B",
    "contestId": 376,
    "index": "B",
    "name": "I.O.U.",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "707/C",
    "contestId": 707,
    "index": "C",
    "name": "Pythagorean Triples",
    "rating": 1500,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1196/E",
    "contestId": 1196,
    "index": "E",
    "name": "Connected Component on a Chessboard",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1765/D",
    "contestId": 1765,
    "index": "D",
    "name": "Watch the Videos",
    "rating": 1700,
    "tags": [
      "binary search",
      "constructive algorithms",
      "two pointers"
    ]
  },
  {
    "id": "1248/A",
    "contestId": 1248,
    "index": "A",
    "name": "Integer Points",
    "rating": 1000,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "352/B",
    "contestId": 352,
    "index": "B",
    "name": "Jeff and Periods",
    "rating": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "340/E",
    "contestId": 340,
    "index": "E",
    "name": "Iahub and Permutations",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1560/E",
    "contestId": 1560,
    "index": "E",
    "name": "Polycarp and String Transformation",
    "rating": 1800,
    "tags": [
      "binary search",
      "implementation",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "994/B",
    "contestId": 994,
    "index": "B",
    "name": "Knights of a Polygonal Table",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1863/D",
    "contestId": 1863,
    "index": "D",
    "name": "Two-Colored Dominoes",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1388/C",
    "contestId": 1388,
    "index": "C",
    "name": "Uncle Bogdan and Country Happiness",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "id": "1280/D",
    "contestId": 1280,
    "index": "D",
    "name": "Miss Punyverse",
    "rating": 2500,
    "tags": [
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1956/A",
    "contestId": 1956,
    "index": "A",
    "name": "Nene's Game",
    "rating": 800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "games",
      "greedy"
    ]
  },
  {
    "id": "1166/D",
    "contestId": 1166,
    "index": "D",
    "name": "Cute Sequences",
    "rating": 2200,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "142/A",
    "contestId": 142,
    "index": "A",
    "name": "Help Farmer",
    "rating": 1600,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1730/C",
    "contestId": 1730,
    "index": "C",
    "name": "Minimum Notation",
    "rating": 1200,
    "tags": [
      "data structures",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1989/A",
    "contestId": 1989,
    "index": "A",
    "name": "Catch the Coin",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1866/I",
    "contestId": 1866,
    "index": "I",
    "name": "Imagination Castle",
    "rating": 2300,
    "tags": [
      "dp",
      "games",
      "two pointers"
    ]
  },
  {
    "id": "582/A",
    "contestId": 582,
    "index": "A",
    "name": "GCD Table",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "448/E",
    "contestId": 448,
    "index": "E",
    "name": "Divisors",
    "rating": 2200,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "1234/F",
    "contestId": 1234,
    "index": "F",
    "name": "Yet Another Substring Reverse",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1453/F",
    "contestId": 1453,
    "index": "F",
    "name": "Even Harder",
    "rating": 2700,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1608/E",
    "contestId": 1608,
    "index": "E",
    "name": "The Cells on the Paper",
    "rating": 2800,
    "tags": [
      "binary search",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "869/B",
    "contestId": 869,
    "index": "B",
    "name": "The Eternal Immortality",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1369/B",
    "contestId": 1369,
    "index": "B",
    "name": "AccurateLee",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "246/A",
    "contestId": 246,
    "index": "A",
    "name": "Buggy Sorting",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "630/J",
    "contestId": 630,
    "index": "J",
    "name": "Divisibility",
    "rating": 1100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "665/B",
    "contestId": 665,
    "index": "B",
    "name": "Shopping",
    "rating": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1792/F1",
    "contestId": 1792,
    "index": "F1",
    "name": "Graph Coloring (easy version)",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1214/D",
    "contestId": 1214,
    "index": "D",
    "name": "Treasure Island",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "flows",
      "hashing"
    ]
  },
  {
    "id": "1388/A",
    "contestId": 1388,
    "index": "A",
    "name": "Captain Flint and Crew Recruitment",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1985/D",
    "contestId": 1985,
    "index": "D",
    "name": "Manhattan Circle",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1928/D",
    "contestId": 1928,
    "index": "D",
    "name": "Lonely Mountain Dungeons",
    "rating": 1900,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "1394/B",
    "contestId": 1394,
    "index": "B",
    "name": "Boboniu Walks on Graph",
    "rating": 2300,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "hashing"
    ]
  },
  {
    "id": "1212/E",
    "contestId": 1212,
    "index": "E",
    "name": "Booking System",
    "rating": 1600,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "id": "240/F",
    "contestId": 240,
    "index": "F",
    "name": "TorCoder",
    "rating": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "460/D",
    "contestId": 460,
    "index": "D",
    "name": "Little Victor and Set",
    "rating": 2300,
    "tags": [
      "brute force",
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "552/A",
    "contestId": 552,
    "index": "A",
    "name": "Vanya and Table",
    "rating": 1000,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "983/B",
    "contestId": 983,
    "index": "B",
    "name": "XOR-pyramid",
    "rating": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "756/D",
    "contestId": 756,
    "index": "D",
    "name": "Bacterial Melee",
    "rating": 2400,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "string suffix structures"
    ]
  },
  {
    "id": "1608/C",
    "contestId": 1608,
    "index": "C",
    "name": "Game Master",
    "rating": 1700,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "471/B",
    "contestId": 471,
    "index": "B",
    "name": "MUH and Important Things",
    "rating": 1300,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1505/A",
    "contestId": 1505,
    "index": "A",
    "name": "Is it rated - 2",
    "rating": 900,
    "tags": [
      "*special",
      "implementation",
      "interactive"
    ]
  },
  {
    "id": "1151/C",
    "contestId": 1151,
    "index": "C",
    "name": "Problem for Nazar",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "896/D",
    "contestId": 896,
    "index": "D",
    "name": "Nephren Runs a Cinema",
    "rating": 2900,
    "tags": [
      "chinese remainder theorem",
      "combinatorics",
      "math",
      "number theory"
    ]
  },
  {
    "id": "34/B",
    "contestId": 34,
    "index": "B",
    "name": "Sale",
    "rating": 900,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1929/C",
    "contestId": 1929,
    "index": "C",
    "name": "Sasha and the Casino",
    "rating": 1400,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "games",
      "greedy",
      "math"
    ]
  },
  {
    "id": "30/E",
    "contestId": 30,
    "index": "E",
    "name": "Tricky and Clever Password",
    "rating": 2800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "757/A",
    "contestId": 757,
    "index": "A",
    "name": "Gotta Catch Em' All!",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "382/E",
    "contestId": 382,
    "index": "E",
    "name": "Ksenia and Combinatorics",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1351/C",
    "contestId": 1351,
    "index": "C",
    "name": "Skier",
    "rating": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "201/E",
    "contestId": 201,
    "index": "E",
    "name": "Thoroughly Bureaucratic Organization",
    "rating": 2600,
    "tags": [
      "binary search",
      "combinatorics"
    ]
  },
  {
    "id": "32/D",
    "contestId": 32,
    "index": "D",
    "name": "Constellation",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "821/E",
    "contestId": 821,
    "index": "E",
    "name": "Okabe and El Psy Kongroo",
    "rating": 2100,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "784/C",
    "contestId": 784,
    "index": "C",
    "name": "INTERCALC",
    "rating": 1800,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "69/E",
    "contestId": 69,
    "index": "E",
    "name": "Subsegments",
    "rating": 1800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "158/C",
    "contestId": 158,
    "index": "C",
    "name": "Cd and pwd commands",
    "rating": 1400,
    "tags": [
      "*special",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "895/A",
    "contestId": 895,
    "index": "A",
    "name": "Pizza Separation",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "245/E",
    "contestId": 245,
    "index": "E",
    "name": "Mishap in Club",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "57/A",
    "contestId": 57,
    "index": "A",
    "name": "Square Earth?",
    "rating": 1300,
    "tags": [
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1172/B",
    "contestId": 1172,
    "index": "B",
    "name": "Nauuo and Circle",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1764/B",
    "contestId": 1764,
    "index": "B",
    "name": "Doremy's Perfect Math Class",
    "rating": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "814/C",
    "contestId": 814,
    "index": "C",
    "name": "An impassioned circulation of affection",
    "rating": 1600,
    "tags": [
      "brute force",
      "dp",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1418/D",
    "contestId": 1418,
    "index": "D",
    "name": "Trash Problem",
    "rating": 2100,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "682/D",
    "contestId": 682,
    "index": "D",
    "name": "Alyona and Strings",
    "rating": 1900,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "251/C",
    "contestId": 251,
    "index": "C",
    "name": "Number Transformation",
    "rating": 2000,
    "tags": [
      "dp",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "80/B",
    "contestId": 80,
    "index": "B",
    "name": "Depression",
    "rating": 1200,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1995/A",
    "contestId": 1995,
    "index": "A",
    "name": "Diagonals",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1624/E",
    "contestId": 1624,
    "index": "E",
    "name": "Masha-forgetful",
    "rating": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "hashing",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "159/B",
    "contestId": 159,
    "index": "B",
    "name": "Matchmaker",
    "rating": 1100,
    "tags": [
      "*special",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1995/C",
    "contestId": 1995,
    "index": "C",
    "name": "Squaring",
    "rating": 1800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "523/A",
    "contestId": 523,
    "index": "A",
    "name": "Rotate, Flip and Zoom",
    "rating": 1200,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1423/E",
    "contestId": 1423,
    "index": "E",
    "name": "5G Antenna Towers",
    "rating": 2700,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1515/C",
    "contestId": 1515,
    "index": "C",
    "name": "Phoenix and Towers",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "202/A",
    "contestId": 202,
    "index": "A",
    "name": "LLPS",
    "rating": 800,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1517/G",
    "contestId": 1517,
    "index": "G",
    "name": "Starry Night Camping",
    "rating": 3300,
    "tags": [
      "constructive algorithms",
      "flows",
      "graphs"
    ]
  },
  {
    "id": "1741/A",
    "contestId": 1741,
    "index": "A",
    "name": "Compare T-Shirt Sizes",
    "rating": 800,
    "tags": [
      "implementation",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1846/B",
    "contestId": 1846,
    "index": "B",
    "name": "Rudolph and Tic-Tac-Toe",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1800/G",
    "contestId": 1800,
    "index": "G",
    "name": "Symmetree",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "hashing",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "515/C",
    "contestId": 515,
    "index": "C",
    "name": "Drazil and Factorial",
    "rating": 1400,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "414/A",
    "contestId": 414,
    "index": "A",
    "name": "Mashmokh and Numbers",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "number theory"
    ]
  },
  {
    "id": "1046/I",
    "contestId": 1046,
    "index": "I",
    "name": "Say Hello",
    "rating": 2300,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1776/D",
    "contestId": 1776,
    "index": "D",
    "name": "Teamwork",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "73/C",
    "contestId": 73,
    "index": "C",
    "name": "LionAge II",
    "rating": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "479/B",
    "contestId": 479,
    "index": "B",
    "name": "Towers",
    "rating": 1400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1360/A",
    "contestId": 1360,
    "index": "A",
    "name": "Minimal Square",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1771/A",
    "contestId": 1771,
    "index": "A",
    "name": "Hossam and Combinatorics",
    "rating": 900,
    "tags": [
      "combinatorics",
      "math",
      "sortings"
    ]
  },
  {
    "id": "798/A",
    "contestId": 798,
    "index": "A",
    "name": "Mike and palindrome",
    "rating": 1000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "535/D",
    "contestId": 535,
    "index": "D",
    "name": "Tavas and Malekas",
    "rating": 1900,
    "tags": [
      "greedy",
      "hashing",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1150/A",
    "contestId": 1150,
    "index": "A",
    "name": "Stock Arbitraging",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "442/D",
    "contestId": 442,
    "index": "D",
    "name": "Adam and Tree",
    "rating": 2600,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1220/D",
    "contestId": 1220,
    "index": "D",
    "name": "Alex and Julian",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "math",
      "number theory"
    ]
  },
  {
    "id": "248/D",
    "contestId": 248,
    "index": "D",
    "name": "Sweets for Everyone!",
    "rating": 2300,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "78/A",
    "contestId": 78,
    "index": "A",
    "name": "Haiku",
    "rating": 800,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1420/B",
    "contestId": 1420,
    "index": "B",
    "name": "Rock and Lever",
    "rating": 1200,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "id": "1149/A",
    "contestId": 1149,
    "index": "A",
    "name": "Prefix Sum Primes",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "580/E",
    "contestId": 580,
    "index": "E",
    "name": "Kefa and Watch",
    "rating": 2500,
    "tags": [
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1574/D",
    "contestId": 1574,
    "index": "D",
    "name": "The Strongest Build",
    "rating": 2000,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "hashing",
      "implementation"
    ]
  },
  {
    "id": "1119/D",
    "contestId": 1119,
    "index": "D",
    "name": "Frets On Fire",
    "rating": 1800,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "id": "490/C",
    "contestId": 490,
    "index": "C",
    "name": "Hacking Cypher",
    "rating": 1700,
    "tags": [
      "brute force",
      "math",
      "number theory",
      "strings"
    ]
  },
  {
    "id": "1690/A",
    "contestId": 1690,
    "index": "A",
    "name": "Print a Pedestal (Codeforces logo?)",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "369/A",
    "contestId": 369,
    "index": "A",
    "name": "Valera and Plates",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1976/C",
    "contestId": 1976,
    "index": "C",
    "name": "Job Interview",
    "rating": 1600,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "176/B",
    "contestId": 176,
    "index": "B",
    "name": "Word Cut",
    "rating": 1700,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1775/B",
    "contestId": 1775,
    "index": "B",
    "name": "Gardener and the Array",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "constructive algorithms"
    ]
  },
  {
    "id": "111/B",
    "contestId": 111,
    "index": "B",
    "name": "Petya and Divisors",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "number theory"
    ]
  },
  {
    "id": "1081/C",
    "contestId": 1081,
    "index": "C",
    "name": "Colorful Bricks",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "97/E",
    "contestId": 97,
    "index": "E",
    "name": "Leaders",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1844/F1",
    "contestId": 1844,
    "index": "F1",
    "name": "Min Cost Permutation (Easy Version)",
    "rating": 2600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1789/B",
    "contestId": 1789,
    "index": "B",
    "name": "Serval and Inversion Magic",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "325/C",
    "contestId": 325,
    "index": "C",
    "name": "Monsters and Diamonds",
    "rating": 2600,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1355/C",
    "contestId": 1355,
    "index": "C",
    "name": "Count Triangles",
    "rating": 1800,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "901/A",
    "contestId": 901,
    "index": "A",
    "name": "Hashing Trees",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "id": "739/B",
    "contestId": 739,
    "index": "B",
    "name": "Alyona and a tree",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "708/B",
    "contestId": 708,
    "index": "B",
    "name": "Recover the String",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1097/A",
    "contestId": 1097,
    "index": "A",
    "name": "Gennady and a Card Game",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "107/B",
    "contestId": 107,
    "index": "B",
    "name": "Basketball Team",
    "rating": 1600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "804/B",
    "contestId": 804,
    "index": "B",
    "name": "Minimum number of steps",
    "rating": 1400,
    "tags": [
      "combinatorics",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "3/C",
    "contestId": 3,
    "index": "C",
    "name": "Tic-tac-toe",
    "rating": 1800,
    "tags": [
      "brute force",
      "games",
      "implementation"
    ]
  },
  {
    "id": "1040/B",
    "contestId": 1040,
    "index": "B",
    "name": "Shashlik Cooking",
    "rating": 1300,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "916/D",
    "contestId": 916,
    "index": "D",
    "name": "Jamie and To-do List",
    "rating": 2200,
    "tags": [
      "data structures",
      "interactive",
      "trees"
    ]
  },
  {
    "id": "1472/F",
    "contestId": 1472,
    "index": "F",
    "name": "New Year's Puzzle",
    "rating": 2100,
    "tags": [
      "brute force",
      "dp",
      "graph matchings",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "802/L",
    "contestId": 802,
    "index": "L",
    "name": "Send the Fool Further! (hard)",
    "rating": 2400,
    "tags": [
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "1665/C",
    "contestId": 1665,
    "index": "C",
    "name": "Tree Infection",
    "rating": 1600,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "222/C",
    "contestId": 222,
    "index": "C",
    "name": "Reducing Fractions",
    "rating": 1800,
    "tags": [
      "implementation",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "1498/A",
    "contestId": 1498,
    "index": "A",
    "name": "GCD Sum",
    "rating": 800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1326/G",
    "contestId": 1326,
    "index": "G",
    "name": "Spiderweb Trees",
    "rating": 3500,
    "tags": [
      "dp",
      "geometry",
      "trees"
    ]
  },
  {
    "id": "1003/D",
    "contestId": 1003,
    "index": "D",
    "name": "Coins and Queries",
    "rating": 1600,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1677/C",
    "contestId": 1677,
    "index": "C",
    "name": "Tokitsukaze and Two Colorful Tapes",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1603/F",
    "contestId": 1603,
    "index": "F",
    "name": "October 18, 2017",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "516/E",
    "contestId": 516,
    "index": "E",
    "name": "Drazil and His Happy Friends",
    "rating": 3100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1910/G",
    "contestId": 1910,
    "index": "G",
    "name": "Pool Records",
    "rating": 2700,
    "tags": [
      "*special",
      "greedy"
    ]
  },
  {
    "id": "66/C",
    "contestId": 66,
    "index": "C",
    "name": "Petya and File System",
    "rating": 1800,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "63/C",
    "contestId": 63,
    "index": "C",
    "name": "Bulls and Cows",
    "rating": 1700,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "316/D1",
    "contestId": 316,
    "index": "D1",
    "name": "PE Lesson",
    "rating": 2300,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "91/D",
    "contestId": 91,
    "index": "D",
    "name": "Grocer's Problem",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "81/B",
    "contestId": 81,
    "index": "B",
    "name": "Sequence Formatting",
    "rating": 1700,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1706/C",
    "contestId": 1706,
    "index": "C",
    "name": "Qpwoeirut And The City",
    "rating": 1400,
    "tags": [
      "dp",
      "flows",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "16/E",
    "contestId": 16,
    "index": "E",
    "name": "Fish",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "1251/F",
    "contestId": 1251,
    "index": "F",
    "name": "Red-White Fence",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "fft"
    ]
  },
  {
    "id": "1695/E",
    "contestId": 1695,
    "index": "E",
    "name": "Ambiguous Dominoes",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1832/F",
    "contestId": 1832,
    "index": "F",
    "name": "Zombies",
    "rating": 3200,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "802/H",
    "contestId": 802,
    "index": "H",
    "name": "Fake News (medium)",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "1259/D",
    "contestId": 1259,
    "index": "D",
    "name": "Let's Play the Words?",
    "rating": 1900,
    "tags": [
      "data structures",
      "hashing",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1218/G",
    "contestId": 1218,
    "index": "G",
    "name": "Alpha planetary system",
    "rating": 3000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "819/E",
    "contestId": 819,
    "index": "E",
    "name": "Mister B and Flight to the Moon",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "17/D",
    "contestId": 17,
    "index": "D",
    "name": "Notepad",
    "rating": 2400,
    "tags": [
      "number theory"
    ]
  },
  {
    "id": "198/A",
    "contestId": 198,
    "index": "A",
    "name": "About Bacteria",
    "rating": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1930/E",
    "contestId": 1930,
    "index": "E",
    "name": "2..3...4.... Wonderful! Wonderful!",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1967/D",
    "contestId": 1967,
    "index": "D",
    "name": "Long Way to be Non-decreasing",
    "rating": 2800,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "implementation",
      "shortest paths",
      "two pointers"
    ]
  },
  {
    "id": "314/D",
    "contestId": 314,
    "index": "D",
    "name": "Sereja and Straight Lines",
    "rating": 2500,
    "tags": [
      "binary search",
      "data structures",
      "geometry",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "918/A",
    "contestId": 918,
    "index": "A",
    "name": "Eleven",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1285/D",
    "contestId": 1285,
    "index": "D",
    "name": "Dr. Evil Underscores",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "greedy",
      "strings",
      "trees"
    ]
  },
  {
    "id": "682/B",
    "contestId": 682,
    "index": "B",
    "name": "Alyona and Mex",
    "rating": 1200,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "758/A",
    "contestId": 758,
    "index": "A",
    "name": "Holiday Of Equality",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "568/A",
    "contestId": 568,
    "index": "A",
    "name": "Primes or Palindromes?",
    "rating": 1600,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "559/E",
    "contestId": 559,
    "index": "E",
    "name": "Gerald and Path",
    "rating": 3000,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "id": "1717/B",
    "contestId": 1717,
    "index": "B",
    "name": "Madoka and Underground Competitions",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1514/D",
    "contestId": 1514,
    "index": "D",
    "name": "Cut and Stick",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1220/F",
    "contestId": 1220,
    "index": "F",
    "name": "Gardener Alex",
    "rating": 2700,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1280/A",
    "contestId": 1280,
    "index": "A",
    "name": "Cut and Paste",
    "rating": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1363/A",
    "contestId": 1363,
    "index": "A",
    "name": "Odd Selection",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1609/G",
    "contestId": 1609,
    "index": "G",
    "name": "A Stroll Around the Matrix",
    "rating": 3000,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1740/B",
    "contestId": 1740,
    "index": "B",
    "name": "Jumbo Extra Cheese 2",
    "rating": 800,
    "tags": [
      "geometry",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "140/D",
    "contestId": 140,
    "index": "D",
    "name": "New Year Contest",
    "rating": 1800,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1427/F",
    "contestId": 1427,
    "index": "F",
    "name": "Boring Card Game",
    "rating": 3200,
    "tags": [
      "data structures",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1850/E",
    "contestId": 1850,
    "index": "E",
    "name": "Cardboard for Pictures",
    "rating": 1100,
    "tags": [
      "binary search",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1552/E",
    "contestId": 1552,
    "index": "E",
    "name": "Colors and Intervals",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1864/E",
    "contestId": 1864,
    "index": "E",
    "name": "Guess Game",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "data structures",
      "games",
      "math",
      "probabilities",
      "sortings",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1187/A",
    "contestId": 1187,
    "index": "A",
    "name": "Stickers and Toys",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "121/C",
    "contestId": 121,
    "index": "C",
    "name": "Lucky Permutation",
    "rating": 1900,
    "tags": [
      "brute force",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "id": "1136/B",
    "contestId": 1136,
    "index": "B",
    "name": "Nastya Is Playing Computer Games",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1648/E",
    "contestId": 1648,
    "index": "E",
    "name": "Air Reform",
    "rating": 3200,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1969/E",
    "contestId": 1969,
    "index": "E",
    "name": "Unique Array",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1157/B",
    "contestId": 1157,
    "index": "B",
    "name": "Long Number",
    "rating": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1268/E",
    "contestId": 1268,
    "index": "E",
    "name": "Happy Cactus",
    "rating": 3400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1846/D",
    "contestId": 1846,
    "index": "D",
    "name": "Rudolph and Christmas Tree",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "geometry",
      "math"
    ]
  },
  {
    "id": "1815/D",
    "contestId": 1815,
    "index": "D",
    "name": "XOR Counting",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1980/F1",
    "contestId": 1980,
    "index": "F1",
    "name": "Field Division (easy version)",
    "rating": 1900,
    "tags": [
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "id": "711/A",
    "contestId": 711,
    "index": "A",
    "name": "Bus to Udayland",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1886/F",
    "contestId": 1886,
    "index": "F",
    "name": "Diamond Theft",
    "rating": 3300,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1917/A",
    "contestId": 1917,
    "index": "A",
    "name": "Least Product",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1917/E",
    "contestId": 1917,
    "index": "E",
    "name": "Construct Matrix",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1922/C",
    "contestId": 1922,
    "index": "C",
    "name": "Closest Cities",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1767/A",
    "contestId": 1767,
    "index": "A",
    "name": "Cut the Triangle",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1259/E",
    "contestId": 1259,
    "index": "E",
    "name": "Two Fairs",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1051/E",
    "contestId": 1051,
    "index": "E",
    "name": "Vasya and Big Integers",
    "rating": 2600,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1734/B",
    "contestId": 1734,
    "index": "B",
    "name": "Bright, Nice, Brilliant",
    "rating": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1091/B",
    "contestId": 1091,
    "index": "B",
    "name": "New Year and the Treasure Geolocation",
    "rating": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1917/B",
    "contestId": 1917,
    "index": "B",
    "name": "Erase First or Second Letter",
    "rating": 1100,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "dp",
      "strings"
    ]
  },
  {
    "id": "1661/B",
    "contestId": 1661,
    "index": "B",
    "name": "Getting Zero",
    "rating": 1300,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "954/D",
    "contestId": 954,
    "index": "D",
    "name": "Fight Against Traffic",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1734/A",
    "contestId": 1734,
    "index": "A",
    "name": "Select Three Sticks",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1980/F2",
    "contestId": 1980,
    "index": "F2",
    "name": "Field Division (hard version)",
    "rating": 2400,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "id": "596/D",
    "contestId": 596,
    "index": "D",
    "name": "Wilbur and Trees",
    "rating": 2300,
    "tags": [
      "dp",
      "math",
      "probabilities",
      "sortings"
    ]
  },
  {
    "id": "954/B",
    "contestId": 954,
    "index": "B",
    "name": "String Typing",
    "rating": 1400,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1679/D",
    "contestId": 1679,
    "index": "D",
    "name": "Toss a Coin to Your Graph...",
    "rating": 1900,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1661/A",
    "contestId": 1661,
    "index": "A",
    "name": "Array Balancing",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1815/F",
    "contestId": 1815,
    "index": "F",
    "name": "OH NO1 (-2-3-4)",
    "rating": 3500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "id": "1197/C",
    "contestId": 1197,
    "index": "C",
    "name": "Array Splitting",
    "rating": 1400,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1259/F",
    "contestId": 1259,
    "index": "F",
    "name": "Beautiful Rectangle",
    "rating": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1958/F",
    "contestId": 1958,
    "index": "F",
    "name": "Narrow Paths",
    "rating": 2000,
    "tags": [
      "*special",
      "combinatorics"
    ]
  },
  {
    "id": "1980/B",
    "contestId": 1980,
    "index": "B",
    "name": "Choosing Cubes",
    "rating": 800,
    "tags": [
      "sortings",
      "sortings"
    ]
  },
  {
    "id": "1913/E",
    "contestId": 1913,
    "index": "E",
    "name": "Matrix Problem",
    "rating": 2400,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "id": "1259/G",
    "contestId": 1259,
    "index": "G",
    "name": "Tree Elimination",
    "rating": 2900,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "1922/B",
    "contestId": 1922,
    "index": "B",
    "name": "Forming Triangles",
    "rating": 1200,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1095/E",
    "contestId": 1095,
    "index": "E",
    "name": "Almost Regular Bracket Sequence",
    "rating": 1900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1922/E",
    "contestId": 1922,
    "index": "E",
    "name": "Increasing Subsequences",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1118/B",
    "contestId": 1118,
    "index": "B",
    "name": "Tanya and Candies",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "863/C",
    "contestId": 863,
    "index": "C",
    "name": "1-2-3",
    "rating": 1800,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1648/A",
    "contestId": 1648,
    "index": "A",
    "name": "Weird Sum",
    "rating": 1400,
    "tags": [
      "combinatorics",
      "data structures",
      "geometry",
      "math",
      "matrices",
      "sortings"
    ]
  },
  {
    "id": "1650/G",
    "contestId": 1650,
    "index": "G",
    "name": "Counting Shortcuts",
    "rating": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1958/D",
    "contestId": 1958,
    "index": "D",
    "name": "Staircase",
    "rating": 1600,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1444/C",
    "contestId": 1444,
    "index": "C",
    "name": "Team-Building",
    "rating": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1440/B",
    "contestId": 1440,
    "index": "B",
    "name": "Sum of Medians",
    "rating": 900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1796/C",
    "contestId": 1796,
    "index": "C",
    "name": "Maximum Set",
    "rating": 1600,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "1469/A",
    "contestId": 1469,
    "index": "A",
    "name": "Regular Bracket Sequence",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1922/D",
    "contestId": 1922,
    "index": "D",
    "name": "Berserk Monsters",
    "rating": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dsu",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1347/D",
    "contestId": 1347,
    "index": "D",
    "name": "Alice, Bob and Candies",
    "rating": 1300,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1166/E",
    "contestId": 1166,
    "index": "E",
    "name": "The LCMs Must be Large",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1515/F",
    "contestId": 1515,
    "index": "F",
    "name": "Phoenix and Earthquake",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1679/C",
    "contestId": 1679,
    "index": "C",
    "name": "Rooks Defenders",
    "rating": 1400,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1153/B",
    "contestId": 1153,
    "index": "B",
    "name": "Serval and Toy Bricks",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1197/F",
    "contestId": 1197,
    "index": "F",
    "name": "Coloring Game",
    "rating": 2700,
    "tags": [
      "dp",
      "games",
      "matrices"
    ]
  },
  {
    "id": "1648/F",
    "contestId": 1648,
    "index": "F",
    "name": "Two Avenues",
    "rating": 3500,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1270/H",
    "contestId": 1270,
    "index": "H",
    "name": "Number of Components",
    "rating": 3300,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1796/E",
    "contestId": 1796,
    "index": "E",
    "name": "Colored Subgraphs",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "games",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "954/I",
    "contestId": 954,
    "index": "I",
    "name": "Yet Another String Matching Problem",
    "rating": 2200,
    "tags": [
      "fft",
      "math"
    ]
  },
  {
    "id": "1679/F",
    "contestId": 1679,
    "index": "F",
    "name": "Formalism for Formalism",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "math"
    ]
  },
  {
    "id": "1422/B",
    "contestId": 1422,
    "index": "B",
    "name": "Nice Matrix",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1444/D",
    "contestId": 1444,
    "index": "D",
    "name": "Rectangular Polyline",
    "rating": 2900,
    "tags": [
      "constructive algorithms",
      "dp",
      "geometry"
    ]
  },
  {
    "id": "671/A",
    "contestId": 671,
    "index": "A",
    "name": "Recycling Bottles",
    "rating": 1800,
    "tags": [
      "dp",
      "geometry",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1118/C",
    "contestId": 1118,
    "index": "C",
    "name": "Palindromic Matrix",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "954/E",
    "contestId": 954,
    "index": "E",
    "name": "Water Taps",
    "rating": 2000,
    "tags": [
      "binary search",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "711/B",
    "contestId": 711,
    "index": "B",
    "name": "Chris and Magic Square",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "94/B",
    "contestId": 94,
    "index": "B",
    "name": "Friends",
    "rating": 1300,
    "tags": [
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1426/A",
    "contestId": 1426,
    "index": "A",
    "name": "Floor Number",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1488/E",
    "contestId": 1488,
    "index": "E",
    "name": "Palindromic Doubles",
    "rating": 2200,
    "tags": [
      "*special",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "596/E",
    "contestId": 596,
    "index": "E",
    "name": "Wilbur and Strings",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "strings"
    ]
  },
  {
    "id": "1573/A",
    "contestId": 1573,
    "index": "A",
    "name": "Countdown",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1037/B",
    "contestId": 1037,
    "index": "B",
    "name": "Reach Median",
    "rating": 1300,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "465/B",
    "contestId": 465,
    "index": "B",
    "name": "Inbox (100500)",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "680/A",
    "contestId": 680,
    "index": "A",
    "name": "Bear and Five Cards",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1632/C",
    "contestId": 1632,
    "index": "C",
    "name": "Strange Test",
    "rating": 1600,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "id": "1792/C",
    "contestId": 1792,
    "index": "C",
    "name": "Min Max Sort",
    "rating": 1500,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "479/E",
    "contestId": 479,
    "index": "E",
    "name": "Riding in a Lift",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "329/C",
    "contestId": 329,
    "index": "C",
    "name": "Graph Reconstruction",
    "rating": 2400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1809/E",
    "contestId": 1809,
    "index": "E",
    "name": "Two Tanks",
    "rating": 2400,
    "tags": [
      "binary search",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1461/C",
    "contestId": 1461,
    "index": "C",
    "name": "Random Events",
    "rating": 1500,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1671/E",
    "contestId": 1671,
    "index": "E",
    "name": "Preorder",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "dsu",
      "hashing",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "366/A",
    "contestId": 366,
    "index": "A",
    "name": "Dima and Guards",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1060/F",
    "contestId": 1060,
    "index": "F",
    "name": "Shrinking Tree",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1542/D",
    "contestId": 1542,
    "index": "D",
    "name": "Priority Queue",
    "rating": 2200,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "1811/G2",
    "contestId": 1811,
    "index": "G2",
    "name": "Vlad and the Nice Paths (hard version)",
    "rating": 2200,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dp",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1202/D",
    "contestId": 1202,
    "index": "D",
    "name": "Print a 1337-string...",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "strings"
    ]
  },
  {
    "id": "1698/E",
    "contestId": 1698,
    "index": "E",
    "name": "PermutationForces II",
    "rating": 2300,
    "tags": [
      "brute force",
      "combinatorics",
      "greedy",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "1450/G",
    "contestId": 1450,
    "index": "G",
    "name": "Communism",
    "rating": 3500,
    "tags": [
      "bitmasks",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1023/C",
    "contestId": 1023,
    "index": "C",
    "name": "Bracket Subsequence",
    "rating": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1988/F",
    "contestId": 1988,
    "index": "F",
    "name": "Heartbeat",
    "rating": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "1988/D",
    "contestId": 1988,
    "index": "D",
    "name": "The Omnipotent Monster Killer",
    "rating": 2000,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "582/B",
    "contestId": 582,
    "index": "B",
    "name": "Once Again...",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "dp",
      "matrices"
    ]
  },
  {
    "id": "1068/C",
    "contestId": 1068,
    "index": "C",
    "name": "Colored Rooks",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "582/E",
    "contestId": 582,
    "index": "E",
    "name": "Boolean Function",
    "rating": 3000,
    "tags": [
      "bitmasks",
      "dp",
      "expression parsing"
    ]
  },
  {
    "id": "1613/F",
    "contestId": 1613,
    "index": "F",
    "name": "Tree Coloring",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "fft"
    ]
  },
  {
    "id": "1187/E",
    "contestId": 1187,
    "index": "E",
    "name": "Tree Painting",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1176/A",
    "contestId": 1176,
    "index": "A",
    "name": "Divide it!",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "975/E",
    "contestId": 975,
    "index": "E",
    "name": "Hag's Khashba",
    "rating": 2600,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "975/B",
    "contestId": 975,
    "index": "B",
    "name": "Mancala",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "475/E",
    "contestId": 475,
    "index": "E",
    "name": "Strongly Connected City 2",
    "rating": 2700,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "id": "1815/A",
    "contestId": 1815,
    "index": "A",
    "name": "Ian and Array Sorting",
    "rating": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1417/B",
    "contestId": 1417,
    "index": "B",
    "name": "Two Arrays",
    "rating": 1100,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1278/B",
    "contestId": 1278,
    "index": "B",
    "name": "A and B",
    "rating": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "613/A",
    "contestId": 613,
    "index": "A",
    "name": "Peter and Snow Blower",
    "rating": 1900,
    "tags": [
      "binary search",
      "geometry",
      "ternary search"
    ]
  },
  {
    "id": "494/C",
    "contestId": 494,
    "index": "C",
    "name": "Helping People",
    "rating": 2600,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "1763/C",
    "contestId": 1763,
    "index": "C",
    "name": "Another Array Problem",
    "rating": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "255/E",
    "contestId": 255,
    "index": "E",
    "name": "Furlo and Rublo and Game",
    "rating": 2200,
    "tags": [
      "games",
      "implementation",
      "math"
    ]
  },
  {
    "id": "746/B",
    "contestId": 746,
    "index": "B",
    "name": "Decoding",
    "rating": 900,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1671/A",
    "contestId": 1671,
    "index": "A",
    "name": "String Building",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1975/I",
    "contestId": 1975,
    "index": "I",
    "name": "Mind Bloom",
    "rating": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1975/D",
    "contestId": 1975,
    "index": "D",
    "name": "Paint the Tree",
    "rating": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "809/E",
    "contestId": 809,
    "index": "E",
    "name": "Surprise me!",
    "rating": 3100,
    "tags": [
      "divide and conquer",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "1479/E",
    "contestId": 1479,
    "index": "E",
    "name": "School Clubs",
    "rating": 3500,
    "tags": [
      "dp",
      "fft",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "id": "193/D",
    "contestId": 193,
    "index": "D",
    "name": "Two Segments",
    "rating": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1479/D",
    "contestId": 1479,
    "index": "D",
    "name": "Odd Mineral Resource",
    "rating": 2900,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "data structures",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "1746/A",
    "contestId": 1746,
    "index": "A",
    "name": "Maxmina",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "321/E",
    "contestId": 321,
    "index": "E",
    "name": "Ciel and Gondolas",
    "rating": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "1335/A",
    "contestId": 1335,
    "index": "A",
    "name": "Candies and Two Sisters",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1746/B",
    "contestId": 1746,
    "index": "B",
    "name": "Rebellion",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "383/C",
    "contestId": 383,
    "index": "C",
    "name": "Propagating tree",
    "rating": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "383/B",
    "contestId": 383,
    "index": "B",
    "name": "Volcanoes",
    "rating": 2500,
    "tags": [
      "binary search",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1335/E1",
    "contestId": 1335,
    "index": "E1",
    "name": "Three Blocks Palindrome (easy version)",
    "rating": 1700,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "1335/E2",
    "contestId": 1335,
    "index": "E2",
    "name": "Three Blocks Palindrome (hard version)",
    "rating": 1800,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "98/D",
    "contestId": 98,
    "index": "D",
    "name": "Help Monks",
    "rating": 2500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1085/D",
    "contestId": 1085,
    "index": "D",
    "name": "Minimum Diameter Tree",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1329/D",
    "contestId": 1329,
    "index": "D",
    "name": "Dreamoon Likes Strings",
    "rating": 3100,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "id": "811/E",
    "contestId": 811,
    "index": "E",
    "name": "Vladik and Entertaining Flags",
    "rating": 2600,
    "tags": [
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1675/G",
    "contestId": 1675,
    "index": "G",
    "name": "Sorting Pancakes",
    "rating": 2300,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1675/E",
    "contestId": 1675,
    "index": "E",
    "name": "Replace With the Previous, Minimize",
    "rating": 1500,
    "tags": [
      "dsu",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1711/B",
    "contestId": 1711,
    "index": "B",
    "name": "Party",
    "rating": 1300,
    "tags": [
      "brute force",
      "graphs"
    ]
  },
  {
    "id": "118/A",
    "contestId": 118,
    "index": "A",
    "name": "String Task",
    "rating": 1000,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1505/G",
    "contestId": 1505,
    "index": "G",
    "name": "Encoded message",
    "rating": 2600,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1926/F",
    "contestId": 1926,
    "index": "F",
    "name": "Vlad and Avoiding X",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1153/D",
    "contestId": 1153,
    "index": "D",
    "name": "Serval and Rooted Tree",
    "rating": 1900,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1824/B1",
    "contestId": 1824,
    "index": "B1",
    "name": "LuoTianyi and the Floating Islands (Easy Version)",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "1012/D",
    "contestId": 1012,
    "index": "D",
    "name": "AB-Strings",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "1343/C",
    "contestId": 1343,
    "index": "C",
    "name": "Alternating Subsequence",
    "rating": 1200,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "274/B",
    "contestId": 274,
    "index": "B",
    "name": "Zero Tree",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "274/C",
    "contestId": 274,
    "index": "C",
    "name": "The Last Hole!",
    "rating": 2600,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "id": "719/A",
    "contestId": 719,
    "index": "A",
    "name": "Vitya in the Countryside",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1070/L",
    "contestId": 1070,
    "index": "L",
    "name": "Odd Federalization",
    "rating": 2600,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "321/C",
    "contestId": 321,
    "index": "C",
    "name": "Ciel the Commander",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "divide and conquer",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1114/C",
    "contestId": 1114,
    "index": "C",
    "name": "Trailing Loves (or L'oeufs?)",
    "rating": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1680/F",
    "contestId": 1680,
    "index": "F",
    "name": "Lenient Vertex Cover",
    "rating": 2600,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1454/E",
    "contestId": 1454,
    "index": "E",
    "name": "Number of Simple Paths",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1108/F",
    "contestId": 1108,
    "index": "F",
    "name": "MST Unification",
    "rating": 2100,
    "tags": [
      "binary search",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1027/D",
    "contestId": 1027,
    "index": "D",
    "name": "Mouse Hunt",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "321/A",
    "contestId": 321,
    "index": "A",
    "name": "Ciel and Robot",
    "rating": 1700,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1819/C",
    "contestId": 1819,
    "index": "C",
    "name": "The Fox and the Complete Tree Traversal",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "dp",
      "implementation",
      "math",
      "trees"
    ]
  },
  {
    "id": "1896/C",
    "contestId": 1896,
    "index": "C",
    "name": "Matching Arrays",
    "rating": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "223/E",
    "contestId": 223,
    "index": "E",
    "name": "Planar Graph",
    "rating": 3000,
    "tags": [
      "flows",
      "geometry",
      "graphs"
    ]
  },
  {
    "id": "498/B",
    "contestId": 498,
    "index": "B",
    "name": "Name That Tune",
    "rating": 2400,
    "tags": [
      "dp",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "id": "498/A",
    "contestId": 498,
    "index": "A",
    "name": "Crazy Town",
    "rating": 1700,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "734/E",
    "contestId": 734,
    "index": "E",
    "name": "Anton and Tree",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "796/A",
    "contestId": 796,
    "index": "A",
    "name": "Buying A House",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "796/C",
    "contestId": 796,
    "index": "C",
    "name": "Bank Hacking",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "id": "846/F",
    "contestId": 846,
    "index": "F",
    "name": "Random Query",
    "rating": 1800,
    "tags": [
      "data structures",
      "math",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "id": "471/D",
    "contestId": 471,
    "index": "D",
    "name": "MUH and Cube Walls",
    "rating": 1800,
    "tags": [
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "1237/C2",
    "contestId": 1237,
    "index": "C2",
    "name": "Balanced Removals (Harder)",
    "rating": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "divide and conquer",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1994/A",
    "contestId": 1994,
    "index": "A",
    "name": "Diverse Game",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1237/C1",
    "contestId": 1237,
    "index": "C1",
    "name": "Balanced Removals (Easier)",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "geometry",
      "greedy"
    ]
  },
  {
    "id": "1994/F",
    "contestId": 1994,
    "index": "F",
    "name": "Stardew Valley",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1110/A",
    "contestId": 1110,
    "index": "A",
    "name": "Parity",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1110/G",
    "contestId": 1110,
    "index": "G",
    "name": "Tree-Tac-Toe",
    "rating": 3100,
    "tags": [
      "constructive algorithms",
      "games",
      "trees"
    ]
  },
  {
    "id": "1632/E1",
    "contestId": 1632,
    "index": "E1",
    "name": "Distance Tree (easy version)",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "1907/E",
    "contestId": 1907,
    "index": "E",
    "name": "Good Triples",
    "rating": 1600,
    "tags": [
      "brute force",
      "combinatorics",
      "number theory"
    ]
  },
  {
    "id": "1304/F1",
    "contestId": 1304,
    "index": "F1",
    "name": "Animal Observation (easy version)",
    "rating": 2300,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1041/C",
    "contestId": 1041,
    "index": "C",
    "name": "Coffee Break",
    "rating": 1600,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "259/B",
    "contestId": 259,
    "index": "B",
    "name": "Little Elephant and Magic Square",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "607/C",
    "contestId": 607,
    "index": "C",
    "name": "Marbles",
    "rating": 2500,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1805/D",
    "contestId": 1805,
    "index": "D",
    "name": "A Wide, Wide Graph",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1954/C",
    "contestId": 1954,
    "index": "C",
    "name": "Long Multiplication",
    "rating": 1200,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "71/A",
    "contestId": 71,
    "index": "A",
    "name": "Way Too Long Words",
    "rating": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "1709/E",
    "contestId": 1709,
    "index": "E",
    "name": "XOR Tree",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1709/D",
    "contestId": 1709,
    "index": "D",
    "name": "Rorororobot",
    "rating": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "705/B",
    "contestId": 705,
    "index": "B",
    "name": "Spider Man",
    "rating": 1100,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "940/C",
    "contestId": 940,
    "index": "C",
    "name": "Phone Numbers",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1742/F",
    "contestId": 1742,
    "index": "F",
    "name": "Smaller",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "690/C2",
    "contestId": 690,
    "index": "C2",
    "name": "Brain Network (medium)",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1819/B",
    "contestId": 1819,
    "index": "B",
    "name": "The Butcher",
    "rating": 1900,
    "tags": [
      "geometry",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "413/B",
    "contestId": 413,
    "index": "B",
    "name": "Spyke Chatting",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1819/A",
    "contestId": 1819,
    "index": "A",
    "name": "Constructive Problem",
    "rating": 1300,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1936/C",
    "contestId": 1936,
    "index": "C",
    "name": "Pokémon Arena",
    "rating": 2400,
    "tags": [
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "135/B",
    "contestId": 135,
    "index": "B",
    "name": "Rectangle and Square",
    "rating": 1600,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "id": "1494/E",
    "contestId": 1494,
    "index": "E",
    "name": "A-Z Graph",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs",
      "hashing"
    ]
  },
  {
    "id": "1617/C",
    "contestId": 1617,
    "index": "C",
    "name": "Paprika and Permutation",
    "rating": 1300,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1738/H",
    "contestId": 1738,
    "index": "H",
    "name": "Palindrome Addicts",
    "rating": 3300,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "id": "1016/G",
    "contestId": 1016,
    "index": "G",
    "name": "Appropriate Team",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1494/F",
    "contestId": 1494,
    "index": "F",
    "name": "Delete The Edges",
    "rating": 2900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1738/E",
    "contestId": 1738,
    "index": "E",
    "name": "Balance Addicts",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1264/A",
    "contestId": 1264,
    "index": "A",
    "name": "Beautiful Regional Contest",
    "rating": 1500,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "796/D",
    "contestId": 796,
    "index": "D",
    "name": "Police Stations",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "846/E",
    "contestId": 846,
    "index": "E",
    "name": "Chemistry in Berland",
    "rating": 2300,
    "tags": [
      "dfs and similar",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "815/A",
    "contestId": 815,
    "index": "A",
    "name": "Karen and Game",
    "rating": 1700,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1295/C",
    "contestId": 1295,
    "index": "C",
    "name": "Obtain The String",
    "rating": 1600,
    "tags": [
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "815/D",
    "contestId": 815,
    "index": "D",
    "name": "Karen and Cards",
    "rating": 2800,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "geometry"
    ]
  },
  {
    "id": "815/C",
    "contestId": 815,
    "index": "C",
    "name": "Karen and Supermarket",
    "rating": 2400,
    "tags": [
      "brute force",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1353/F",
    "contestId": 1353,
    "index": "F",
    "name": "Decreasing Heights",
    "rating": 2200,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "815/E",
    "contestId": 815,
    "index": "E",
    "name": "Karen and Neighborhood",
    "rating": 2900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1720/E",
    "contestId": 1720,
    "index": "E",
    "name": "Misha and Paintings",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1045/C",
    "contestId": 1045,
    "index": "C",
    "name": "Hyperspace Highways",
    "rating": 2300,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1965/E",
    "contestId": 1965,
    "index": "E",
    "name": "Connected Cubes",
    "rating": 3100,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "id": "1965/B",
    "contestId": 1965,
    "index": "B",
    "name": "Missing Subsequence Sum",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "number theory"
    ]
  },
  {
    "id": "1519/E",
    "contestId": 1519,
    "index": "E",
    "name": "Off by One",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "geometry",
      "graphs",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1519/D",
    "contestId": 1519,
    "index": "D",
    "name": "Maximum Sum of Products",
    "rating": 1600,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "679/E",
    "contestId": 679,
    "index": "E",
    "name": "Bear and Bad Powers of 42",
    "rating": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1055/E",
    "contestId": 1055,
    "index": "E",
    "name": "Segments on the Line",
    "rating": 2500,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "679/D",
    "contestId": 679,
    "index": "D",
    "name": "Bear and Chase",
    "rating": 2900,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1842/D",
    "contestId": 1842,
    "index": "D",
    "name": "Tenzing and His Animal Friends",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1965/D",
    "contestId": 1965,
    "index": "D",
    "name": "Missing Subarray Sum",
    "rating": 2900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "22/C",
    "contestId": 22,
    "index": "C",
    "name": "System Administrator",
    "rating": 1700,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "50/B",
    "contestId": 50,
    "index": "B",
    "name": "Choosing Symbol Pairs",
    "rating": 1500,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "129/B",
    "contestId": 129,
    "index": "B",
    "name": "Students and Shoelaces",
    "rating": 1200,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1730/B",
    "contestId": 1730,
    "index": "B",
    "name": "Meeting on the Line",
    "rating": 1600,
    "tags": [
      "binary search",
      "geometry",
      "greedy",
      "implementation",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "607/A",
    "contestId": 607,
    "index": "A",
    "name": "Chain Reaction",
    "rating": 1600,
    "tags": [
      "binary search",
      "dp"
    ]
  },
  {
    "id": "1304/F2",
    "contestId": 1304,
    "index": "F2",
    "name": "Animal Observation (hard version)",
    "rating": 2400,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "731/C",
    "contestId": 731,
    "index": "C",
    "name": "Socks",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1933/A",
    "contestId": 1933,
    "index": "A",
    "name": "Turtle Puzzle: Rearrange and Negate",
    "rating": 800,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "226/E",
    "contestId": 226,
    "index": "E",
    "name": "Noble Knight's Path",
    "rating": 2900,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1725/L",
    "contestId": 1725,
    "index": "L",
    "name": "Lemper Cooking Competition",
    "rating": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1991/G",
    "contestId": 1991,
    "index": "G",
    "name": "Grid Reset",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "521/E",
    "contestId": 521,
    "index": "E",
    "name": "Cycling City",
    "rating": 3100,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "700/A",
    "contestId": 700,
    "index": "A",
    "name": "As Fast As Possible",
    "rating": 1900,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "1451/F",
    "contestId": 1451,
    "index": "F",
    "name": "Nullify The Matrix",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "id": "1699/A",
    "contestId": 1699,
    "index": "A",
    "name": "The Third Three Number Problem",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "543/C",
    "contestId": 543,
    "index": "C",
    "name": "Remembering Strings",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1305/E",
    "contestId": 1305,
    "index": "E",
    "name": "Kuroni and the Score Distribution",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "427/A",
    "contestId": 427,
    "index": "A",
    "name": "Police Recruits",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1305/F",
    "contestId": 1305,
    "index": "F",
    "name": "Kuroni and the Punishment",
    "rating": 2500,
    "tags": [
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "id": "1856/C",
    "contestId": 1856,
    "index": "C",
    "name": "To Become Max",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1776/N",
    "contestId": 1776,
    "index": "N",
    "name": "Count Permutations",
    "rating": 3500,
    "tags": [
      "math"
    ]
  },
  {
    "id": "45/I",
    "contestId": 45,
    "index": "I",
    "name": "TCMCF+++",
    "rating": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1504/A",
    "contestId": 1504,
    "index": "A",
    "name": "Déjà Vu",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "1857/C",
    "contestId": 1857,
    "index": "C",
    "name": "Assembly via Minimums",
    "rating": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1978/F",
    "contestId": 1978,
    "index": "F",
    "name": "Large Graph",
    "rating": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1491/E",
    "contestId": 1491,
    "index": "E",
    "name": "Fib-tree",
    "rating": 2400,
    "tags": [
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "1641/F",
    "contestId": 1641,
    "index": "F",
    "name": "Covering Circle",
    "rating": 3500,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1478/A",
    "contestId": 1478,
    "index": "A",
    "name": "Nezzar and Colorful Balls",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "1804/B",
    "contestId": 1804,
    "index": "B",
    "name": "Vaccination",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1557/A",
    "contestId": 1557,
    "index": "A",
    "name": "Ezzat and Two Subsequences",
    "rating": 800,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1433/E",
    "contestId": 1433,
    "index": "E",
    "name": "Two Round Dances",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "510/E",
    "contestId": 510,
    "index": "E",
    "name": "Fox And Dinner",
    "rating": 2300,
    "tags": [
      "flows"
    ]
  },
  {
    "id": "311/D",
    "contestId": 311,
    "index": "D",
    "name": "Interval Cubing",
    "rating": 2600,
    "tags": [
      "data structures",
      "math"
    ]
  },
  {
    "id": "119/E",
    "contestId": 119,
    "index": "E",
    "name": "Alternative Reality",
    "rating": 2400,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "839/C",
    "contestId": 839,
    "index": "C",
    "name": "Journey",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "729/B",
    "contestId": 729,
    "index": "B",
    "name": "Spotlights",
    "rating": 1200,
    "tags": [
      "dp",
      "implementation"
    ]
  },
  {
    "id": "839/E",
    "contestId": 839,
    "index": "E",
    "name": "Mother of Dragons",
    "rating": 2700,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "762/F",
    "contestId": 762,
    "index": "F",
    "name": "Tree nesting",
    "rating": 2800,
    "tags": [
      "combinatorics",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1535/E",
    "contestId": 1535,
    "index": "E",
    "name": "Gold Transfer",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "interactive",
      "trees"
    ]
  },
  {
    "id": "1681/A",
    "contestId": 1681,
    "index": "A",
    "name": "Game with Cards",
    "rating": 800,
    "tags": [
      "games",
      "greedy"
    ]
  },
  {
    "id": "1566/E",
    "contestId": 1566,
    "index": "E",
    "name": "Buds Re-hanging",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1045/E",
    "contestId": 1045,
    "index": "E",
    "name": "Ancient civilizations",
    "rating": 3200,
    "tags": [
      "constructive algorithms",
      "geometry"
    ]
  },
  {
    "id": "1699/B",
    "contestId": 1699,
    "index": "B",
    "name": "Almost Ternary Matrix",
    "rating": 900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "matrices"
    ]
  },
  {
    "id": "1681/E",
    "contestId": 1681,
    "index": "E",
    "name": "Labyrinth Adventures",
    "rating": 2600,
    "tags": [
      "data structures",
      "dp",
      "matrices",
      "shortest paths"
    ]
  },
  {
    "id": "1186/F",
    "contestId": 1186,
    "index": "F",
    "name": "Vus the Cossack and a Graph",
    "rating": 2400,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "543/B",
    "contestId": 543,
    "index": "B",
    "name": "Destroying Roads",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1951/A",
    "contestId": 1951,
    "index": "A",
    "name": "Dual Trigger",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1681/D",
    "contestId": 1681,
    "index": "D",
    "name": "Required Length",
    "rating": 1700,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "hashing",
      "shortest paths"
    ]
  },
  {
    "id": "1064/B",
    "contestId": 1064,
    "index": "B",
    "name": "Equations of Mathematical Magic",
    "rating": 1200,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1681/C",
    "contestId": 1681,
    "index": "C",
    "name": "Double Sort",
    "rating": 1200,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1763/A",
    "contestId": 1763,
    "index": "A",
    "name": "Absolute Maximization",
    "rating": 800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "552/B",
    "contestId": 552,
    "index": "B",
    "name": "Vanya and Books",
    "rating": 1200,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1882/A",
    "contestId": 1882,
    "index": "A",
    "name": "Increasing Sequence",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "873/C",
    "contestId": 873,
    "index": "C",
    "name": "Strange Game On Matrix",
    "rating": 1600,
    "tags": [
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "508/A",
    "contestId": 508,
    "index": "A",
    "name": "Pasha and Pixels",
    "rating": 1100,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "622/E",
    "contestId": 622,
    "index": "E",
    "name": "Ants in Leaves",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "251/E",
    "contestId": 251,
    "index": "E",
    "name": "Tree and Table",
    "rating": 3000,
    "tags": [
      "dfs and similar",
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1776/F",
    "contestId": 1776,
    "index": "F",
    "name": "Train Splitting",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1776/G",
    "contestId": 1776,
    "index": "G",
    "name": "Another Wine Tasting Event",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "strings"
    ]
  },
  {
    "id": "718/C",
    "contestId": 718,
    "index": "C",
    "name": "Sasha and Array",
    "rating": 2300,
    "tags": [
      "data structures",
      "math",
      "matrices"
    ]
  },
  {
    "id": "718/D",
    "contestId": 718,
    "index": "D",
    "name": "Andrew and Chemistry",
    "rating": 2900,
    "tags": [
      "dp",
      "hashing",
      "trees"
    ]
  },
  {
    "id": "1491/G",
    "contestId": 1491,
    "index": "G",
    "name": "Switch and Flip",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "graphs",
      "math"
    ]
  },
  {
    "id": "695/A",
    "contestId": 695,
    "index": "A",
    "name": "LRU",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1659/C",
    "contestId": 1659,
    "index": "C",
    "name": "Line Empire",
    "rating": 1500,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1659/F",
    "contestId": 1659,
    "index": "F",
    "name": "Tree and Permutation Game",
    "rating": 3000,
    "tags": [
      "dfs and similar",
      "games",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "152/A",
    "contestId": 152,
    "index": "A",
    "name": "Marks",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "101/D",
    "contestId": 101,
    "index": "D",
    "name": "Castle",
    "rating": 2300,
    "tags": [
      "dp",
      "greedy",
      "probabilities",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1593/C",
    "contestId": 1593,
    "index": "C",
    "name": "Save More Mice",
    "rating": 1000,
    "tags": [
      "binary search",
      "greedy",
      "greedy"
    ]
  },
  {
    "id": "441/E",
    "contestId": 441,
    "index": "E",
    "name": "Valera and Number",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1363/B",
    "contestId": 1363,
    "index": "B",
    "name": "Subsequence Hate",
    "rating": 1400,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1363/F",
    "contestId": 1363,
    "index": "F",
    "name": "Rotating Substrings",
    "rating": 2600,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "587/E",
    "contestId": 587,
    "index": "E",
    "name": "Duff as a Queen",
    "rating": 2900,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1612/E",
    "contestId": 1612,
    "index": "E",
    "name": "Messages",
    "rating": 2000,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "probabilities",
      "sortings"
    ]
  },
  {
    "id": "27/C",
    "contestId": 27,
    "index": "C",
    "name": "Unordered Subsequence",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1396/D",
    "contestId": 1396,
    "index": "D",
    "name": "Rainbow Rectangles",
    "rating": 3300,
    "tags": [
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1396/E",
    "contestId": 1396,
    "index": "E",
    "name": "Distance Matching",
    "rating": 3200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1491/C",
    "contestId": 1491,
    "index": "C",
    "name": "Pekora and Trampoline",
    "rating": 1700,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1641/D",
    "contestId": 1641,
    "index": "D",
    "name": "Two Arrays",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "greedy",
      "hashing",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1804/E",
    "contestId": 1804,
    "index": "E",
    "name": "Routing",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "41/E",
    "contestId": 41,
    "index": "E",
    "name": "3-cycles",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "572/A",
    "contestId": 572,
    "index": "A",
    "name": "Arrays",
    "rating": 900,
    "tags": [
      "sortings"
    ]
  },
  {
    "id": "981/H",
    "contestId": 981,
    "index": "H",
    "name": "K Paths",
    "rating": 3100,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "981/C",
    "contestId": 981,
    "index": "C",
    "name": "Useful Decomposition",
    "rating": 1400,
    "tags": [
      "implementation",
      "trees"
    ]
  },
  {
    "id": "981/G",
    "contestId": 981,
    "index": "G",
    "name": "Magic multisets",
    "rating": 2500,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1747/D",
    "contestId": 1747,
    "index": "D",
    "name": "Yet Another Problem",
    "rating": 1900,
    "tags": [
      "binary search",
      "bitmasks",
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "id": "981/E",
    "contestId": 981,
    "index": "E",
    "name": "Addition on Segments",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "data structures",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "1017/A",
    "contestId": 1017,
    "index": "A",
    "name": "The Rank",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1593/F",
    "contestId": 1593,
    "index": "F",
    "name": "Red-Black Number",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "implementation",
      "math",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1853/A",
    "contestId": 1853,
    "index": "A",
    "name": "Desorting",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1710/D",
    "contestId": 1710,
    "index": "D",
    "name": "Recover the Tree",
    "rating": 3400,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "id": "222/B",
    "contestId": 222,
    "index": "B",
    "name": "Cosmic Tables",
    "rating": 1300,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1146/F",
    "contestId": 1146,
    "index": "F",
    "name": "Leaf Partition",
    "rating": 2500,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "1464/F",
    "contestId": 1464,
    "index": "F",
    "name": "My Beautiful Madness",
    "rating": 3500,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "660/E",
    "contestId": 660,
    "index": "E",
    "name": "Different Subsets For All Tuples",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1500/D",
    "contestId": 1500,
    "index": "D",
    "name": "Tiles for Bathroom",
    "rating": 2900,
    "tags": [
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1363/E",
    "contestId": 1363,
    "index": "E",
    "name": "Tree Shuffling",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "280/C",
    "contestId": 280,
    "index": "C",
    "name": "Game on Tree",
    "rating": 2200,
    "tags": [
      "implementation",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "1142/B",
    "contestId": 1142,
    "index": "B",
    "name": "Lynyrd Skynyrd",
    "rating": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "1109/C",
    "contestId": 1109,
    "index": "C",
    "name": "Sasha and a Patient Friend",
    "rating": 2800,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1829/B",
    "contestId": 1829,
    "index": "B",
    "name": "Blank Space",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1829/E",
    "contestId": 1829,
    "index": "E",
    "name": "The Lakes",
    "rating": 1100,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "985/F",
    "contestId": 985,
    "index": "F",
    "name": "Isomorphic Strings",
    "rating": 2300,
    "tags": [
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1491/H",
    "contestId": 1491,
    "index": "H",
    "name": "Yuezheng Ling and Dynamic Tree",
    "rating": 3400,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "821/D",
    "contestId": 821,
    "index": "D",
    "name": "Okabe and City",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "923/F",
    "contestId": 923,
    "index": "F",
    "name": "Public Service",
    "rating": 3200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1685/D1",
    "contestId": 1685,
    "index": "D1",
    "name": "Permutation Weight (Easy Version)",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "id": "1685/D2",
    "contestId": 1685,
    "index": "D2",
    "name": "Permutation Weight (Hard Version)",
    "rating": 3500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "23/A",
    "contestId": 23,
    "index": "A",
    "name": "You're Given a String...",
    "rating": 1200,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "23/E",
    "contestId": 23,
    "index": "E",
    "name": "Tree",
    "rating": 2500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1670/C",
    "contestId": 1670,
    "index": "C",
    "name": "Where is the Pizza?",
    "rating": 1400,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "id": "633/F",
    "contestId": 633,
    "index": "F",
    "name": "The Chocolate Spree",
    "rating": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1500/C",
    "contestId": 1500,
    "index": "C",
    "name": "Matrix Sorting",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1721/D",
    "contestId": 1721,
    "index": "D",
    "name": "Maximum AND",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "dfs and similar",
      "divide and conquer",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "825/D",
    "contestId": 825,
    "index": "D",
    "name": "Suitable Replacement",
    "rating": 1500,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1893/B",
    "contestId": 1893,
    "index": "B",
    "name": "Neutral Tonality",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1995/B2",
    "contestId": 1995,
    "index": "B2",
    "name": "Bouquet (Hard Version)",
    "rating": 1700,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1708/A",
    "contestId": 1708,
    "index": "A",
    "name": "Difference Operations",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "213/B",
    "contestId": 213,
    "index": "B",
    "name": "Numbers",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1627/C",
    "contestId": 1627,
    "index": "C",
    "name": "Not Assigning",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "547/D",
    "contestId": 547,
    "index": "D",
    "name": "Mike and Fish",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "2/B",
    "contestId": 2,
    "index": "B",
    "name": "The least round way",
    "rating": 2000,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1495/A",
    "contestId": 1495,
    "index": "A",
    "name": "Diamond Miner",
    "rating": 1200,
    "tags": [
      "geometry",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1616/F",
    "contestId": 1616,
    "index": "F",
    "name": "Tricolor Triangles",
    "rating": 2900,
    "tags": [
      "brute force",
      "graphs",
      "math",
      "matrices"
    ]
  },
  {
    "id": "1616/C",
    "contestId": 1616,
    "index": "C",
    "name": "Representative Edges",
    "rating": 1500,
    "tags": [
      "brute force",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1553/A",
    "contestId": 1553,
    "index": "A",
    "name": "Digits Sum",
    "rating": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "315/B",
    "contestId": 315,
    "index": "B",
    "name": "Sereja and Array",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1437/G",
    "contestId": 1437,
    "index": "G",
    "name": "Death DBMS",
    "rating": 2600,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings",
      "trees"
    ]
  },
  {
    "id": "735/B",
    "contestId": 735,
    "index": "B",
    "name": "Urbanization",
    "rating": 1100,
    "tags": [
      "greedy",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "633/G",
    "contestId": 633,
    "index": "G",
    "name": "Yash And Trees",
    "rating": 2800,
    "tags": [
      "bitmasks",
      "data structures",
      "dfs and similar",
      "math",
      "number theory"
    ]
  },
  {
    "id": "196/E",
    "contestId": 196,
    "index": "E",
    "name": "Opening Portals",
    "rating": 2600,
    "tags": [
      "dsu",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1330/A",
    "contestId": 1330,
    "index": "A",
    "name": "Dreamoon and Ranking Collection",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1783/F",
    "contestId": 1783,
    "index": "F",
    "name": "Double Sort II",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "flows",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "id": "59/E",
    "contestId": 59,
    "index": "E",
    "name": "Shortest Path",
    "rating": 2000,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1044/D",
    "contestId": 1044,
    "index": "D",
    "name": "Deduction Queries",
    "rating": 2400,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "id": "1254/D",
    "contestId": 1254,
    "index": "D",
    "name": "Tree Queries",
    "rating": 2700,
    "tags": [
      "data structures",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "222/D",
    "contestId": 222,
    "index": "D",
    "name": "Olympiad",
    "rating": 1900,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1207/B",
    "contestId": 1207,
    "index": "B",
    "name": "Square Filling",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "766/C",
    "contestId": 766,
    "index": "C",
    "name": "Mahmoud and a Message",
    "rating": 1700,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "691/D",
    "contestId": 691,
    "index": "D",
    "name": "Swaps in Permutation",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "dsu",
      "math"
    ]
  },
  {
    "id": "999/E",
    "contestId": 999,
    "index": "E",
    "name": "Reachability from the Capital",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1627/A",
    "contestId": 1627,
    "index": "A",
    "name": "Not Shading",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1981/F",
    "contestId": 1981,
    "index": "F",
    "name": "Turtle and Paths on a Tree",
    "rating": 3000,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "id": "294/E",
    "contestId": 294,
    "index": "E",
    "name": "Shaass the Great",
    "rating": 2300,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "961/F",
    "contestId": 961,
    "index": "F",
    "name": "k-substrings",
    "rating": 2700,
    "tags": [
      "binary search",
      "hashing",
      "string suffix structures"
    ]
  },
  {
    "id": "1984/H",
    "contestId": 1984,
    "index": "H",
    "name": "Tower Capturing",
    "rating": 3300,
    "tags": [
      "combinatorics",
      "dp",
      "geometry"
    ]
  },
  {
    "id": "329/E",
    "contestId": 329,
    "index": "E",
    "name": "Evil",
    "rating": 3100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1809/A",
    "contestId": 1809,
    "index": "A",
    "name": "Garland",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1426/B",
    "contestId": 1426,
    "index": "B",
    "name": "Symmetric Matrix",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "519/D",
    "contestId": 519,
    "index": "D",
    "name": "A and B and Interesting Substrings",
    "rating": 1800,
    "tags": [
      "data structures",
      "dp",
      "two pointers"
    ]
  },
  {
    "id": "1763/F",
    "contestId": 1763,
    "index": "F",
    "name": "Edge Queries",
    "rating": 3000,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1304/E",
    "contestId": 1304,
    "index": "E",
    "name": "1-Trees and Queries",
    "rating": 2000,
    "tags": [
      "data structures",
      "dfs and similar",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "1984/F",
    "contestId": 1984,
    "index": "F",
    "name": "Reconstruction",
    "rating": 2500,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "id": "1006/F",
    "contestId": 1006,
    "index": "F",
    "name": "Xor-Paths",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "1475/C",
    "contestId": 1475,
    "index": "C",
    "name": "Ball in Berland",
    "rating": 1400,
    "tags": [
      "combinatorics",
      "graphs",
      "math"
    ]
  },
  {
    "id": "626/G",
    "contestId": 626,
    "index": "G",
    "name": "Raffles",
    "rating": 3100,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1856/B",
    "contestId": 1856,
    "index": "B",
    "name": "Good Arrays",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1842/E",
    "contestId": 1842,
    "index": "E",
    "name": "Tenzing and Triangle",
    "rating": 2300,
    "tags": [
      "data structures",
      "dp",
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1012/E",
    "contestId": 1012,
    "index": "E",
    "name": "Cycle sort",
    "rating": 3100,
    "tags": [
      "dsu",
      "math"
    ]
  },
  {
    "id": "797/B",
    "contestId": 797,
    "index": "B",
    "name": "Odd sum",
    "rating": 1400,
    "tags": [
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "48/B",
    "contestId": 48,
    "index": "B",
    "name": "Land Lot",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "730/G",
    "contestId": 730,
    "index": "G",
    "name": "Car Repair Shop",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "183/C",
    "contestId": 183,
    "index": "C",
    "name": "Cyclic Coloring",
    "rating": 2200,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "id": "1321/A",
    "contestId": 1321,
    "index": "A",
    "name": "Contest for Robots",
    "rating": 900,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1990/D",
    "contestId": 1990,
    "index": "D",
    "name": "Grid Puzzle",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "353/E",
    "contestId": 353,
    "index": "E",
    "name": "Antichain",
    "rating": 2200,
    "tags": [
      "dp",
      "graph matchings",
      "greedy"
    ]
  },
  {
    "id": "1216/F",
    "contestId": 1216,
    "index": "F",
    "name": "Wi-Fi",
    "rating": 2100,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "68/E",
    "contestId": 68,
    "index": "E",
    "name": "Contact",
    "rating": 2900,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1499/D",
    "contestId": 1499,
    "index": "D",
    "name": "The Number of Pairs",
    "rating": 2100,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "461/B",
    "contestId": 461,
    "index": "B",
    "name": "Appleman and Tree",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1294/E",
    "contestId": 1294,
    "index": "E",
    "name": "Obtain a Permutation",
    "rating": 1900,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "814/E",
    "contestId": 814,
    "index": "E",
    "name": "An unavoidable detour for home",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1372/D",
    "contestId": 1372,
    "index": "D",
    "name": "Omkar and Circle",
    "rating": 2100,
    "tags": [
      "brute force",
      "dp",
      "games",
      "greedy"
    ]
  },
  {
    "id": "1735/D",
    "contestId": 1735,
    "index": "D",
    "name": "Meta-set",
    "rating": 1700,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "hashing",
      "math"
    ]
  },
  {
    "id": "1118/F1",
    "contestId": 1118,
    "index": "F1",
    "name": "Tree Cutting (Easy Version)",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1842/A",
    "contestId": 1842,
    "index": "A",
    "name": "Tenzing and Tsondu",
    "rating": 800,
    "tags": [
      "games",
      "math"
    ]
  },
  {
    "id": "873/F",
    "contestId": 873,
    "index": "F",
    "name": "Forbidden Indices",
    "rating": 2400,
    "tags": [
      "dsu",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "271/D",
    "contestId": 271,
    "index": "D",
    "name": "Good Substrings",
    "rating": 1800,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "id": "1352/E",
    "contestId": 1352,
    "index": "E",
    "name": "Special Elements",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1772/D",
    "contestId": 1772,
    "index": "D",
    "name": "Absolute Sorting",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "825/E",
    "contestId": 825,
    "index": "E",
    "name": "Minimal Labels",
    "rating": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1573/B",
    "contestId": 1573,
    "index": "B",
    "name": "Swaps",
    "rating": 1400,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1975/C",
    "contestId": 1975,
    "index": "C",
    "name": "Chamo and Mocha's Array",
    "rating": 1200,
    "tags": [
      "binary search",
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "926/C",
    "contestId": 926,
    "index": "C",
    "name": "Is This a Zebra?",
    "rating": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "32/C",
    "contestId": 32,
    "index": "C",
    "name": "Flea",
    "rating": 1700,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1728/D",
    "contestId": 1728,
    "index": "D",
    "name": "Letter Picking",
    "rating": 1800,
    "tags": [
      "constructive algorithms",
      "dp",
      "games",
      "two pointers"
    ]
  },
  {
    "id": "567/E",
    "contestId": 567,
    "index": "E",
    "name": "President and Roads",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "graphs",
      "hashing",
      "shortest paths"
    ]
  },
  {
    "id": "1948/E",
    "contestId": 1948,
    "index": "E",
    "name": "Clique Partition",
    "rating": 2100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "412/D",
    "contestId": 412,
    "index": "D",
    "name": "Giving Awards",
    "rating": 2000,
    "tags": [
      "dfs and similar"
    ]
  },
  {
    "id": "883/B",
    "contestId": 883,
    "index": "B",
    "name": "Berland Army",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1719/B",
    "contestId": 1719,
    "index": "B",
    "name": "Mathematical Circus",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "167/D",
    "contestId": 167,
    "index": "D",
    "name": "Wizards and Roads",
    "rating": 3000,
    "tags": [
      "data structures",
      "divide and conquer",
      "graph matchings",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1735/F",
    "contestId": 1735,
    "index": "F",
    "name": "Pebbles and Beads",
    "rating": 2900,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "id": "1488/I",
    "contestId": 1488,
    "index": "I",
    "name": "Demonic Invasion",
    "rating": 3100,
    "tags": [
      "*special",
      "flows"
    ]
  },
  {
    "id": "1245/E",
    "contestId": 1245,
    "index": "E",
    "name": "Hyakugoku and Ladders",
    "rating": 2300,
    "tags": [
      "dp",
      "probabilities",
      "shortest paths"
    ]
  },
  {
    "id": "1995/E1",
    "contestId": 1995,
    "index": "E1",
    "name": "Let Me Teach You a Lesson (Easy Version)",
    "rating": 2700,
    "tags": [
      "2-sat",
      "data structures",
      "dp",
      "matrices",
      "two pointers"
    ]
  },
  {
    "id": "1167/E",
    "contestId": 1167,
    "index": "E",
    "name": "Range Deleting",
    "rating": 2100,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "two pointers"
    ]
  },
  {
    "id": "1278/C",
    "contestId": 1278,
    "index": "C",
    "name": "Berry Jam",
    "rating": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1167/G",
    "contestId": 1167,
    "index": "G",
    "name": "Low Budget Inception",
    "rating": 3100,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "id": "187/C",
    "contestId": 187,
    "index": "C",
    "name": "Weak Memory",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "dsu"
    ]
  },
  {
    "id": "730/K",
    "contestId": 730,
    "index": "K",
    "name": "Roads Orientation Problem",
    "rating": 3200,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "856/C",
    "contestId": 856,
    "index": "C",
    "name": "Eleventh Birthday",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "508/E",
    "contestId": 508,
    "index": "E",
    "name": "Arthur and Brackets",
    "rating": 2200,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "36/D",
    "contestId": 36,
    "index": "D",
    "name": "New Game with a Chess Piece",
    "rating": 2300,
    "tags": [
      "games"
    ]
  },
  {
    "id": "1730/A",
    "contestId": 1730,
    "index": "A",
    "name": "Planets",
    "rating": 800,
    "tags": [
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1627/D",
    "contestId": 1627,
    "index": "D",
    "name": "Not Adding",
    "rating": 1900,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1593/E",
    "contestId": 1593,
    "index": "E",
    "name": "Gardener and Tree",
    "rating": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "187/A",
    "contestId": 187,
    "index": "A",
    "name": "Permutations",
    "rating": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "426/B",
    "contestId": 426,
    "index": "B",
    "name": "Sereja and Mirroring",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1990/F",
    "contestId": 1990,
    "index": "F",
    "name": "Polygonal Segments",
    "rating": 2800,
    "tags": [
      "brute force",
      "data structures",
      "divide and conquer",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1906/E",
    "contestId": 1906,
    "index": "E",
    "name": "Merge Not Sort",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "id": "1450/D",
    "contestId": 1450,
    "index": "D",
    "name": "Rating Compression",
    "rating": 1800,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "626/D",
    "contestId": 626,
    "index": "D",
    "name": "Jerry's Protest",
    "rating": 1800,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "1824/E",
    "contestId": 1824,
    "index": "E",
    "name": "LuoTianyi and Cartridge",
    "rating": 3500,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1933/F",
    "contestId": 1933,
    "index": "F",
    "name": "Turtle Mission: Robot and the Earthquake",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1455/D",
    "contestId": 1455,
    "index": "D",
    "name": "Sequence and Swaps",
    "rating": 1600,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1334/G",
    "contestId": 1334,
    "index": "G",
    "name": "Substring Search",
    "rating": 2900,
    "tags": [
      "bitmasks",
      "brute force",
      "fft"
    ]
  },
  {
    "id": "1906/J",
    "contestId": 1906,
    "index": "J",
    "name": "Count BFS Graph",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp"
    ]
  },
  {
    "id": "1787/E",
    "contestId": 1787,
    "index": "E",
    "name": "The Harmonization of XOR",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "173/C",
    "contestId": 173,
    "index": "C",
    "name": "Spiral Maximum",
    "rating": 1900,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "959/C",
    "contestId": 959,
    "index": "C",
    "name": "Mahmoud and Ehab and the wrong algorithm",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "id": "1203/B",
    "contestId": 1203,
    "index": "B",
    "name": "Equal Rectangles",
    "rating": 1200,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1156/D",
    "contestId": 1156,
    "index": "D",
    "name": "0-1-Tree",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dp",
      "dsu",
      "trees"
    ]
  },
  {
    "id": "1721/C",
    "contestId": 1721,
    "index": "C",
    "name": "Min-Max Array Transformation",
    "rating": 1400,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "883/H",
    "contestId": 883,
    "index": "H",
    "name": "Palindromic Cut",
    "rating": 1800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1553/I",
    "contestId": 1553,
    "index": "I",
    "name": "Stairs",
    "rating": 3400,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "1800/B",
    "contestId": 1800,
    "index": "B",
    "name": "Count the Number of Pairs",
    "rating": 1000,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "315/A",
    "contestId": 315,
    "index": "A",
    "name": "Sereja and Bottles",
    "rating": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1366/C",
    "contestId": 1366,
    "index": "C",
    "name": "Palindromic Paths",
    "rating": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "129/A",
    "contestId": 129,
    "index": "A",
    "name": "Cookies",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1948/B",
    "contestId": 1948,
    "index": "B",
    "name": "Array Fix",
    "rating": 1100,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1406/C",
    "contestId": 1406,
    "index": "C",
    "name": "Link Cut Centroids",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "818/G",
    "contestId": 818,
    "index": "G",
    "name": "Four Melodies",
    "rating": 2600,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "id": "352/A",
    "contestId": 352,
    "index": "A",
    "name": "Jeff and Digits",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1294/F",
    "contestId": 1294,
    "index": "F",
    "name": "Three Paths on a Tree",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1582/B",
    "contestId": 1582,
    "index": "B",
    "name": "Luntik and Subsequences",
    "rating": 900,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "264/A",
    "contestId": 264,
    "index": "A",
    "name": "Escape from Stones",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1582/C",
    "contestId": 1582,
    "index": "C",
    "name": "Grandma Capa Knits a Scarf",
    "rating": 1200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "1111/B",
    "contestId": 1111,
    "index": "B",
    "name": "Average Superhero Gang Power",
    "rating": 1700,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "948/A",
    "contestId": 948,
    "index": "A",
    "name": "Protect Sheep",
    "rating": 900,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1470/E",
    "contestId": 1470,
    "index": "E",
    "name": "Strange Permutation",
    "rating": 3200,
    "tags": [
      "binary search",
      "combinatorics",
      "data structures",
      "dp",
      "graphs",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1923/A",
    "contestId": 1923,
    "index": "A",
    "name": "Moving Chips",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1547/G",
    "contestId": 1547,
    "index": "G",
    "name": "How Many Paths?",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "818/B",
    "contestId": 818,
    "index": "B",
    "name": "Permutation Game",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "862/B",
    "contestId": 862,
    "index": "B",
    "name": "Mahmoud and Ehab and the bipartiteness",
    "rating": 1300,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "494/A",
    "contestId": 494,
    "index": "A",
    "name": "Treasure",
    "rating": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "887/B",
    "contestId": 887,
    "index": "B",
    "name": "Cubes for Masha",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1970/C1",
    "contestId": 1970,
    "index": "C1",
    "name": "Game on Tree (Easy)",
    "rating": 1400,
    "tags": [
      "games"
    ]
  },
  {
    "id": "1552/C",
    "contestId": 1552,
    "index": "C",
    "name": "Maximize the Intersections",
    "rating": 1800,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "geometry",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1324/A",
    "contestId": 1324,
    "index": "A",
    "name": "Yet Another Tetris Problem",
    "rating": 900,
    "tags": [
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "1441/B",
    "contestId": 1441,
    "index": "B",
    "name": "Graph Transpositions",
    "rating": 2400,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "772/D",
    "contestId": 772,
    "index": "D",
    "name": "Varying Kibibits",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "363/E",
    "contestId": 363,
    "index": "E",
    "name": "Two Circles",
    "rating": 2500,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "518/C",
    "contestId": 518,
    "index": "C",
    "name": "Anya and Smartphone",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1547/F",
    "contestId": 1547,
    "index": "F",
    "name": "Array Stabilization (GCD version)",
    "rating": 1900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "divide and conquer",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1814/A",
    "contestId": 1814,
    "index": "A",
    "name": "Coins",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1876/D",
    "contestId": 1876,
    "index": "D",
    "name": "Lexichromatography",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dsu",
      "graphs",
      "two pointers"
    ]
  },
  {
    "id": "1032/D",
    "contestId": 1032,
    "index": "D",
    "name": "Barcelonian Distance",
    "rating": 1900,
    "tags": [
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "1525/F",
    "contestId": 1525,
    "index": "F",
    "name": "Goblins And Gnomes",
    "rating": 2800,
    "tags": [
      "brute force",
      "dp",
      "flows",
      "graph matchings"
    ]
  },
  {
    "id": "633/E",
    "contestId": 633,
    "index": "E",
    "name": "Startup Funding",
    "rating": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "probabilities",
      "two pointers"
    ]
  },
  {
    "id": "772/A",
    "contestId": 772,
    "index": "A",
    "name": "Voltage Keepsake",
    "rating": 1800,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "1468/A",
    "contestId": 1468,
    "index": "A",
    "name": "LaIS",
    "rating": 2200,
    "tags": [
      "data structures",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1776/A",
    "contestId": 1776,
    "index": "A",
    "name": "Walking Boy",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1324/F",
    "contestId": 1324,
    "index": "F",
    "name": "Maximum White Subtree",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1814/F",
    "contestId": 1814,
    "index": "F",
    "name": "Communication Towers",
    "rating": 2700,
    "tags": [
      "brute force",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "id": "1324/B",
    "contestId": 1324,
    "index": "B",
    "name": "Yet Another Palindrome Problem",
    "rating": 1100,
    "tags": [
      "brute force",
      "strings"
    ]
  },
  {
    "id": "1481/D",
    "contestId": 1481,
    "index": "D",
    "name": "AB Graph",
    "rating": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "518/B",
    "contestId": 518,
    "index": "B",
    "name": "Tanya and Postcard",
    "rating": 1400,
    "tags": [
      "greedy",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1633/E",
    "contestId": 1633,
    "index": "E",
    "name": "Spanning Tree Queries",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "793/C",
    "contestId": 793,
    "index": "C",
    "name": "Mice problem",
    "rating": 2300,
    "tags": [
      "geometry",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1468/N",
    "contestId": 1468,
    "index": "N",
    "name": "Waste Sorting",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1315/C",
    "contestId": 1315,
    "index": "C",
    "name": "Restoring Permutation",
    "rating": 1200,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "301/D",
    "contestId": 301,
    "index": "D",
    "name": "Yaroslav and Divisors",
    "rating": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1704/B",
    "contestId": 1704,
    "index": "B",
    "name": "Luke is a Foodie",
    "rating": 1000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "627/B",
    "contestId": 627,
    "index": "B",
    "name": "Factory Repairs",
    "rating": 1700,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1839/A",
    "contestId": 1839,
    "index": "A",
    "name": "The Good Array",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1627/F",
    "contestId": 1627,
    "index": "F",
    "name": "Not Splitting",
    "rating": 2700,
    "tags": [
      "geometry",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "1290/C",
    "contestId": 1290,
    "index": "C",
    "name": "Prefix Enlightenment",
    "rating": 2400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "444/A",
    "contestId": 444,
    "index": "A",
    "name": "DZY Loves Physics",
    "rating": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1061/E",
    "contestId": 1061,
    "index": "E",
    "name": "Politics",
    "rating": 2600,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "id": "1481/C",
    "contestId": 1481,
    "index": "C",
    "name": "Fence Painting",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1468/D",
    "contestId": 1468,
    "index": "D",
    "name": "Firecrackers",
    "rating": 1700,
    "tags": [
      "binary search",
      "sortings"
    ]
  },
  {
    "id": "1968/F",
    "contestId": 1968,
    "index": "F",
    "name": "Equal XOR Segments",
    "rating": 1800,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1797/D",
    "contestId": 1797,
    "index": "D",
    "name": "Li Hua and Tree",
    "rating": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dp",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1324/D",
    "contestId": 1324,
    "index": "D",
    "name": "Pair of Topics",
    "rating": 1400,
    "tags": [
      "binary search",
      "data structures",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "902/B",
    "contestId": 902,
    "index": "B",
    "name": "Coloring a Tree",
    "rating": 1200,
    "tags": [
      "dfs and similar",
      "dsu",
      "greedy"
    ]
  },
  {
    "id": "177/A1",
    "contestId": 177,
    "index": "A1",
    "name": "Good Matrix Elements",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1583/A",
    "contestId": 1583,
    "index": "A",
    "name": "Windblume Ode",
    "rating": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1217/D",
    "contestId": 1217,
    "index": "D",
    "name": "Coloring Edges",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1553/G",
    "contestId": 1553,
    "index": "G",
    "name": "Common Divisor Graph",
    "rating": 2700,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dsu",
      "graphs",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "id": "670/D2",
    "contestId": 670,
    "index": "D2",
    "name": "Magic Powder - 2",
    "rating": 1500,
    "tags": [
      "binary search",
      "implementation"
    ]
  },
  {
    "id": "1468/J",
    "contestId": 1468,
    "index": "J",
    "name": "Road Reform",
    "rating": 1800,
    "tags": [
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1036/G",
    "contestId": 1036,
    "index": "G",
    "name": "Sources and Sinks",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar"
    ]
  },
  {
    "id": "1583/F",
    "contestId": 1583,
    "index": "F",
    "name": "Defender of Childhood Dreams",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "divide and conquer"
    ]
  },
  {
    "id": "1704/E",
    "contestId": 1704,
    "index": "E",
    "name": "Count Seconds",
    "rating": 2200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "id": "182/A",
    "contestId": 182,
    "index": "A",
    "name": "Battlefield",
    "rating": 2200,
    "tags": [
      "geometry",
      "graphs",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "1217/C",
    "contestId": 1217,
    "index": "C",
    "name": "The Number Of Good Substrings",
    "rating": 1700,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force"
    ]
  },
  {
    "id": "933/A",
    "contestId": 933,
    "index": "A",
    "name": "A Twisty Movement",
    "rating": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1119/B",
    "contestId": 1119,
    "index": "B",
    "name": "Alyona and a Narrow Fridge",
    "rating": 1300,
    "tags": [
      "binary search",
      "flows",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1338/B",
    "contestId": 1338,
    "index": "B",
    "name": "Edge Weight Assignment",
    "rating": 1800,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "id": "1342/B",
    "contestId": 1342,
    "index": "B",
    "name": "Binary Period",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "strings"
    ]
  },
  {
    "id": "1007/D",
    "contestId": 1007,
    "index": "D",
    "name": "Ants",
    "rating": 3200,
    "tags": [
      "2-sat",
      "data structures",
      "trees"
    ]
  },
  {
    "id": "725/D",
    "contestId": 725,
    "index": "D",
    "name": "Contest Balloons",
    "rating": 1800,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1539/B",
    "contestId": 1539,
    "index": "B",
    "name": "Love Song",
    "rating": 800,
    "tags": [
      "dp",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1342/F",
    "contestId": 1342,
    "index": "F",
    "name": "Make It Ascending",
    "rating": 3000,
    "tags": [
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "id": "645/G",
    "contestId": 645,
    "index": "G",
    "name": "Armistice Area Apportionment",
    "rating": 3200,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "id": "254/C",
    "contestId": 254,
    "index": "C",
    "name": "Anagram",
    "rating": 1800,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1338/D",
    "contestId": 1338,
    "index": "D",
    "name": "Nested Rubber Bands",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "437/D",
    "contestId": 437,
    "index": "D",
    "name": "The Child and Zoo",
    "rating": 1900,
    "tags": [
      "dsu",
      "sortings"
    ]
  },
  {
    "id": "1217/E",
    "contestId": 1217,
    "index": "E",
    "name": "Sum Queries?",
    "rating": 2300,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "743/E",
    "contestId": 743,
    "index": "E",
    "name": "Vladik and cards",
    "rating": 2200,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "dp"
    ]
  },
  {
    "id": "1119/G",
    "contestId": 1119,
    "index": "G",
    "name": "Get Ready for the Battle",
    "rating": 3100,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "402/E",
    "contestId": 402,
    "index": "E",
    "name": "Strictly Positive Matrix",
    "rating": 2200,
    "tags": [
      "graphs",
      "math"
    ]
  },
  {
    "id": "1468/B",
    "contestId": 1468,
    "index": "B",
    "name": "Bakery",
    "rating": 2900,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "id": "1338/C",
    "contestId": 1338,
    "index": "C",
    "name": "Perfect Triples",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "divide and conquer",
      "math"
    ]
  },
  {
    "id": "933/D",
    "contestId": 933,
    "index": "D",
    "name": "A Creative Cutout",
    "rating": 2900,
    "tags": [
      "brute force",
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "553/B",
    "contestId": 553,
    "index": "B",
    "name": "Kyoya and Permutation",
    "rating": 1900,
    "tags": [
      "binary search",
      "combinatorics",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1244/E",
    "contestId": 1244,
    "index": "E",
    "name": "Minimizing Difference",
    "rating": 2000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "sortings",
      "ternary search",
      "two pointers"
    ]
  },
  {
    "id": "402/C",
    "contestId": 402,
    "index": "C",
    "name": "Searching for Graph",
    "rating": 1500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "1637/D",
    "contestId": 1637,
    "index": "D",
    "name": "Yet Another Minimization Problem",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1633/C",
    "contestId": 1633,
    "index": "C",
    "name": "Kill the Monster",
    "rating": 1100,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "553/D",
    "contestId": 553,
    "index": "D",
    "name": "Nudist Beach",
    "rating": 2300,
    "tags": [
      "binary search",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1700/F",
    "contestId": 1700,
    "index": "F",
    "name": "Puzzle",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "120/D",
    "contestId": 120,
    "index": "D",
    "name": "Three Sons",
    "rating": 1400,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1883/C",
    "contestId": 1883,
    "index": "C",
    "name": "Raspberries",
    "rating": 1000,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1637/C",
    "contestId": 1637,
    "index": "C",
    "name": "Andrew and Stones",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "708/C",
    "contestId": 708,
    "index": "C",
    "name": "Centroids",
    "rating": 2300,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1883/E",
    "contestId": 1883,
    "index": "E",
    "name": "Look Back",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "id": "1284/F",
    "contestId": 1284,
    "index": "F",
    "name": "New Year and Social Network",
    "rating": 3200,
    "tags": [
      "data structures",
      "graph matchings",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "id": "1572/A",
    "contestId": 1572,
    "index": "A",
    "name": "Book",
    "rating": 1800,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dp",
      "graphs",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1883/G1",
    "contestId": 1883,
    "index": "G1",
    "name": "Dances (Easy version)",
    "rating": 1400,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1883/G2",
    "contestId": 1883,
    "index": "G2",
    "name": "Dances (Hard Version)",
    "rating": 1900,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1119/C",
    "contestId": 1119,
    "index": "C",
    "name": "Ramesses and Corner Inversion",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1927/B",
    "contestId": 1927,
    "index": "B",
    "name": "Following the String",
    "rating": 900,
    "tags": [
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1054/H",
    "contestId": 1054,
    "index": "H",
    "name": "Epic Convolution",
    "rating": 3500,
    "tags": [
      "chinese remainder theorem",
      "fft",
      "math",
      "number theory"
    ]
  },
  {
    "id": "449/B",
    "contestId": 449,
    "index": "B",
    "name": "Jzzhu and Cities",
    "rating": 2000,
    "tags": [
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "232/E",
    "contestId": 232,
    "index": "E",
    "name": "Quick Tortoise",
    "rating": 3000,
    "tags": [
      "bitmasks",
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "1342/D",
    "contestId": 1342,
    "index": "D",
    "name": "Multiple Testcases",
    "rating": 1900,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1718/E",
    "contestId": 1718,
    "index": "E",
    "name": "Impressionism",
    "rating": 3500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1311/C",
    "contestId": 1311,
    "index": "C",
    "name": "Perform the Combo",
    "rating": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1979/B",
    "contestId": 1979,
    "index": "B",
    "name": "XOR Sequences",
    "rating": 1000,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "id": "1354/C2",
    "contestId": 1354,
    "index": "C2",
    "name": "Not So Simple Polygon Embedding",
    "rating": 2000,
    "tags": [
      "binary search",
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "id": "51/F",
    "contestId": 51,
    "index": "F",
    "name": "Caterpillar",
    "rating": 2800,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1927/G",
    "contestId": 1927,
    "index": "G",
    "name": "Paint Charges",
    "rating": 2300,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1821/B",
    "contestId": 1821,
    "index": "B",
    "name": "Sort the Subarray",
    "rating": 1100,
    "tags": [
      "brute force",
      "greedy"
    ]
  },
  {
    "id": "623/D",
    "contestId": 623,
    "index": "D",
    "name": "Birthday",
    "rating": 2700,
    "tags": [
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1810/E",
    "contestId": 1810,
    "index": "E",
    "name": "Monsters",
    "rating": 2100,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "557/D",
    "contestId": 557,
    "index": "D",
    "name": "Vitaly and Cycle",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "id": "557/B",
    "contestId": 557,
    "index": "B",
    "name": "Pasha and Tea",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "251/D",
    "contestId": 251,
    "index": "D",
    "name": "Two Sets",
    "rating": 2700,
    "tags": [
      "bitmasks",
      "math"
    ]
  },
  {
    "id": "612/F",
    "contestId": 612,
    "index": "F",
    "name": "Simba on the Circle",
    "rating": 2600,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "747/F",
    "contestId": 747,
    "index": "F",
    "name": "Igor and Interesting Numbers",
    "rating": 2500,
    "tags": [
      "brute force",
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1354/C1",
    "contestId": 1354,
    "index": "C1",
    "name": "Simple Polygon Embedding",
    "rating": 1400,
    "tags": [
      "binary search",
      "geometry",
      "math",
      "ternary search"
    ]
  },
  {
    "id": "1485/C",
    "contestId": 1485,
    "index": "C",
    "name": "Floor and Mod",
    "rating": 1700,
    "tags": [
      "binary search",
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1606/E",
    "contestId": 1606,
    "index": "E",
    "name": "Arena",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1485/A",
    "contestId": 1485,
    "index": "A",
    "name": "Add and Divide",
    "rating": 1000,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1810/D",
    "contestId": 1810,
    "index": "D",
    "name": "Climbing the Tree",
    "rating": 1700,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "893/C",
    "contestId": 893,
    "index": "C",
    "name": "Rumor",
    "rating": 1300,
    "tags": [
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "776/E",
    "contestId": 776,
    "index": "E",
    "name": "The Holmes Children",
    "rating": 2100,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "988/C",
    "contestId": 988,
    "index": "C",
    "name": "Equal Sums",
    "rating": 1400,
    "tags": [
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1182/D",
    "contestId": 1182,
    "index": "D",
    "name": "Complete Mirror",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "hashing",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1352/B",
    "contestId": 1352,
    "index": "B",
    "name": "Same Parity Summands",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "464/B",
    "contestId": 464,
    "index": "B",
    "name": "Restore Cube",
    "rating": 2000,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "id": "1311/B",
    "contestId": 1311,
    "index": "B",
    "name": "WeirdSort",
    "rating": 1200,
    "tags": [
      "dfs and similar",
      "sortings"
    ]
  },
  {
    "id": "91/C",
    "contestId": 91,
    "index": "C",
    "name": "Ski Base",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1325/F",
    "contestId": 1325,
    "index": "F",
    "name": "Ehab's Last Theorem",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "490/F",
    "contestId": 490,
    "index": "F",
    "name": "Treeland Tour",
    "rating": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "746/C",
    "contestId": 746,
    "index": "C",
    "name": "Tram",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "51/E",
    "contestId": 51,
    "index": "E",
    "name": "Pentagon",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "graphs",
      "matrices"
    ]
  },
  {
    "id": "1418/G",
    "contestId": 1418,
    "index": "G",
    "name": "Three Occurrences",
    "rating": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "hashing",
      "two pointers"
    ]
  },
  {
    "id": "1382/B",
    "contestId": 1382,
    "index": "B",
    "name": "Sequential Nim",
    "rating": 1100,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "id": "1418/C",
    "contestId": 1418,
    "index": "C",
    "name": "Mortal Kombat Tower",
    "rating": 1500,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "shortest paths"
    ]
  },
  {
    "id": "1175/E",
    "contestId": 1175,
    "index": "E",
    "name": "Minimal Segment Cover",
    "rating": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "divide and conquer",
      "dp",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1839/D",
    "contestId": 1839,
    "index": "D",
    "name": "Ball Sorting",
    "rating": 2100,
    "tags": [
      "data structures",
      "dp",
      "sortings"
    ]
  },
  {
    "id": "804/D",
    "contestId": 804,
    "index": "D",
    "name": "Expected diameter of a tree",
    "rating": 2500,
    "tags": [
      "binary search",
      "brute force",
      "dfs and similar",
      "dp",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1144/D",
    "contestId": 1144,
    "index": "D",
    "name": "Equalize Them All",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1932/C",
    "contestId": 1932,
    "index": "C",
    "name": "LR-remainders",
    "rating": 1400,
    "tags": [
      "brute force",
      "data structures",
      "implementation",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "1521/D",
    "contestId": 1521,
    "index": "D",
    "name": "Nastia Plays with a Tree",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dp",
      "dsu",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "583/A",
    "contestId": 583,
    "index": "A",
    "name": "Asphalting Roads",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1462/E2",
    "contestId": 1462,
    "index": "E2",
    "name": "Close Tuples (hard version)",
    "rating": 1700,
    "tags": [
      "binary search",
      "combinatorics",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1787/F",
    "contestId": 1787,
    "index": "F",
    "name": "Inverse Transformation",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1900/E",
    "contestId": 1900,
    "index": "E",
    "name": "Transitive Graph",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "215/C",
    "contestId": 215,
    "index": "C",
    "name": "Crosses",
    "rating": 2100,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1319/D",
    "contestId": 1319,
    "index": "D",
    "name": "Navigation System",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1811/F",
    "contestId": 1811,
    "index": "F",
    "name": "Is It Flower?",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "960/H",
    "contestId": 960,
    "index": "H",
    "name": "Santa's Gift",
    "rating": 3100,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1100/F",
    "contestId": 1100,
    "index": "F",
    "name": "Ivan and Burgers",
    "rating": 2500,
    "tags": [
      "data structures",
      "divide and conquer",
      "greedy",
      "math"
    ]
  },
  {
    "id": "778/E",
    "contestId": 778,
    "index": "E",
    "name": "Selling Numbers",
    "rating": 3000,
    "tags": [
      "dp",
      "sortings"
    ]
  },
  {
    "id": "597/B",
    "contestId": 597,
    "index": "B",
    "name": "Restaurant",
    "rating": 1600,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1753/A2",
    "contestId": 1753,
    "index": "A2",
    "name": "Make Nonzero Sum (hard version)",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "161/C",
    "contestId": 161,
    "index": "C",
    "name": "Abracadabra",
    "rating": 2400,
    "tags": [
      "divide and conquer"
    ]
  },
  {
    "id": "1632/E2",
    "contestId": 1632,
    "index": "E2",
    "name": "Distance Tree (hard version)",
    "rating": 2700,
    "tags": [
      "binary search",
      "dfs and similar",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "1462/A",
    "contestId": 1462,
    "index": "A",
    "name": "Favorite Sequence",
    "rating": 800,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "987/C",
    "contestId": 987,
    "index": "C",
    "name": "Three displays",
    "rating": 1400,
    "tags": [
      "brute force",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "433/D",
    "contestId": 433,
    "index": "D",
    "name": "Nanami's Digital Board",
    "rating": 2000,
    "tags": [
      "dsu",
      "implementation"
    ]
  },
  {
    "id": "859/A",
    "contestId": 859,
    "index": "A",
    "name": "Declined Finalists",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "776/D",
    "contestId": 776,
    "index": "D",
    "name": "The Door Problem",
    "rating": 2000,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1543/C",
    "contestId": 1543,
    "index": "C",
    "name": "Need for Pink Slips",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "implementation",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "681/E",
    "contestId": 681,
    "index": "E",
    "name": "Runaway to a Shadow",
    "rating": 2500,
    "tags": [
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "505/A",
    "contestId": 505,
    "index": "A",
    "name": "Mr. Kitayuta's Gift",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1042/F",
    "contestId": 1042,
    "index": "F",
    "name": "Leaf Sets",
    "rating": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1811/G1",
    "contestId": 1811,
    "index": "G1",
    "name": "Vlad and the Nice Paths (easy version)",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1055/A",
    "contestId": 1055,
    "index": "A",
    "name": "Metro",
    "rating": 900,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "1054/E",
    "contestId": 1054,
    "index": "E",
    "name": "Chips Puzzle",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "implementation",
      "math"
    ]
  },
  {
    "id": "733/F",
    "contestId": 733,
    "index": "F",
    "name": "Drivers Dissatisfaction",
    "rating": 2200,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1365/B",
    "contestId": 1365,
    "index": "B",
    "name": "Trouble Sort",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "447/B",
    "contestId": 447,
    "index": "B",
    "name": "DZY Loves Strings",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1893/C",
    "contestId": 1893,
    "index": "C",
    "name": "Freedom of Choice",
    "rating": 2000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "500/B",
    "contestId": 500,
    "index": "B",
    "name": "New Year Permutation",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1555/B",
    "contestId": 1555,
    "index": "B",
    "name": "Two Tables",
    "rating": 1300,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "70/D",
    "contestId": 70,
    "index": "D",
    "name": "Professor's task",
    "rating": 2700,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "id": "512/D",
    "contestId": 512,
    "index": "D",
    "name": "Fox And Travelling",
    "rating": 2900,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "340/B",
    "contestId": 340,
    "index": "B",
    "name": "Maximal Area Quadrilateral",
    "rating": 2100,
    "tags": [
      "brute force",
      "geometry"
    ]
  },
  {
    "id": "1864/G",
    "contestId": 1864,
    "index": "G",
    "name": "Magic Square",
    "rating": 3100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1762/A",
    "contestId": 1762,
    "index": "A",
    "name": "Divide and Conquer",
    "rating": 800,
    "tags": [
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "862/F",
    "contestId": 862,
    "index": "F",
    "name": "Mahmoud and Ehab and the final stage",
    "rating": 2900,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "id": "1895/F",
    "contestId": 1895,
    "index": "F",
    "name": "Fancy Arrays",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "matrices"
    ]
  },
  {
    "id": "1774/E",
    "contestId": 1774,
    "index": "E",
    "name": "Two Chess Pieces",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "14/D",
    "contestId": 14,
    "index": "D",
    "name": "Two Paths",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "1537/A",
    "contestId": 1537,
    "index": "A",
    "name": "Arithmetic Array",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1931/F",
    "contestId": 1931,
    "index": "F",
    "name": "Chat Screenshots",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1806/A",
    "contestId": 1806,
    "index": "A",
    "name": "Walking Master",
    "rating": 800,
    "tags": [
      "geometry",
      "greedy",
      "math"
    ]
  },
  {
    "id": "277/D",
    "contestId": 277,
    "index": "D",
    "name": "Google Code Jam",
    "rating": 2800,
    "tags": [
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "581/D",
    "contestId": 581,
    "index": "D",
    "name": "Three Logos",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "380/D",
    "contestId": 380,
    "index": "D",
    "name": "Sereja and Cinema",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "568/D",
    "contestId": 568,
    "index": "D",
    "name": "Sign Posts",
    "rating": 2800,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "id": "1117/F",
    "contestId": 1117,
    "index": "F",
    "name": "Crisp String",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1855/A",
    "contestId": 1855,
    "index": "A",
    "name": "Dalton the Teacher",
    "rating": 800,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "246/D",
    "contestId": 246,
    "index": "D",
    "name": "Colorful Graph",
    "rating": 1600,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1712/A",
    "contestId": 1712,
    "index": "A",
    "name": "Wonderful Permutation",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1184/E1",
    "contestId": 1184,
    "index": "E1",
    "name": "Daleks' Invasion (easy)",
    "rating": 1900,
    "tags": [
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1621/D",
    "contestId": 1621,
    "index": "D",
    "name": "The Winter Hike",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1860/D",
    "contestId": 1860,
    "index": "D",
    "name": "Balanced String",
    "rating": 2200,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1144/G",
    "contestId": 1144,
    "index": "G",
    "name": "Two Merged Sequences",
    "rating": 2400,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "706/A",
    "contestId": 706,
    "index": "A",
    "name": "Beru-taxi",
    "rating": 900,
    "tags": [
      "brute force",
      "geometry",
      "implementation"
    ]
  },
  {
    "id": "1394/E",
    "contestId": 1394,
    "index": "E",
    "name": "Boboniu and Banknote Collection",
    "rating": 3500,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "1676/G",
    "contestId": 1676,
    "index": "G",
    "name": "White-Black Balanced Subtrees",
    "rating": 1300,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "976/F",
    "contestId": 976,
    "index": "F",
    "name": "Minimal k-covering",
    "rating": 2500,
    "tags": [
      "flows",
      "graphs"
    ]
  },
  {
    "id": "1228/F",
    "contestId": 1228,
    "index": "F",
    "name": "One Node is Gone",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1184/C1",
    "contestId": 1184,
    "index": "C1",
    "name": "Heidi and the Turing Test (Easy)",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "653/E",
    "contestId": 653,
    "index": "E",
    "name": "Bear and Forgotten Tree 2",
    "rating": 2400,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1234/D",
    "contestId": 1234,
    "index": "D",
    "name": "Distinct Characters Queries",
    "rating": 1600,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "976/D",
    "contestId": 976,
    "index": "D",
    "name": "Degree Set",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "39/H",
    "contestId": 39,
    "index": "H",
    "name": "Multiplication Table",
    "rating": 1300,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1842/C",
    "contestId": 1842,
    "index": "C",
    "name": "Tenzing and Balls",
    "rating": 1500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1621/B",
    "contestId": 1621,
    "index": "B",
    "name": "Integers Shop",
    "rating": 1500,
    "tags": [
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "870/A",
    "contestId": 870,
    "index": "A",
    "name": "Search for Pretty Integers",
    "rating": 900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1997/D",
    "contestId": 1997,
    "index": "D",
    "name": "Maximize the Root",
    "rating": 1500,
    "tags": [
      "binary search",
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1889/D",
    "contestId": 1889,
    "index": "D",
    "name": "Game of Stacks",
    "rating": 3000,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1201/B",
    "contestId": 1201,
    "index": "B",
    "name": "Zero Array",
    "rating": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1672/H",
    "contestId": 1672,
    "index": "H",
    "name": "Zigu Zagu",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "749/E",
    "contestId": 749,
    "index": "E",
    "name": "Inversions After Shuffle",
    "rating": 2400,
    "tags": [
      "data structures",
      "probabilities"
    ]
  },
  {
    "id": "1453/C",
    "contestId": 1453,
    "index": "C",
    "name": "Triangles",
    "rating": 1700,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1365/C",
    "contestId": 1365,
    "index": "C",
    "name": "Rotation Matching",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "369/C",
    "contestId": 369,
    "index": "C",
    "name": "Valera and Elections",
    "rating": 1600,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "600/D",
    "contestId": 600,
    "index": "D",
    "name": "Area of Two Circles' Intersection",
    "rating": 2000,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "190/B",
    "contestId": 190,
    "index": "B",
    "name": "Surrounded",
    "rating": 1800,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "997/E",
    "contestId": 997,
    "index": "E",
    "name": "Good Subsegments",
    "rating": 3000,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1759/F",
    "contestId": 1759,
    "index": "F",
    "name": "All Possible Digits",
    "rating": 1800,
    "tags": [
      "binary search",
      "data structures",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "246/E",
    "contestId": 246,
    "index": "E",
    "name": "Blood Cousins Return",
    "rating": 2400,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "sortings"
    ]
  },
  {
    "id": "1140/F",
    "contestId": 1140,
    "index": "F",
    "name": "Extending Set of Points",
    "rating": 2600,
    "tags": [
      "data structures",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "id": "706/D",
    "contestId": 706,
    "index": "D",
    "name": "Vasiliy's Multiset",
    "rating": 1800,
    "tags": [
      "binary search",
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1228/D",
    "contestId": 1228,
    "index": "D",
    "name": "Complete Tripartite",
    "rating": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "graphs",
      "hashing",
      "implementation"
    ]
  },
  {
    "id": "1672/D",
    "contestId": 1672,
    "index": "D",
    "name": "Cyclic Rotation",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "358/E",
    "contestId": 358,
    "index": "E",
    "name": "Dima and Kicks",
    "rating": 2300,
    "tags": [
      "brute force",
      "dsu",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1388/E",
    "contestId": 1388,
    "index": "E",
    "name": "Uncle Bogdan and Projections",
    "rating": 2700,
    "tags": [
      "data structures",
      "geometry",
      "sortings"
    ]
  },
  {
    "id": "1929/E",
    "contestId": 1929,
    "index": "E",
    "name": "Sasha and the Happy Tree Cutting",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "math",
      "trees"
    ]
  },
  {
    "id": "1431/I",
    "contestId": 1431,
    "index": "I",
    "name": "Cyclic Shifts",
    "rating": 2900,
    "tags": [
      "*special",
      "strings"
    ]
  },
  {
    "id": "1672/B",
    "contestId": 1672,
    "index": "B",
    "name": "I love AAAB",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "666/B",
    "contestId": 666,
    "index": "B",
    "name": "World Tour",
    "rating": 2000,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1845/E",
    "contestId": 1845,
    "index": "E",
    "name": "Boxes and Balls",
    "rating": 2500,
    "tags": [
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "755/F",
    "contestId": 755,
    "index": "F",
    "name": "PolandBall and Gifts",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1837/D",
    "contestId": 1837,
    "index": "D",
    "name": "Bracket Coloring",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1361/A",
    "contestId": 1361,
    "index": "A",
    "name": "Johnny and Contribution",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "870/E",
    "contestId": 870,
    "index": "E",
    "name": "Points, Lines and Ready-made Titles",
    "rating": 2300,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1394/D",
    "contestId": 1394,
    "index": "D",
    "name": "Boboniu and Jianghu",
    "rating": 2800,
    "tags": [
      "dp",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "527/B",
    "contestId": 527,
    "index": "B",
    "name": "Error Correct System",
    "rating": 1500,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1439/B",
    "contestId": 1439,
    "index": "B",
    "name": "Graph Subset Problem",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "graphs"
    ]
  },
  {
    "id": "523/B",
    "contestId": 523,
    "index": "B",
    "name": "Mean Requests",
    "rating": 1500,
    "tags": [
      "*special",
      "implementation"
    ]
  },
  {
    "id": "1516/E",
    "contestId": 1516,
    "index": "E",
    "name": "Baby Ehab Plays with Permutations",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "103/B",
    "contestId": 103,
    "index": "B",
    "name": "Cthulhu",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1560/A",
    "contestId": 1560,
    "index": "A",
    "name": "Dislike of Threes",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1799/D1",
    "contestId": 1799,
    "index": "D1",
    "name": "Hot Start Up (easy version)",
    "rating": 1900,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1009/C",
    "contestId": 1009,
    "index": "C",
    "name": "Annoying Present",
    "rating": 1700,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1431/A",
    "contestId": 1431,
    "index": "A",
    "name": "Selling Hamburgers",
    "rating": 800,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "161/D",
    "contestId": 161,
    "index": "D",
    "name": "Distance in Tree",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "425/B",
    "contestId": 425,
    "index": "B",
    "name": "Sereja and Table",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "greedy"
    ]
  },
  {
    "id": "380/E",
    "contestId": 380,
    "index": "E",
    "name": "Sereja and Dividing",
    "rating": 2600,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1799/B",
    "contestId": 1799,
    "index": "B",
    "name": "Equalize by Divide",
    "rating": 1200,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "380/A",
    "contestId": 380,
    "index": "A",
    "name": "Sereja and Prefixes",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "id": "1966/A",
    "contestId": 1966,
    "index": "A",
    "name": "Card Exchange",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "games",
      "greedy"
    ]
  },
  {
    "id": "1551/B2",
    "contestId": 1551,
    "index": "B2",
    "name": "Wonderful Coloring - 2",
    "rating": 1400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1307/G",
    "contestId": 1307,
    "index": "G",
    "name": "Cow and Exercise",
    "rating": 3100,
    "tags": [
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "487/E",
    "contestId": 487,
    "index": "E",
    "name": "Tourists",
    "rating": 3200,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1759/C",
    "contestId": 1759,
    "index": "C",
    "name": "Thermostat",
    "rating": 1100,
    "tags": [
      "greedy",
      "math",
      "shortest paths"
    ]
  },
  {
    "id": "1799/D2",
    "contestId": 1799,
    "index": "D2",
    "name": "Hot Start Up (hard version)",
    "rating": 2100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "997/D",
    "contestId": 997,
    "index": "D",
    "name": "Cycles in product",
    "rating": 2900,
    "tags": [
      "combinatorics",
      "divide and conquer",
      "trees"
    ]
  },
  {
    "id": "545/B",
    "contestId": 545,
    "index": "B",
    "name": "Equidistant String",
    "rating": 1100,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "209/B",
    "contestId": 209,
    "index": "B",
    "name": "Pixels",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1799/A",
    "contestId": 1799,
    "index": "A",
    "name": "Recent Actions",
    "rating": 800,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "527/E",
    "contestId": 527,
    "index": "E",
    "name": "Data Center Drama",
    "rating": 2600,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1348/B",
    "contestId": 1348,
    "index": "B",
    "name": "Phoenix and Beauty",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "599/B",
    "contestId": 599,
    "index": "B",
    "name": "Spongebob and Joke",
    "rating": 1500,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1768/F",
    "contestId": 1768,
    "index": "F",
    "name": "Wonderful Jump",
    "rating": 2900,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "812/D",
    "contestId": 812,
    "index": "D",
    "name": "Sagheer and Kindergarten",
    "rating": 2700,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1781/G",
    "contestId": 1781,
    "index": "G",
    "name": "Diverse Coloring",
    "rating": 3200,
    "tags": [
      "constructive algorithms",
      "trees"
    ]
  },
  {
    "id": "1957/D",
    "contestId": 1957,
    "index": "D",
    "name": "A BIT of an Inequality",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "id": "1957/F1",
    "contestId": 1957,
    "index": "F1",
    "name": "Frequency Mismatch (Easy Version)",
    "rating": 2600,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "hashing",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "653/C",
    "contestId": 653,
    "index": "C",
    "name": "Bear and Up-Down",
    "rating": 1900,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "472/E",
    "contestId": 472,
    "index": "E",
    "name": "Design Tutorial: Learn from a Game",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "472/C",
    "contestId": 472,
    "index": "C",
    "name": "Design Tutorial: Make It Nondeterministic",
    "rating": 1400,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "472/D",
    "contestId": 472,
    "index": "D",
    "name": "Design Tutorial: Inverse the Problem",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "dsu",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "1361/E",
    "contestId": 1361,
    "index": "E",
    "name": "James and the Chase",
    "rating": 3000,
    "tags": [
      "dfs and similar",
      "graphs",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "629/E",
    "contestId": 629,
    "index": "E",
    "name": "Famil Door and Roads",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "1712/C",
    "contestId": 1712,
    "index": "C",
    "name": "Sort Zero",
    "rating": 1100,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "827/D",
    "contestId": 827,
    "index": "D",
    "name": "Best Edge Weight",
    "rating": 2700,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "618/E",
    "contestId": 618,
    "index": "E",
    "name": "Robot Arm",
    "rating": 2500,
    "tags": [
      "data structures",
      "geometry"
    ]
  },
  {
    "id": "1307/F",
    "contestId": 1307,
    "index": "F",
    "name": "Cow and Vacation",
    "rating": 3300,
    "tags": [
      "dfs and similar",
      "dsu",
      "trees"
    ]
  },
  {
    "id": "1900/F",
    "contestId": 1900,
    "index": "F",
    "name": "Local Deletions",
    "rating": 2800,
    "tags": [
      "binary search",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1795/A",
    "contestId": 1795,
    "index": "A",
    "name": "Two Towers",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1795/B",
    "contestId": 1795,
    "index": "B",
    "name": "Ideal Point",
    "rating": 900,
    "tags": [
      "brute force",
      "geometry",
      "greedy"
    ]
  },
  {
    "id": "1676/D",
    "contestId": 1676,
    "index": "D",
    "name": "X-Sum",
    "rating": 1000,
    "tags": [
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "706/E",
    "contestId": 706,
    "index": "E",
    "name": "Working routine",
    "rating": 2500,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "150/C",
    "contestId": 150,
    "index": "C",
    "name": "Smart Cheater",
    "rating": 2200,
    "tags": [
      "data structures",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "581/F",
    "contestId": 581,
    "index": "F",
    "name": "Zublicanes and Mumocrates",
    "rating": 2400,
    "tags": [
      "dp",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "823/F",
    "contestId": 823,
    "index": "F",
    "name": "Perpetual Motion Machine",
    "rating": 3100,
    "tags": [
      "constructive algorithms",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "165/A",
    "contestId": 165,
    "index": "A",
    "name": "Supercentral Point",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1350/A",
    "contestId": 1350,
    "index": "A",
    "name": "Orac and Factors",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "578/D",
    "contestId": 578,
    "index": "D",
    "name": "LCS Again",
    "rating": 2700,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1957/F2",
    "contestId": 1957,
    "index": "F2",
    "name": "Frequency Mismatch (Hard Version)",
    "rating": 2700,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "hashing",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "908/G",
    "contestId": 908,
    "index": "G",
    "name": "New Year and Original Order",
    "rating": 2800,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1585/F",
    "contestId": 1585,
    "index": "F",
    "name": "Non-equal Neighbours",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1614/C",
    "contestId": 1614,
    "index": "C",
    "name": "Divan and bitwise operations",
    "rating": 1500,
    "tags": [
      "bitmasks",
      "combinatorics",
      "constructive algorithms",
      "dp",
      "math"
    ]
  },
  {
    "id": "209/C",
    "contestId": 209,
    "index": "C",
    "name": "Trails and Glades",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1303/F",
    "contestId": 1303,
    "index": "F",
    "name": "Number of Components",
    "rating": 2800,
    "tags": [
      "dsu",
      "implementation"
    ]
  },
  {
    "id": "1849/C",
    "contestId": 1849,
    "index": "C",
    "name": "Binary String Copying",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "hashing",
      "strings"
    ]
  },
  {
    "id": "1375/B",
    "contestId": 1375,
    "index": "B",
    "name": "Neighbor Grid",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1737/F",
    "contestId": 1737,
    "index": "F",
    "name": "Ela and Prime GCD",
    "rating": 3300,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1770/E",
    "contestId": 1770,
    "index": "E",
    "name": "Koxia and Tree",
    "rating": 2400,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "1211/G",
    "contestId": 1211,
    "index": "G",
    "name": "King's Path",
    "rating": 2500,
    "tags": [
      "*special",
      "math",
      "trees"
    ]
  },
  {
    "id": "1889/E",
    "contestId": 1889,
    "index": "E",
    "name": "Doremy's Swapping Trees",
    "rating": 3500,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1256/C",
    "contestId": 1256,
    "index": "C",
    "name": "Platforms Jumping",
    "rating": 1700,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1770/F",
    "contestId": 1770,
    "index": "F",
    "name": "Koxia and Sequence",
    "rating": 3100,
    "tags": [
      "bitmasks",
      "combinatorics",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "466/E",
    "contestId": 466,
    "index": "E",
    "name": "Information Graph",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1238/A",
    "contestId": 1238,
    "index": "A",
    "name": "Prime Subtraction",
    "rating": 900,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1408/A",
    "contestId": 1408,
    "index": "A",
    "name": "Circle Coloring",
    "rating": 800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "629/D",
    "contestId": 629,
    "index": "D",
    "name": "Babaei and Birthday Cake",
    "rating": 2000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1375/I",
    "contestId": 1375,
    "index": "I",
    "name": "Cubic Lattice",
    "rating": 3500,
    "tags": [
      "geometry",
      "math",
      "matrices",
      "number theory"
    ]
  },
  {
    "id": "1344/B",
    "contestId": 1344,
    "index": "B",
    "name": "Monopole Magnets",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1169/B",
    "contestId": 1169,
    "index": "B",
    "name": "Pairs",
    "rating": 1500,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1910/E",
    "contestId": 1910,
    "index": "E",
    "name": "Maximum Sum Subarrays",
    "rating": 2100,
    "tags": [
      "*special",
      "dp"
    ]
  },
  {
    "id": "802/M",
    "contestId": 802,
    "index": "M",
    "name": "April Fools' Problem (easy)",
    "rating": 1200,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "653/F",
    "contestId": 653,
    "index": "F",
    "name": "Paper task",
    "rating": 2600,
    "tags": [
      "data structures",
      "string suffix structures",
      "strings"
    ]
  },
  {
    "id": "277/E",
    "contestId": 277,
    "index": "E",
    "name": "Binary Tree on Plane",
    "rating": 2400,
    "tags": [
      "flows",
      "trees"
    ]
  },
  {
    "id": "107/C",
    "contestId": 107,
    "index": "C",
    "name": "Arrangement",
    "rating": 2400,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1211/H",
    "contestId": 1211,
    "index": "H",
    "name": "Road Repair in Treeland",
    "rating": 3100,
    "tags": [
      "*special",
      "binary search",
      "dp",
      "trees"
    ]
  },
  {
    "id": "891/E",
    "contestId": 891,
    "index": "E",
    "name": "Lust",
    "rating": 3000,
    "tags": [
      "combinatorics",
      "math",
      "matrices"
    ]
  },
  {
    "id": "868/C",
    "contestId": 868,
    "index": "C",
    "name": "Qualification Rounds",
    "rating": 1500,
    "tags": [
      "bitmasks",
      "brute force",
      "constructive algorithms",
      "dp"
    ]
  },
  {
    "id": "1737/D",
    "contestId": 1737,
    "index": "D",
    "name": "Ela and the Wiring Wizard",
    "rating": 2200,
    "tags": [
      "brute force",
      "dp",
      "graphs",
      "greedy",
      "implementation",
      "shortest paths"
    ]
  },
  {
    "id": "1610/G",
    "contestId": 1610,
    "index": "G",
    "name": "AmShZ Wins a Bet",
    "rating": 3300,
    "tags": [
      "data structures",
      "greedy",
      "hashing"
    ]
  },
  {
    "id": "585/D",
    "contestId": 585,
    "index": "D",
    "name": "Lizard Era: Beginning",
    "rating": 2300,
    "tags": [
      "meet-in-the-middle"
    ]
  },
  {
    "id": "712/E",
    "contestId": 712,
    "index": "E",
    "name": "Memory and Casinos",
    "rating": 2500,
    "tags": [
      "data structures",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1774/D",
    "contestId": 1774,
    "index": "D",
    "name": "Same Count One",
    "rating": 1600,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "581/E",
    "contestId": 581,
    "index": "E",
    "name": "Kojiro and Furrari",
    "rating": 2800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "574/B",
    "contestId": 574,
    "index": "B",
    "name": "Bear and Three Musketeers",
    "rating": 1500,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "hashing"
    ]
  },
  {
    "id": "1851/E",
    "contestId": 1851,
    "index": "E",
    "name": "Nastya and Potions",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "sortings"
    ]
  },
  {
    "id": "1770/H",
    "contestId": 1770,
    "index": "H",
    "name": "Koxia, Mahiru and Winter Festival",
    "rating": 3500,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "165/D",
    "contestId": 165,
    "index": "D",
    "name": "Beard Graph",
    "rating": 2100,
    "tags": [
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "id": "812/A",
    "contestId": 812,
    "index": "A",
    "name": "Sagheer and Crossroads",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "238/D",
    "contestId": 238,
    "index": "D",
    "name": "Tape Programming",
    "rating": 2900,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1344/E",
    "contestId": 1344,
    "index": "E",
    "name": "Train Tracks",
    "rating": 3100,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "653/D",
    "contestId": 653,
    "index": "D",
    "name": "Delivery Bears",
    "rating": 2200,
    "tags": [
      "binary search",
      "flows",
      "graphs"
    ]
  },
  {
    "id": "712/C",
    "contestId": 712,
    "index": "C",
    "name": "Memory and De-Evolution",
    "rating": 1600,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "537/B",
    "contestId": 537,
    "index": "B",
    "name": "Quasi Binary",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1296/B",
    "contestId": 1296,
    "index": "B",
    "name": "Food Buying",
    "rating": 900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "891/A",
    "contestId": 891,
    "index": "A",
    "name": "Pride",
    "rating": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1874/C",
    "contestId": 1874,
    "index": "C",
    "name": "Jellyfish and EVA",
    "rating": 2300,
    "tags": [
      "dp",
      "graphs",
      "greedy",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "66/E",
    "contestId": 66,
    "index": "E",
    "name": "Petya and Post",
    "rating": 2000,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1827/A",
    "contestId": 1827,
    "index": "A",
    "name": "Counting Orders",
    "rating": 1100,
    "tags": [
      "combinatorics",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1574/F",
    "contestId": 1574,
    "index": "F",
    "name": "Occurrences",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "fft",
      "graphs"
    ]
  },
  {
    "id": "1693/F",
    "contestId": 1693,
    "index": "F",
    "name": "I Might Be Wrong",
    "rating": 3400,
    "tags": [
      "binary search",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1631/B",
    "contestId": 1631,
    "index": "B",
    "name": "Fun with Even Subarrays",
    "rating": 1100,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "578/E",
    "contestId": 578,
    "index": "E",
    "name": "Walking!",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1096/B",
    "contestId": 1096,
    "index": "B",
    "name": "Substring Removal",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "math",
      "strings"
    ]
  },
  {
    "id": "1019/C",
    "contestId": 1019,
    "index": "C",
    "name": "Sergey's problem",
    "rating": 3000,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "1910/F",
    "contestId": 1910,
    "index": "F",
    "name": "Build Railway Stations",
    "rating": 2000,
    "tags": [
      "*special",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "672/B",
    "contestId": 672,
    "index": "B",
    "name": "Different is Good",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1841/A",
    "contestId": 1841,
    "index": "A",
    "name": "Game with Board",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "games"
    ]
  },
  {
    "id": "1600/F",
    "contestId": 1600,
    "index": "F",
    "name": "Party Organization",
    "rating": 2300,
    "tags": [
      "brute force",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1749/F",
    "contestId": 1749,
    "index": "F",
    "name": "Distance to the Path",
    "rating": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1741/F",
    "contestId": 1741,
    "index": "F",
    "name": "Multi-Colored Segments",
    "rating": 2000,
    "tags": [
      "binary search",
      "data structures",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1215/C",
    "contestId": 1215,
    "index": "C",
    "name": "Swap Letters",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "755/E",
    "contestId": 755,
    "index": "E",
    "name": "PolandBall and White-Red graph",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "891/C",
    "contestId": 891,
    "index": "C",
    "name": "Envy",
    "rating": 2300,
    "tags": [
      "data structures",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "144/D",
    "contestId": 144,
    "index": "D",
    "name": "Missile Silos",
    "rating": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1870/A",
    "contestId": 1870,
    "index": "A",
    "name": "MEXanized Array",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1472/B",
    "contestId": 1472,
    "index": "B",
    "name": "Fair Division",
    "rating": 800,
    "tags": [
      "dp",
      "greedy",
      "math"
    ]
  },
  {
    "id": "332/B",
    "contestId": 332,
    "index": "B",
    "name": "Maximum Absurdity",
    "rating": 1500,
    "tags": [
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1914/G1",
    "contestId": 1914,
    "index": "G1",
    "name": "Light Bulbs (Easy Version)",
    "rating": 2100,
    "tags": [
      "brute force",
      "combinatorics",
      "dfs and similar",
      "dp",
      "dsu",
      "graphs",
      "math",
      "trees"
    ]
  },
  {
    "id": "595/A",
    "contestId": 595,
    "index": "A",
    "name": "Vitaly and Night",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1935/F",
    "contestId": 1935,
    "index": "F",
    "name": "Andrey's Tree",
    "rating": 2800,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "dsu",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1737/G",
    "contestId": 1737,
    "index": "G",
    "name": "Ela Takes Dancing Class",
    "rating": 3500,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1476/G",
    "contestId": 1476,
    "index": "G",
    "name": "Minimum Difference",
    "rating": 3100,
    "tags": [
      "data structures",
      "hashing",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "537/E",
    "contestId": 537,
    "index": "E",
    "name": "Demiurges Play Again",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "1899/E",
    "contestId": 1899,
    "index": "E",
    "name": "Queue Sort",
    "rating": 1300,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1034/C",
    "contestId": 1034,
    "index": "C",
    "name": "Region Separation",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "1398/F",
    "contestId": 1398,
    "index": "F",
    "name": "Controversial Rounds",
    "rating": 2500,
    "tags": [
      "binary search",
      "data structures",
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1687/D",
    "contestId": 1687,
    "index": "D",
    "name": "Cute number",
    "rating": 2900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "dsu",
      "implementation",
      "math"
    ]
  },
  {
    "id": "180/B",
    "contestId": 180,
    "index": "B",
    "name": "Divisibility Rules",
    "rating": 2300,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "144/C",
    "contestId": 144,
    "index": "C",
    "name": "Anagram Search",
    "rating": 1500,
    "tags": [
      "implementation",
      "strings"
    ]
  },
  {
    "id": "1841/F",
    "contestId": 1841,
    "index": "F",
    "name": "Monocarp and a Strategic Game",
    "rating": 2700,
    "tags": [
      "geometry",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1096/D",
    "contestId": 1096,
    "index": "D",
    "name": "Easy Problem",
    "rating": 1800,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "895/E",
    "contestId": 895,
    "index": "E",
    "name": "Eyes Closed",
    "rating": 2300,
    "tags": [
      "data structures",
      "probabilities"
    ]
  },
  {
    "id": "1657/F",
    "contestId": 1657,
    "index": "F",
    "name": "Words on Tree",
    "rating": 2600,
    "tags": [
      "2-sat",
      "dfs and similar",
      "dsu",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1332/A",
    "contestId": 1332,
    "index": "A",
    "name": "Exercising Walk",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1211/I",
    "contestId": 1211,
    "index": "I",
    "name": "Unusual Graph",
    "rating": 3000,
    "tags": [
      "*special",
      "graphs"
    ]
  },
  {
    "id": "1447/B",
    "contestId": 1447,
    "index": "B",
    "name": "Numbers Box",
    "rating": 1000,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "639/F",
    "contestId": 639,
    "index": "F",
    "name": "Bear and Chemistry",
    "rating": 3300,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1833/F",
    "contestId": 1833,
    "index": "F",
    "name": "Ira and Flamenco",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "data structures",
      "implementation",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1733/D1",
    "contestId": 1733,
    "index": "D1",
    "name": "Zero-One (Easy Version)",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1523/C",
    "contestId": 1523,
    "index": "C",
    "name": "Compression and Expansion",
    "rating": 1600,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1136/C",
    "contestId": 1136,
    "index": "C",
    "name": "Nastya Is Transposing Matrices",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "1512/G",
    "contestId": 1512,
    "index": "G",
    "name": "Short Task",
    "rating": 1700,
    "tags": [
      "brute force",
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1778/B",
    "contestId": 1778,
    "index": "B",
    "name": "The Forbidden Permutation",
    "rating": 1300,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1972/B",
    "contestId": 1972,
    "index": "B",
    "name": "Coin Games",
    "rating": 900,
    "tags": [
      "games"
    ]
  },
  {
    "id": "631/B",
    "contestId": 631,
    "index": "B",
    "name": "Print Check",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1657/C",
    "contestId": 1657,
    "index": "C",
    "name": "Bracket Sequence Deletion",
    "rating": 1200,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1987/E",
    "contestId": 1987,
    "index": "E",
    "name": "Wonderful Tree!",
    "rating": 2000,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "dsu",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1778/F",
    "contestId": 1778,
    "index": "F",
    "name": "Maximizing Root",
    "rating": 2600,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "1987/D",
    "contestId": 1987,
    "index": "D",
    "name": "World is Mine",
    "rating": 1800,
    "tags": [
      "dp",
      "games"
    ]
  },
  {
    "id": "855/G",
    "contestId": 855,
    "index": "G",
    "name": "Harry Vs Voldemort",
    "rating": 3300,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "591/A",
    "contestId": 591,
    "index": "A",
    "name": "Wizards' Duel",
    "rating": 900,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1635/B",
    "contestId": 1635,
    "index": "B",
    "name": "Avoid Local Maximums",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1599/I",
    "contestId": 1599,
    "index": "I",
    "name": "Desert",
    "rating": 2700,
    "tags": [
      "data structures",
      "graphs"
    ]
  },
  {
    "id": "1599/E",
    "contestId": 1599,
    "index": "E",
    "name": "Two Arrays",
    "rating": 3200,
    "tags": [
      "data structures",
      "matrices"
    ]
  },
  {
    "id": "53/E",
    "contestId": 53,
    "index": "E",
    "name": "Dead Ends",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1868/D",
    "contestId": 1868,
    "index": "D",
    "name": "Flower-like Pseudotree",
    "rating": 3000,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "837/E",
    "contestId": 837,
    "index": "E",
    "name": "Vasya's Function",
    "rating": 2100,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1487/G",
    "contestId": 1487,
    "index": "G",
    "name": "String Counting",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "fft",
      "math"
    ]
  },
  {
    "id": "1760/C",
    "contestId": 1760,
    "index": "C",
    "name": "Advantage",
    "rating": 800,
    "tags": [
      "data structures",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1881/F",
    "contestId": 1881,
    "index": "F",
    "name": "Minimum Maximum Distance",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "1322/D",
    "contestId": 1322,
    "index": "D",
    "name": "Reality Show",
    "rating": 2800,
    "tags": [
      "bitmasks",
      "dp"
    ]
  },
  {
    "id": "1741/G",
    "contestId": 1741,
    "index": "G",
    "name": "Kirill and Company",
    "rating": 2200,
    "tags": [
      "bitmasks",
      "brute force",
      "dfs and similar",
      "dp",
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1487/E",
    "contestId": 1487,
    "index": "E",
    "name": "Cheap Dinner",
    "rating": 2000,
    "tags": [
      "brute force",
      "data structures",
      "graphs",
      "greedy",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "745/B",
    "contestId": 745,
    "index": "B",
    "name": "Hongcow Solves A Puzzle",
    "rating": 1400,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "621/C",
    "contestId": 621,
    "index": "C",
    "name": "Wet Shark and Flowers",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "math",
      "number theory",
      "probabilities"
    ]
  },
  {
    "id": "1868/B1",
    "contestId": 1868,
    "index": "B1",
    "name": "Candy Party (Easy Version)",
    "rating": 1700,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "graphs",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1983/C",
    "contestId": 1983,
    "index": "C",
    "name": "Have Your Cake and Eat It Too",
    "rating": 1400,
    "tags": [
      "binary search",
      "brute force",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1693/B",
    "contestId": 1693,
    "index": "B",
    "name": "Fake Plastic Trees",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "263/A",
    "contestId": 263,
    "index": "A",
    "name": "Beautiful Matrix",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1874/G",
    "contestId": 1874,
    "index": "G",
    "name": "Jellyfish and Inscryption",
    "rating": 3500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "457/F",
    "contestId": 457,
    "index": "F",
    "name": "An easy problem about trees",
    "rating": 3200,
    "tags": [
      "dp",
      "games",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1881/C",
    "contestId": 1881,
    "index": "C",
    "name": "Perfect Square",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "610/D",
    "contestId": 610,
    "index": "D",
    "name": "Vika and Segments",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "data structures",
      "geometry",
      "two pointers"
    ]
  },
  {
    "id": "687/E",
    "contestId": 687,
    "index": "E",
    "name": "TOF",
    "rating": 2900,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1369/F",
    "contestId": 1369,
    "index": "F",
    "name": "BareLee",
    "rating": 2700,
    "tags": [
      "dfs and similar",
      "dp",
      "games"
    ]
  },
  {
    "id": "774/D",
    "contestId": 774,
    "index": "D",
    "name": "Lie or Truth",
    "rating": 1500,
    "tags": [
      "*special",
      "constructive algorithms",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1103/C",
    "contestId": 1103,
    "index": "C",
    "name": "Johnny Solving",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "math"
    ]
  },
  {
    "id": "506/D",
    "contestId": 506,
    "index": "D",
    "name": "Mr. Kitayuta's Colorful Graph",
    "rating": 2400,
    "tags": [
      "brute force",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "497/E",
    "contestId": 497,
    "index": "E",
    "name": "Subsequences Return",
    "rating": 2900,
    "tags": [
      "dp",
      "matrices"
    ]
  },
  {
    "id": "935/B",
    "contestId": 935,
    "index": "B",
    "name": "Fafa and the Gates",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1604/A",
    "contestId": 1604,
    "index": "A",
    "name": "Era",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1132/E",
    "contestId": 1132,
    "index": "E",
    "name": "Knapsack",
    "rating": 2300,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1823/B",
    "contestId": 1823,
    "index": "B",
    "name": "Sort with Step",
    "rating": 900,
    "tags": [
      "brute force",
      "math",
      "sortings"
    ]
  },
  {
    "id": "962/F",
    "contestId": 962,
    "index": "F",
    "name": "Simple Cycles Edges",
    "rating": 2400,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "263/C",
    "contestId": 263,
    "index": "C",
    "name": "Circle of Numbers",
    "rating": 2000,
    "tags": [
      "brute force",
      "dfs and similar",
      "implementation"
    ]
  },
  {
    "id": "235/B",
    "contestId": 235,
    "index": "B",
    "name": "Let's Play Osu!",
    "rating": 2000,
    "tags": [
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "506/E",
    "contestId": 506,
    "index": "E",
    "name": "Mr. Kitayuta's Gift",
    "rating": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "matrices",
      "strings"
    ]
  },
  {
    "id": "292/B",
    "contestId": 292,
    "index": "B",
    "name": "Network Topology",
    "rating": 1200,
    "tags": [
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "722/C",
    "contestId": 722,
    "index": "C",
    "name": "Destroying Array",
    "rating": 1600,
    "tags": [
      "data structures",
      "dsu"
    ]
  },
  {
    "id": "336/B",
    "contestId": 336,
    "index": "B",
    "name": "Vasily the Bear and Fly",
    "rating": 1900,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1976/F",
    "contestId": 1976,
    "index": "F",
    "name": "Remove Bridges",
    "rating": 2800,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1517/D",
    "contestId": 1517,
    "index": "D",
    "name": "Explorer Space",
    "rating": 1800,
    "tags": [
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "126/E",
    "contestId": 126,
    "index": "E",
    "name": "Pills",
    "rating": 2900,
    "tags": [
      "brute force",
      "flows"
    ]
  },
  {
    "id": "1976/B",
    "contestId": 1976,
    "index": "B",
    "name": "Increase/Decrease/Copy",
    "rating": 1100,
    "tags": [
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1581/B",
    "contestId": 1581,
    "index": "B",
    "name": "Diameter of Graph",
    "rating": 1200,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "id": "555/C",
    "contestId": 555,
    "index": "C",
    "name": "Case of Chocolate",
    "rating": 2200,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "35/B",
    "contestId": 35,
    "index": "B",
    "name": "Warehouse",
    "rating": 1700,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1859/E",
    "contestId": 1859,
    "index": "E",
    "name": "Maximum Monogonosity",
    "rating": 2500,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "id": "888/F",
    "contestId": 888,
    "index": "F",
    "name": "Connecting Vertices",
    "rating": 2500,
    "tags": [
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1322/C",
    "contestId": 1322,
    "index": "C",
    "name": "Instant Noodles",
    "rating": 2300,
    "tags": [
      "graphs",
      "hashing",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1283/A",
    "contestId": 1283,
    "index": "A",
    "name": "Minutes Before the New Year",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1221/G",
    "contestId": 1221,
    "index": "G",
    "name": "Graph And Numbers",
    "rating": 2900,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "dp",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "625/C",
    "contestId": 625,
    "index": "C",
    "name": "K-special Tables",
    "rating": 1300,
    "tags": [
      "constructive algorithms",
      "implementation"
    ]
  },
  {
    "id": "1844/G",
    "contestId": 1844,
    "index": "G",
    "name": "Tree Weights",
    "rating": 3000,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "data structures",
      "dfs and similar",
      "implementation",
      "math",
      "matrices",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "850/A",
    "contestId": 850,
    "index": "A",
    "name": "Five Dimensional Points",
    "rating": 1700,
    "tags": [
      "brute force",
      "geometry",
      "math"
    ]
  },
  {
    "id": "1210/F2",
    "contestId": 1210,
    "index": "F2",
    "name": "Marek and Matching (hard version)",
    "rating": 3200,
    "tags": [
      "brute force",
      "probabilities"
    ]
  },
  {
    "id": "1093/F",
    "contestId": 1093,
    "index": "F",
    "name": "Vasya and Array",
    "rating": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "235/D",
    "contestId": 235,
    "index": "D",
    "name": "Graph Game",
    "rating": 3000,
    "tags": [
      "graphs"
    ]
  },
  {
    "id": "1545/C",
    "contestId": 1545,
    "index": "C",
    "name": "AquaMoon and Permutations",
    "rating": 2800,
    "tags": [
      "2-sat",
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "id": "1982/B",
    "contestId": 1982,
    "index": "B",
    "name": "Collatz Conjecture",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1374/D",
    "contestId": 1374,
    "index": "D",
    "name": "Zero Remainder Array",
    "rating": 1400,
    "tags": [
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "256/E",
    "contestId": 256,
    "index": "E",
    "name": "Lucky Arrays",
    "rating": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1438/C",
    "contestId": 1438,
    "index": "C",
    "name": "Engineer Artem",
    "rating": 2000,
    "tags": [
      "2-sat",
      "chinese remainder theorem",
      "constructive algorithms",
      "fft",
      "flows"
    ]
  },
  {
    "id": "1526/A",
    "contestId": 1526,
    "index": "A",
    "name": "Mean Inequality",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "sortings"
    ]
  },
  {
    "id": "113/D",
    "contestId": 113,
    "index": "D",
    "name": "Museum",
    "rating": 2700,
    "tags": [
      "math",
      "matrices",
      "probabilities"
    ]
  },
  {
    "id": "1093/G",
    "contestId": 1093,
    "index": "G",
    "name": "Multidimensional Queries",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "data structures"
    ]
  },
  {
    "id": "1210/F1",
    "contestId": 1210,
    "index": "F1",
    "name": "Marek and Matching (easy version)",
    "rating": 3100,
    "tags": [
      "brute force",
      "probabilities"
    ]
  },
  {
    "id": "888/A",
    "contestId": 888,
    "index": "A",
    "name": "Local Extrema",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "888/C",
    "contestId": 888,
    "index": "C",
    "name": "K-Dominant Character",
    "rating": 1400,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1652/G",
    "contestId": 1652,
    "index": "G",
    "name": "Snowy Mountain",
    "rating": 2900,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "1736/A",
    "contestId": 1736,
    "index": "A",
    "name": "Make A Equal to B",
    "rating": 800,
    "tags": [
      "brute force",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1517/F",
    "contestId": 1517,
    "index": "F",
    "name": "Reunion",
    "rating": 3200,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1791/E",
    "contestId": 1791,
    "index": "E",
    "name": "Negatives and Positives",
    "rating": 1100,
    "tags": [
      "dp",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "639/A",
    "contestId": 639,
    "index": "A",
    "name": "Bear and Displayed Friends",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1155/F",
    "contestId": 1155,
    "index": "F",
    "name": "Delivery Oligopoly",
    "rating": 2800,
    "tags": [
      "brute force",
      "dp",
      "graphs"
    ]
  },
  {
    "id": "1789/C",
    "contestId": 1789,
    "index": "C",
    "name": "Serval and Toxel's Arrays",
    "rating": 1500,
    "tags": [
      "combinatorics",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "351/B",
    "contestId": 351,
    "index": "B",
    "name": "Jeff and Furik",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "901/C",
    "contestId": 901,
    "index": "C",
    "name": "Bipartite Segments",
    "rating": 2300,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs",
      "two pointers"
    ]
  },
  {
    "id": "771/B",
    "contestId": 771,
    "index": "B",
    "name": "Bear and Different Names",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1868/B2",
    "contestId": 1868,
    "index": "B2",
    "name": "Candy Party (Hard Version)",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dp",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "677/A",
    "contestId": 677,
    "index": "A",
    "name": "Vanya and Fence",
    "rating": 800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1822/G2",
    "contestId": 1822,
    "index": "G2",
    "name": "Magic Triples (Hard Version)",
    "rating": 2200,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "id": "548/B",
    "contestId": 548,
    "index": "B",
    "name": "Mike and Fun",
    "rating": 1400,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "610/E",
    "contestId": 610,
    "index": "E",
    "name": "Alphabet Permutations",
    "rating": 2500,
    "tags": [
      "data structures",
      "strings"
    ]
  },
  {
    "id": "1409/F",
    "contestId": 1409,
    "index": "F",
    "name": "Subsequences of Length Two",
    "rating": 2100,
    "tags": [
      "dp",
      "strings"
    ]
  },
  {
    "id": "1973/A",
    "contestId": 1973,
    "index": "A",
    "name": "Chess For Three",
    "rating": 900,
    "tags": [
      "brute force",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "400/C",
    "contestId": 400,
    "index": "C",
    "name": "Inna and Huge Candy Matrix",
    "rating": 1500,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1210/C",
    "contestId": 1210,
    "index": "C",
    "name": "Kamil and Making a Stream",
    "rating": 2000,
    "tags": [
      "math",
      "number theory",
      "trees"
    ]
  },
  {
    "id": "1817/B",
    "contestId": 1817,
    "index": "B",
    "name": "Fish Graph",
    "rating": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1476/F",
    "contestId": 1476,
    "index": "F",
    "name": "Lanterns",
    "rating": 3000,
    "tags": [
      "binary search",
      "data structures",
      "dp"
    ]
  },
  {
    "id": "1420/E",
    "contestId": 1420,
    "index": "E",
    "name": "Battle Lemmings",
    "rating": 2500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1869/A",
    "contestId": 1869,
    "index": "A",
    "name": "Make It Zero",
    "rating": 900,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1732/B",
    "contestId": 1732,
    "index": "B",
    "name": "Ugu",
    "rating": 900,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1097/E",
    "contestId": 1097,
    "index": "E",
    "name": "Egor and an RPG game",
    "rating": 3400,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1420/A",
    "contestId": 1420,
    "index": "A",
    "name": "Cubes Sorting",
    "rating": 900,
    "tags": [
      "math",
      "sortings"
    ]
  },
  {
    "id": "1822/E",
    "contestId": 1822,
    "index": "E",
    "name": "Making Anti-Palindromes",
    "rating": 1600,
    "tags": [
      "greedy",
      "math",
      "strings"
    ]
  },
  {
    "id": "1789/A",
    "contestId": 1789,
    "index": "A",
    "name": "Serval and Mocha's Array",
    "rating": 800,
    "tags": [
      "brute force",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1619/G",
    "contestId": 1619,
    "index": "G",
    "name": "Unusual Minesweeper",
    "rating": 2000,
    "tags": [
      "binary search",
      "dfs and similar",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1569/F",
    "contestId": 1569,
    "index": "F",
    "name": "Palindromic Hamiltonian Path",
    "rating": 3000,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp",
      "graphs",
      "hashing"
    ]
  },
  {
    "id": "1537/F",
    "contestId": 1537,
    "index": "F",
    "name": "Figure Fixing",
    "rating": 2200,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1656/D",
    "contestId": 1656,
    "index": "D",
    "name": "K-good",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1369/E",
    "contestId": 1369,
    "index": "E",
    "name": "DeadLee",
    "rating": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1062/D",
    "contestId": 1062,
    "index": "D",
    "name": "Fun with Integers",
    "rating": 1800,
    "tags": [
      "dfs and similar",
      "graphs",
      "implementation",
      "math"
    ]
  },
  {
    "id": "550/C",
    "contestId": 550,
    "index": "C",
    "name": "Divisibility by Eight",
    "rating": 1500,
    "tags": [
      "brute force",
      "dp",
      "math"
    ]
  },
  {
    "id": "1425/B",
    "contestId": 1425,
    "index": "B",
    "name": "Blue and Red of Our Faculty!",
    "rating": 2600,
    "tags": [
      "divide and conquer",
      "dp"
    ]
  },
  {
    "id": "1732/A",
    "contestId": 1732,
    "index": "A",
    "name": "Bestie",
    "rating": 1000,
    "tags": [
      "brute force",
      "combinatorics",
      "constructive algorithms",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1210/A",
    "contestId": 1210,
    "index": "A",
    "name": "Anadi and Domino",
    "rating": 1700,
    "tags": [
      "brute force",
      "graphs"
    ]
  },
  {
    "id": "1399/D",
    "contestId": 1399,
    "index": "D",
    "name": "Binary String To Subsequences",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "165/C",
    "contestId": 165,
    "index": "C",
    "name": "Another Problem on Strings",
    "rating": 1600,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "math",
      "strings",
      "two pointers"
    ]
  },
  {
    "id": "993/B",
    "contestId": 993,
    "index": "B",
    "name": "Open Communication",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "brute force"
    ]
  },
  {
    "id": "1097/G",
    "contestId": 1097,
    "index": "G",
    "name": "Vladislav and a Great Legend",
    "rating": 3000,
    "tags": [
      "combinatorics",
      "dp",
      "trees"
    ]
  },
  {
    "id": "803/A",
    "contestId": 803,
    "index": "A",
    "name": "Maximal Binary Matrix",
    "rating": 1400,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "429/A",
    "contestId": 429,
    "index": "A",
    "name": "Xor-tree",
    "rating": 1300,
    "tags": [
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "302/B",
    "contestId": 302,
    "index": "B",
    "name": "Eugeny and Play List",
    "rating": 1200,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1791/F",
    "contestId": 1791,
    "index": "F",
    "name": "Range Update Point Query",
    "rating": 1500,
    "tags": [
      "binary search",
      "brute force",
      "data structures"
    ]
  },
  {
    "id": "364/E",
    "contestId": 364,
    "index": "E",
    "name": "Empty Rectangles",
    "rating": 3000,
    "tags": [
      "divide and conquer",
      "two pointers"
    ]
  },
  {
    "id": "1733/D2",
    "contestId": 1733,
    "index": "D2",
    "name": "Zero-One (Hard Version)",
    "rating": 2000,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "123/E",
    "contestId": 123,
    "index": "E",
    "name": "Maze",
    "rating": 2500,
    "tags": [
      "dfs and similar",
      "dp",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "405/C",
    "contestId": 405,
    "index": "C",
    "name": "Unusual Product",
    "rating": 1600,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "1898/B",
    "contestId": 1898,
    "index": "B",
    "name": "Milena and Admirer",
    "rating": 1500,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "1558/C",
    "contestId": 1558,
    "index": "C",
    "name": "Bottom-Tier Reversals",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1214/G",
    "contestId": 1214,
    "index": "G",
    "name": "Feeling Good",
    "rating": 3200,
    "tags": [
      "bitmasks",
      "data structures"
    ]
  },
  {
    "id": "865/D",
    "contestId": 865,
    "index": "D",
    "name": "Buy Low Sell High",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1239/D",
    "contestId": 1239,
    "index": "D",
    "name": "Catowice City",
    "rating": 2400,
    "tags": [
      "2-sat",
      "dfs and similar",
      "graph matchings",
      "graphs"
    ]
  },
  {
    "id": "683/F",
    "contestId": 683,
    "index": "F",
    "name": "Reformat the String",
    "rating": 1800,
    "tags": [
      "*special"
    ]
  },
  {
    "id": "1765/L",
    "contestId": 1765,
    "index": "L",
    "name": "Project Manager",
    "rating": 2400,
    "tags": [
      "brute force",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1924/D",
    "contestId": 1924,
    "index": "D",
    "name": "Balanced Subsequences",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1881/E",
    "contestId": 1881,
    "index": "E",
    "name": "Block Sequence",
    "rating": 1500,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1225/B2",
    "contestId": 1225,
    "index": "B2",
    "name": "TV Subscriptions (Hard Version)",
    "rating": 1300,
    "tags": [
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "1946/A",
    "contestId": 1946,
    "index": "A",
    "name": "Median of an Array",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1195/F",
    "contestId": 1195,
    "index": "F",
    "name": "Geometers Anonymous Club",
    "rating": 2500,
    "tags": [
      "data structures",
      "geometry",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1190/E",
    "contestId": 1190,
    "index": "E",
    "name": "Tokitsukaze and Explosion",
    "rating": 3100,
    "tags": [
      "binary search",
      "greedy"
    ]
  },
  {
    "id": "643/E",
    "contestId": 643,
    "index": "E",
    "name": "Bear and Destroying Subtrees",
    "rating": 2700,
    "tags": [
      "dp",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "1214/H",
    "contestId": 1214,
    "index": "H",
    "name": "Tiles Placement",
    "rating": 2800,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1584/C",
    "contestId": 1584,
    "index": "C",
    "name": "Two Arrays",
    "rating": 900,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1732/C1",
    "contestId": 1732,
    "index": "C1",
    "name": "Sheikh (Easy version)",
    "rating": 1800,
    "tags": [
      "binary search",
      "bitmasks",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "590/B",
    "contestId": 590,
    "index": "B",
    "name": "Chip 'n Dale Rescue Rangers",
    "rating": 2100,
    "tags": [
      "binary search",
      "geometry",
      "math"
    ]
  },
  {
    "id": "1399/B",
    "contestId": 1399,
    "index": "B",
    "name": "Gifts Fixing",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1982/A",
    "contestId": 1982,
    "index": "A",
    "name": "Soccer",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1446/D2",
    "contestId": 1446,
    "index": "D2",
    "name": "Frequency Problem (Hard Version)",
    "rating": 3000,
    "tags": [
      "data structures",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1267/D",
    "contestId": 1267,
    "index": "D",
    "name": "DevOps Best Practices",
    "rating": 2800,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "1946/C",
    "contestId": 1946,
    "index": "C",
    "name": "Tree Cutting",
    "rating": 1600,
    "tags": [
      "binary search",
      "dp",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1077/B",
    "contestId": 1077,
    "index": "B",
    "name": "Disturbed People",
    "rating": 1000,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1909/C",
    "contestId": 1909,
    "index": "C",
    "name": "Heavy Intervals",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1987/G2",
    "contestId": 1987,
    "index": "G2",
    "name": "Spinning Round (Hard Version)",
    "rating": 3500,
    "tags": [
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1667/D",
    "contestId": 1667,
    "index": "D",
    "name": "Edge Elimination",
    "rating": 2900,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "1997/B",
    "contestId": 1997,
    "index": "B",
    "name": "Make Three Regions",
    "rating": 1100,
    "tags": [
      "constructive algorithms",
      "two pointers"
    ]
  },
  {
    "id": "1841/D",
    "contestId": 1841,
    "index": "D",
    "name": "Pairs of Segments",
    "rating": 2000,
    "tags": [
      "data structures",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1208/H",
    "contestId": 1208,
    "index": "H",
    "name": "Red Blue Tree",
    "rating": 3500,
    "tags": [
      "data structures",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1703/E",
    "contestId": 1703,
    "index": "E",
    "name": "Mirror Grid",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1748/D",
    "contestId": 1748,
    "index": "D",
    "name": "ConstructOR",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "chinese remainder theorem",
      "combinatorics",
      "constructive algorithms",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1005/F",
    "contestId": 1005,
    "index": "F",
    "name": "Berland and the Shortest Paths",
    "rating": 2100,
    "tags": [
      "brute force",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1446/D1",
    "contestId": 1446,
    "index": "D1",
    "name": "Frequency Problem (Easy Version)",
    "rating": 2600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1817/A",
    "contestId": 1817,
    "index": "A",
    "name": "Almost Increasing Subsequence",
    "rating": 1500,
    "tags": [
      "binary search",
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1790/G",
    "contestId": 1790,
    "index": "G",
    "name": "Tokens on Graph",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1029/E",
    "contestId": 1029,
    "index": "E",
    "name": "Tree with Small Distances",
    "rating": 2100,
    "tags": [
      "dp",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1986/E",
    "contestId": 1986,
    "index": "E",
    "name": "Beautiful Array",
    "rating": 1700,
    "tags": [
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "609/F",
    "contestId": 609,
    "index": "F",
    "name": "Frogs and mosquitoes",
    "rating": 2500,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1898/D",
    "contestId": 1898,
    "index": "D",
    "name": "Absolute Beauty",
    "rating": 1900,
    "tags": [
      "greedy",
      "math"
    ]
  },
  {
    "id": "200/A",
    "contestId": 200,
    "index": "A",
    "name": "Cinema",
    "rating": 2400,
    "tags": [
      "brute force",
      "data structures"
    ]
  },
  {
    "id": "1986/B",
    "contestId": 1986,
    "index": "B",
    "name": "Matrix Stabilization",
    "rating": 1000,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1986/F",
    "contestId": 1986,
    "index": "F",
    "name": "Non-academic Problem",
    "rating": 1900,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1884/E",
    "contestId": 1884,
    "index": "E",
    "name": "Hard Design",
    "rating": 2800,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1446/F",
    "contestId": 1446,
    "index": "F",
    "name": "Line Distance",
    "rating": 3200,
    "tags": [
      "binary search",
      "data structures",
      "geometry"
    ]
  },
  {
    "id": "1558/E",
    "contestId": 1558,
    "index": "E",
    "name": "Down Below",
    "rating": 3000,
    "tags": [
      "binary search",
      "dfs and similar",
      "graphs",
      "greedy",
      "meet-in-the-middle",
      "shortest paths"
    ]
  },
  {
    "id": "1765/F",
    "contestId": 1765,
    "index": "F",
    "name": "Chemistry Lab",
    "rating": 2200,
    "tags": [
      "dp",
      "geometry",
      "probabilities"
    ]
  },
  {
    "id": "1575/J",
    "contestId": 1575,
    "index": "J",
    "name": "Jeopardy of Dropped Balls",
    "rating": 1500,
    "tags": [
      "binary search",
      "brute force",
      "dsu",
      "implementation"
    ]
  },
  {
    "id": "1693/E",
    "contestId": 1693,
    "index": "E",
    "name": "Outermost Maximums",
    "rating": 3400,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1323/B",
    "contestId": 1323,
    "index": "B",
    "name": "Count Subrectangles",
    "rating": 1500,
    "tags": [
      "binary search",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "901/D",
    "contestId": 901,
    "index": "D",
    "name": "Weighting a Tree",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "1102/E",
    "contestId": 1102,
    "index": "E",
    "name": "Monotonic Renumeration",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "sortings"
    ]
  },
  {
    "id": "620/E",
    "contestId": 620,
    "index": "E",
    "name": "New Year Tree",
    "rating": 2100,
    "tags": [
      "bitmasks",
      "data structures",
      "trees"
    ]
  },
  {
    "id": "293/B",
    "contestId": 293,
    "index": "B",
    "name": "Distinct Paths",
    "rating": 2700,
    "tags": [
      "brute force",
      "combinatorics"
    ]
  },
  {
    "id": "1225/B1",
    "contestId": 1225,
    "index": "B1",
    "name": "TV Subscriptions (Easy Version)",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1316/D",
    "contestId": 1316,
    "index": "D",
    "name": "Nash Matrix",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "1652/C",
    "contestId": 1652,
    "index": "C",
    "name": "Alice and the Cake",
    "rating": 1400,
    "tags": [
      "data structures",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "713/D",
    "contestId": 713,
    "index": "D",
    "name": "Animals and Puzzle",
    "rating": 2700,
    "tags": [
      "binary search",
      "data structures"
    ]
  },
  {
    "id": "1381/D",
    "contestId": 1381,
    "index": "D",
    "name": "The Majestic Brown Tree Snake",
    "rating": 3000,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "337/D",
    "contestId": 337,
    "index": "D",
    "name": "Book of Evil",
    "rating": 2000,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dp",
      "trees"
    ]
  },
  {
    "id": "620/F",
    "contestId": 620,
    "index": "F",
    "name": "Xors on Segments",
    "rating": 2800,
    "tags": [
      "data structures",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1915/F",
    "contestId": 1915,
    "index": "F",
    "name": "Greetings",
    "rating": 1500,
    "tags": [
      "data structures",
      "divide and conquer",
      "sortings"
    ]
  },
  {
    "id": "611/A",
    "contestId": 611,
    "index": "A",
    "name": "New Year and Days",
    "rating": 900,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1370/D",
    "contestId": 1370,
    "index": "D",
    "name": "Odd-Even Subsequence",
    "rating": 2000,
    "tags": [
      "binary search",
      "dp",
      "dsu",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1598/E",
    "contestId": 1598,
    "index": "E",
    "name": "Staircases",
    "rating": 2100,
    "tags": [
      "brute force",
      "combinatorics",
      "data structures",
      "dfs and similar",
      "dp",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1779/C",
    "contestId": 1779,
    "index": "C",
    "name": "Least Prefix Sum",
    "rating": 1600,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "159/E",
    "contestId": 159,
    "index": "E",
    "name": "Zebra Tower",
    "rating": 1700,
    "tags": [
      "*special",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "218/B",
    "contestId": 218,
    "index": "B",
    "name": "Airport",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1858/E1",
    "contestId": 1858,
    "index": "E1",
    "name": "Rollbacks (Easy Version)",
    "rating": 2500,
    "tags": [
      "brute force",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1312/E",
    "contestId": 1312,
    "index": "E",
    "name": "Array Shrinking",
    "rating": 2100,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1605/A",
    "contestId": 1605,
    "index": "A",
    "name": "A.M. Deviation",
    "rating": 800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1858/E2",
    "contestId": 1858,
    "index": "E2",
    "name": "Rollbacks (Hard Version)",
    "rating": 2600,
    "tags": [
      "data structures",
      "interactive",
      "trees"
    ]
  },
  {
    "id": "1909/F2",
    "contestId": 1909,
    "index": "F2",
    "name": "Small Permutation Problem (Hard Version)",
    "rating": 2500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1209/H",
    "contestId": 1209,
    "index": "H",
    "name": "Moving Walkways",
    "rating": 3300,
    "tags": [
      "data structures",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1575/D",
    "contestId": 1575,
    "index": "D",
    "name": "Divisible by Twenty-Five",
    "rating": 1800,
    "tags": [
      "brute force",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "id": "1788/F",
    "contestId": 1788,
    "index": "F",
    "name": "XOR, Tree, and Queries",
    "rating": 2500,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "1761/F1",
    "contestId": 1761,
    "index": "F1",
    "name": "Anti-median (Easy Version)",
    "rating": 3100,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1359/F",
    "contestId": 1359,
    "index": "F",
    "name": "RC Kaboom Show",
    "rating": 2900,
    "tags": [
      "binary search",
      "brute force",
      "data structures",
      "geometry",
      "math"
    ]
  },
  {
    "id": "558/E",
    "contestId": 558,
    "index": "E",
    "name": "A Simple Task",
    "rating": 2300,
    "tags": [
      "data structures",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "1761/F2",
    "contestId": 1761,
    "index": "F2",
    "name": "Anti-median (Hard Version)",
    "rating": 3500,
    "tags": [
      "combinatorics",
      "dp",
      "math"
    ]
  },
  {
    "id": "1761/E",
    "contestId": 1761,
    "index": "E",
    "name": "Make It Connected",
    "rating": 2400,
    "tags": [
      "binary search",
      "brute force",
      "constructive algorithms",
      "dsu",
      "graphs",
      "greedy",
      "matrices",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "1642/A",
    "contestId": 1642,
    "index": "A",
    "name": "Hard Way",
    "rating": 800,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "1946/F",
    "contestId": 1946,
    "index": "F",
    "name": "Nobody is needed",
    "rating": 2500,
    "tags": [
      "2-sat",
      "data structures",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "id": "1575/B",
    "contestId": 1575,
    "index": "B",
    "name": "Building an Amusement Park",
    "rating": 2300,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "id": "1209/F",
    "contestId": 1209,
    "index": "F",
    "name": "Koala and Notebook",
    "rating": 2600,
    "tags": [
      "data structures",
      "dfs and similar",
      "graphs",
      "shortest paths",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1580/E",
    "contestId": 1580,
    "index": "E",
    "name": "Railway Construction",
    "rating": 3400,
    "tags": [
      "brute force",
      "constructive algorithms",
      "data structures",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1822/G1",
    "contestId": 1822,
    "index": "G1",
    "name": "Magic Triples (Easy Version)",
    "rating": 1700,
    "tags": [
      "brute force",
      "data structures",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1210/E",
    "contestId": 1210,
    "index": "E",
    "name": "Wojtek and Card Tricks",
    "rating": 2700,
    "tags": [
      "math"
    ]
  },
  {
    "id": "19/E",
    "contestId": 19,
    "index": "E",
    "name": "Fairy",
    "rating": 2900,
    "tags": [
      "dfs and similar",
      "divide and conquer",
      "dsu"
    ]
  },
  {
    "id": "1692/E",
    "contestId": 1692,
    "index": "E",
    "name": "Binary Deque",
    "rating": 1200,
    "tags": [
      "binary search",
      "implementation",
      "two pointers"
    ]
  },
  {
    "id": "624/A",
    "contestId": 624,
    "index": "A",
    "name": "Save Luke",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "1726/D",
    "contestId": 1726,
    "index": "D",
    "name": "Edge Split",
    "rating": 2000,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "1858/B",
    "contestId": 1858,
    "index": "B",
    "name": "The Walkway",
    "rating": 1500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "431/B",
    "contestId": 431,
    "index": "B",
    "name": "Shower Line",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1788/E",
    "contestId": 1788,
    "index": "E",
    "name": "Sum Over Zero",
    "rating": 2200,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp"
    ]
  },
  {
    "id": "1750/F",
    "contestId": 1750,
    "index": "F",
    "name": "Majority",
    "rating": 2700,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "strings"
    ]
  },
  {
    "id": "200/B",
    "contestId": 200,
    "index": "B",
    "name": "Drinks",
    "rating": 800,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "848/B",
    "contestId": 848,
    "index": "B",
    "name": "Rooter's Song",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "geometry",
      "implementation",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1594/A",
    "contestId": 1594,
    "index": "A",
    "name": "Consecutive Sum Riddle",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "333/D",
    "contestId": 333,
    "index": "D",
    "name": "Characteristics of Rectangles",
    "rating": 2100,
    "tags": [
      "binary search",
      "bitmasks",
      "brute force",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1779/H",
    "contestId": 1779,
    "index": "H",
    "name": "Olympic Team Building",
    "rating": 3500,
    "tags": [
      "brute force",
      "meet-in-the-middle"
    ]
  },
  {
    "id": "919/B",
    "contestId": 919,
    "index": "B",
    "name": "Perfect Number",
    "rating": 1100,
    "tags": [
      "binary search",
      "brute force",
      "dp",
      "implementation",
      "number theory"
    ]
  },
  {
    "id": "992/B",
    "contestId": 992,
    "index": "B",
    "name": "Nastya Studies Informatics",
    "rating": 1600,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1779/D",
    "contestId": 1779,
    "index": "D",
    "name": "Boris and His Amazing Haircut",
    "rating": 1700,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dp",
      "dsu",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1942/D",
    "contestId": 1942,
    "index": "D",
    "name": "Learning to Paint",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "dp",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "229/D",
    "contestId": 229,
    "index": "D",
    "name": "Towers",
    "rating": 2100,
    "tags": [
      "dp",
      "greedy",
      "two pointers"
    ]
  },
  {
    "id": "1463/C",
    "contestId": 1463,
    "index": "C",
    "name": "Busy Robot",
    "rating": 1800,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1452/F",
    "contestId": 1452,
    "index": "F",
    "name": "Divide Powers",
    "rating": 2900,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "594/B",
    "contestId": 594,
    "index": "B",
    "name": "Max and Bike",
    "rating": 2500,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "id": "1598/B",
    "contestId": 1598,
    "index": "B",
    "name": "Groups",
    "rating": 1000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1901/E",
    "contestId": 1901,
    "index": "E",
    "name": "Compressed Tree",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "greedy",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "1137/E",
    "contestId": 1137,
    "index": "E",
    "name": "Train Car Selection",
    "rating": 2700,
    "tags": [
      "data structures",
      "greedy"
    ]
  },
  {
    "id": "1901/C",
    "contestId": 1901,
    "index": "C",
    "name": "Add, Divide and Floor",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "748/F",
    "contestId": 748,
    "index": "F",
    "name": "Santa Clauses and a Soccer Championship",
    "rating": 2300,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1901/F",
    "contestId": 1901,
    "index": "F",
    "name": "Landscaping",
    "rating": 2900,
    "tags": [
      "binary search",
      "geometry",
      "two pointers"
    ]
  },
  {
    "id": "1977/C",
    "contestId": 1977,
    "index": "C",
    "name": "Nikita and LCM",
    "rating": 1900,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "greedy",
      "math",
      "number theory",
      "sortings"
    ]
  },
  {
    "id": "1656/I",
    "contestId": 1656,
    "index": "I",
    "name": "Neighbour Ordering",
    "rating": 3500,
    "tags": [
      "constructive algorithms",
      "graphs"
    ]
  },
  {
    "id": "1513/E",
    "contestId": 1513,
    "index": "E",
    "name": "Cost Equilibrium",
    "rating": 2300,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1854/A2",
    "contestId": 1854,
    "index": "A2",
    "name": "Dual (Hard Version)",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1638/C",
    "contestId": 1638,
    "index": "C",
    "name": "Inversion Graph",
    "rating": 1300,
    "tags": [
      "data structures",
      "dsu",
      "graphs",
      "math"
    ]
  },
  {
    "id": "643/C",
    "contestId": 643,
    "index": "C",
    "name": "Levels and Regions",
    "rating": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "1696/E",
    "contestId": 1696,
    "index": "E",
    "name": "Placing Jinas",
    "rating": 2000,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1540/E",
    "contestId": 1540,
    "index": "E",
    "name": "Tasty Dishes",
    "rating": 3500,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "id": "1312/D",
    "contestId": 1312,
    "index": "D",
    "name": "Count the Arrays",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "math"
    ]
  },
  {
    "id": "1788/D",
    "contestId": 1788,
    "index": "D",
    "name": "Moving Dots",
    "rating": 2000,
    "tags": [
      "binary search",
      "brute force",
      "combinatorics",
      "math",
      "two pointers"
    ]
  },
  {
    "id": "405/E",
    "contestId": 405,
    "index": "E",
    "name": "Graph Cutting",
    "rating": 2300,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "919/C",
    "contestId": 919,
    "index": "C",
    "name": "Seat Arrangements",
    "rating": 1300,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1790/F",
    "contestId": 1790,
    "index": "F",
    "name": "Timofey and Black-White Tree",
    "rating": 2100,
    "tags": [
      "brute force",
      "dfs and similar",
      "divide and conquer",
      "graphs",
      "greedy",
      "math",
      "shortest paths",
      "trees"
    ]
  },
  {
    "id": "513/A",
    "contestId": 513,
    "index": "A",
    "name": "Game",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1707/D",
    "contestId": 1707,
    "index": "D",
    "name": "Partial Virtual Trees",
    "rating": 3000,
    "tags": [
      "combinatorics",
      "dfs and similar",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "1807/D",
    "contestId": 1807,
    "index": "D",
    "name": "Odd Queries",
    "rating": 900,
    "tags": [
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "276/E",
    "contestId": 276,
    "index": "E",
    "name": "Little Girl and Problem on Trees",
    "rating": 2100,
    "tags": [
      "data structures",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "1726/G",
    "contestId": 1726,
    "index": "G",
    "name": "A Certain Magical Party",
    "rating": 3300,
    "tags": [
      "combinatorics",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "977/E",
    "contestId": 977,
    "index": "E",
    "name": "Cyclic Components",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1185/D",
    "contestId": 1185,
    "index": "D",
    "name": "Extra Element",
    "rating": 1700,
    "tags": [
      "implementation",
      "math"
    ]
  },
  {
    "id": "605/E",
    "contestId": 605,
    "index": "E",
    "name": "Intergalaxy Trips",
    "rating": 2700,
    "tags": [
      "probabilities",
      "shortest paths"
    ]
  },
  {
    "id": "788/B",
    "contestId": 788,
    "index": "B",
    "name": "Weird journey",
    "rating": 2100,
    "tags": [
      "combinatorics",
      "constructive algorithms",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1696/C",
    "contestId": 1696,
    "index": "C",
    "name": "Fishingprince Plays With Array",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1178/E",
    "contestId": 1178,
    "index": "E",
    "name": "Archaeology",
    "rating": 1900,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "strings"
    ]
  },
  {
    "id": "986/A",
    "contestId": 986,
    "index": "A",
    "name": "Fair",
    "rating": 1600,
    "tags": [
      "graphs",
      "greedy",
      "number theory",
      "shortest paths"
    ]
  },
  {
    "id": "1428/A",
    "contestId": 1428,
    "index": "A",
    "name": "Box is Pull",
    "rating": 800,
    "tags": [
      "math"
    ]
  },
  {
    "id": "102/A",
    "contestId": 102,
    "index": "A",
    "name": "Clothes",
    "rating": 1200,
    "tags": [
      "brute force"
    ]
  },
  {
    "id": "1368/E",
    "contestId": 1368,
    "index": "E",
    "name": "Ski Accidents",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1492/E",
    "contestId": 1492,
    "index": "E",
    "name": "Almost Fault-Tolerant Database",
    "rating": 2500,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dfs and similar",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "513/F1",
    "contestId": 513,
    "index": "F1",
    "name": "Scaygerboss",
    "rating": 2700,
    "tags": [
      "flows"
    ]
  },
  {
    "id": "594/D",
    "contestId": 594,
    "index": "D",
    "name": "REQ",
    "rating": 2500,
    "tags": [
      "data structures",
      "number theory"
    ]
  },
  {
    "id": "1726/H",
    "contestId": 1726,
    "index": "H",
    "name": "Mainak and the Bleeding Polygon",
    "rating": 3500,
    "tags": [
      "binary search",
      "geometry",
      "implementation",
      "math"
    ]
  },
  {
    "id": "229/C",
    "contestId": 229,
    "index": "C",
    "name": "Triangles",
    "rating": 1900,
    "tags": [
      "combinatorics",
      "graphs",
      "math"
    ]
  },
  {
    "id": "696/B",
    "contestId": 696,
    "index": "B",
    "name": "Puzzles",
    "rating": 1700,
    "tags": [
      "dfs and similar",
      "math",
      "probabilities",
      "trees"
    ]
  },
  {
    "id": "1178/A",
    "contestId": 1178,
    "index": "A",
    "name": "Prime Minister",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "191/D",
    "contestId": 191,
    "index": "D",
    "name": "Metro Scheme",
    "rating": 2700,
    "tags": [
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "1919/B",
    "contestId": 1919,
    "index": "B",
    "name": "Plus-Minus Split",
    "rating": 800,
    "tags": [
      "greedy"
    ]
  },
  {
    "id": "1609/A",
    "contestId": 1609,
    "index": "A",
    "name": "Divide and Multiply",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1025/E",
    "contestId": 1025,
    "index": "E",
    "name": "Colored Cubes",
    "rating": 2700,
    "tags": [
      "constructive algorithms",
      "implementation",
      "matrices"
    ]
  },
  {
    "id": "1744/D",
    "contestId": 1744,
    "index": "D",
    "name": "Divisibility by 2^n",
    "rating": 1200,
    "tags": [
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "349/B",
    "contestId": 349,
    "index": "B",
    "name": "Color the Fence",
    "rating": 1700,
    "tags": [
      "data structures",
      "dp",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1039/D",
    "contestId": 1039,
    "index": "D",
    "name": "You Are Given a Tree",
    "rating": 2800,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "id": "424/B",
    "contestId": 424,
    "index": "B",
    "name": "Megacity",
    "rating": 1200,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "492/B",
    "contestId": 492,
    "index": "B",
    "name": "Vanya and Lanterns",
    "rating": 1200,
    "tags": [
      "binary search",
      "implementation",
      "math",
      "sortings"
    ]
  },
  {
    "id": "1854/A1",
    "contestId": 1854,
    "index": "A1",
    "name": "Dual (Easy Version)",
    "rating": 1400,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "840/E",
    "contestId": 840,
    "index": "E",
    "name": "In a Trap",
    "rating": 3200,
    "tags": [
      "trees"
    ]
  },
  {
    "id": "1620/E",
    "contestId": 1620,
    "index": "E",
    "name": "Replace the Numbers",
    "rating": 1900,
    "tags": [
      "constructive algorithms",
      "data structures",
      "dsu",
      "implementation"
    ]
  },
  {
    "id": "1722/E",
    "contestId": 1722,
    "index": "E",
    "name": "Counting Rectangles",
    "rating": 1600,
    "tags": [
      "brute force",
      "data structures",
      "dp",
      "implementation"
    ]
  },
  {
    "id": "1861/D",
    "contestId": 1861,
    "index": "D",
    "name": "Sorting By Multiplication",
    "rating": 1800,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "911/D",
    "contestId": 911,
    "index": "D",
    "name": "Inversion Counting",
    "rating": 1800,
    "tags": [
      "brute force",
      "math"
    ]
  },
  {
    "id": "1010/A",
    "contestId": 1010,
    "index": "A",
    "name": "Fly",
    "rating": 1500,
    "tags": [
      "binary search",
      "math"
    ]
  },
  {
    "id": "1039/C",
    "contestId": 1039,
    "index": "C",
    "name": "Network Safety",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "math",
      "sortings"
    ]
  },
  {
    "id": "558/C",
    "contestId": 558,
    "index": "C",
    "name": "Amr and Chemistry",
    "rating": 1900,
    "tags": [
      "brute force",
      "graphs",
      "greedy",
      "math",
      "shortest paths"
    ]
  },
  {
    "id": "1930/G",
    "contestId": 1930,
    "index": "G",
    "name": "Prefix Max Set Counting",
    "rating": 3100,
    "tags": [
      "data structures",
      "dp",
      "trees"
    ]
  },
  {
    "id": "164/D",
    "contestId": 164,
    "index": "D",
    "name": "Minimum Diameter",
    "rating": 3100,
    "tags": [
      "binary search",
      "brute force"
    ]
  },
  {
    "id": "1364/D",
    "contestId": 1364,
    "index": "D",
    "name": "Ehab's Last Corollary",
    "rating": 2100,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "761/E",
    "contestId": 761,
    "index": "E",
    "name": "Dasha and Puzzle",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "580/C",
    "contestId": 580,
    "index": "C",
    "name": "Kefa and Park",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "graphs",
      "trees"
    ]
  },
  {
    "id": "446/D",
    "contestId": 446,
    "index": "D",
    "name": "DZY Loves Games",
    "rating": 2800,
    "tags": [
      "math",
      "matrices",
      "probabilities"
    ]
  },
  {
    "id": "911/F",
    "contestId": 911,
    "index": "F",
    "name": "Tree Destruction",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "1844/H",
    "contestId": 1844,
    "index": "H",
    "name": "Multiple of Three Cycles",
    "rating": 3400,
    "tags": [
      "combinatorics",
      "data structures",
      "dp",
      "dsu",
      "math"
    ]
  },
  {
    "id": "1452/E",
    "contestId": 1452,
    "index": "E",
    "name": "Two Editorials",
    "rating": 2500,
    "tags": [
      "brute force",
      "dp",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "191/C",
    "contestId": 191,
    "index": "C",
    "name": "Fools and Roads",
    "rating": 1900,
    "tags": [
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "1861/F",
    "contestId": 1861,
    "index": "F",
    "name": "Four Suits",
    "rating": 3200,
    "tags": [
      "binary search",
      "bitmasks",
      "flows",
      "greedy"
    ]
  },
  {
    "id": "605/C",
    "contestId": 605,
    "index": "C",
    "name": "Freelancer's Dreams",
    "rating": 2400,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "312/B",
    "contestId": 312,
    "index": "B",
    "name": "Archer",
    "rating": 1300,
    "tags": [
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1717/F",
    "contestId": 1717,
    "index": "F",
    "name": "Madoka and The First Session",
    "rating": 2500,
    "tags": [
      "constructive algorithms",
      "flows",
      "graph matchings",
      "graphs",
      "implementation"
    ]
  },
  {
    "id": "920/E",
    "contestId": 920,
    "index": "E",
    "name": "Connected Components?",
    "rating": 2100,
    "tags": [
      "data structures",
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "920/C",
    "contestId": 920,
    "index": "C",
    "name": "Swap Adjacent Elements",
    "rating": 1400,
    "tags": [
      "dfs and similar",
      "greedy",
      "math",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "1861/B",
    "contestId": 1861,
    "index": "B",
    "name": "Two Binary Strings",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "813/D",
    "contestId": 813,
    "index": "D",
    "name": "Two Melodies",
    "rating": 2600,
    "tags": [
      "dp",
      "flows"
    ]
  },
  {
    "id": "1646/B",
    "contestId": 1646,
    "index": "B",
    "name": "Quality vs Quantity",
    "rating": 800,
    "tags": [
      "brute force",
      "constructive algorithms",
      "greedy",
      "sortings",
      "two pointers"
    ]
  },
  {
    "id": "359/A",
    "contestId": 359,
    "index": "A",
    "name": "Table",
    "rating": 1000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "implementation"
    ]
  },
  {
    "id": "1503/A",
    "contestId": 1503,
    "index": "A",
    "name": "Balance the Bits",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "greedy"
    ]
  },
  {
    "id": "1185/E",
    "contestId": 1185,
    "index": "E",
    "name": "Polycarp and Snakes",
    "rating": 2000,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "359/E",
    "contestId": 359,
    "index": "E",
    "name": "Neatness",
    "rating": 2400,
    "tags": [
      "constructive algorithms",
      "dfs and similar"
    ]
  },
  {
    "id": "1286/F",
    "contestId": 1286,
    "index": "F",
    "name": "Harry The Potter",
    "rating": 3100,
    "tags": [
      "brute force",
      "constructive algorithms",
      "dp",
      "fft",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1467/E",
    "contestId": 1467,
    "index": "E",
    "name": "Distinctive Roots in a Tree",
    "rating": 2500,
    "tags": [
      "data structures",
      "dfs and similar",
      "dp",
      "trees"
    ]
  },
  {
    "id": "370/E",
    "contestId": 370,
    "index": "E",
    "name": "Summer Reading",
    "rating": 2500,
    "tags": [
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1677/F",
    "contestId": 1677,
    "index": "F",
    "name": "Tokitsukaze and Gems",
    "rating": 3500,
    "tags": [
      "dp",
      "math"
    ]
  },
  {
    "id": "1395/B",
    "contestId": 1395,
    "index": "B",
    "name": "Boboniu Plays Chess",
    "rating": 1100,
    "tags": [
      "constructive algorithms"
    ]
  },
  {
    "id": "208/E",
    "contestId": 208,
    "index": "E",
    "name": "Blood Cousins",
    "rating": 2100,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "trees"
    ]
  },
  {
    "id": "149/A",
    "contestId": 149,
    "index": "A",
    "name": "Business trip",
    "rating": 900,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1879/C",
    "contestId": 1879,
    "index": "C",
    "name": "Make it Alternating",
    "rating": 1300,
    "tags": [
      "combinatorics",
      "dp",
      "greedy"
    ]
  },
  {
    "id": "1905/A",
    "contestId": 1905,
    "index": "A",
    "name": "Constructive Problems",
    "rating": 800,
    "tags": [
      "constructive algorithms",
      "math"
    ]
  },
  {
    "id": "1624/D",
    "contestId": 1624,
    "index": "D",
    "name": "Palindromes Coloring",
    "rating": 1400,
    "tags": [
      "binary search",
      "greedy",
      "sortings",
      "strings"
    ]
  },
  {
    "id": "832/C",
    "contestId": 832,
    "index": "C",
    "name": "Strange Radiation",
    "rating": 2500,
    "tags": [
      "binary search",
      "implementation",
      "math"
    ]
  },
  {
    "id": "149/B",
    "contestId": 149,
    "index": "B",
    "name": "Martian Clock",
    "rating": 1600,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "696/E",
    "contestId": 696,
    "index": "E",
    "name": "...Wait for it...",
    "rating": 3000,
    "tags": [
      "data structures",
      "dsu",
      "trees"
    ]
  },
  {
    "id": "1798/A",
    "contestId": 1798,
    "index": "A",
    "name": "Showstopper",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1548/A",
    "contestId": 1548,
    "index": "A",
    "name": "Web of Lies",
    "rating": 1400,
    "tags": [
      "brute force",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "817/F",
    "contestId": 817,
    "index": "F",
    "name": "MEX Queries",
    "rating": 2300,
    "tags": [
      "binary search",
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1178/D",
    "contestId": 1178,
    "index": "D",
    "name": "Prime Graph",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "794/D",
    "contestId": 794,
    "index": "D",
    "name": "Labelling Cities",
    "rating": 2400,
    "tags": [
      "dfs and similar",
      "graphs",
      "hashing"
    ]
  },
  {
    "id": "20/B",
    "contestId": 20,
    "index": "B",
    "name": "Equation",
    "rating": 2000,
    "tags": [
      "math"
    ]
  },
  {
    "id": "696/F",
    "contestId": 696,
    "index": "F",
    "name": "...Dary!",
    "rating": 3300,
    "tags": [
      "binary search",
      "geometry",
      "two pointers"
    ]
  },
  {
    "id": "884/F",
    "contestId": 884,
    "index": "F",
    "name": "Anti-Palindromize",
    "rating": 2500,
    "tags": [
      "flows",
      "graphs",
      "greedy"
    ]
  },
  {
    "id": "482/C",
    "contestId": 482,
    "index": "C",
    "name": "Game with Strings",
    "rating": 2600,
    "tags": [
      "bitmasks",
      "dp",
      "probabilities"
    ]
  },
  {
    "id": "919/F",
    "contestId": 919,
    "index": "F",
    "name": "A Game With Numbers",
    "rating": 2600,
    "tags": [
      "games",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1615/H",
    "contestId": 1615,
    "index": "H",
    "name": "Reindeer Games",
    "rating": 3000,
    "tags": [
      "binary search",
      "constructive algorithms",
      "data structures",
      "divide and conquer",
      "flows",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1181/D",
    "contestId": 1181,
    "index": "D",
    "name": "Irrigation",
    "rating": 2200,
    "tags": [
      "binary search",
      "data structures",
      "implementation",
      "sortings",
      "trees",
      "two pointers"
    ]
  },
  {
    "id": "750/H",
    "contestId": 750,
    "index": "H",
    "name": "New Year and Snowy Grid",
    "rating": 3500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs",
      "interactive"
    ]
  },
  {
    "id": "1605/B",
    "contestId": 1605,
    "index": "B",
    "name": "Reverse Sort",
    "rating": 1000,
    "tags": [
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1391/E",
    "contestId": 1391,
    "index": "E",
    "name": "Pairs of Pairs",
    "rating": 2600,
    "tags": [
      "constructive algorithms",
      "dfs and similar",
      "graphs",
      "greedy",
      "trees"
    ]
  },
  {
    "id": "982/F",
    "contestId": 982,
    "index": "F",
    "name": "The Meeting Place Cannot Be Changed",
    "rating": 2700,
    "tags": [
      "dfs and similar",
      "graphs"
    ]
  },
  {
    "id": "482/E",
    "contestId": 482,
    "index": "E",
    "name": "ELCA",
    "rating": 3200,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "239/B",
    "contestId": 239,
    "index": "B",
    "name": "Easy Tape Programming",
    "rating": 1500,
    "tags": [
      "brute force",
      "implementation"
    ]
  },
  {
    "id": "1832/A",
    "contestId": 1832,
    "index": "A",
    "name": "New Palindrome",
    "rating": 800,
    "tags": [
      "strings"
    ]
  },
  {
    "id": "1047/B",
    "contestId": 1047,
    "index": "B",
    "name": "Cover Points",
    "rating": 900,
    "tags": [
      "geometry",
      "math"
    ]
  },
  {
    "id": "1905/C",
    "contestId": 1905,
    "index": "C",
    "name": "Largest Subsequence",
    "rating": 1400,
    "tags": [
      "greedy",
      "strings"
    ]
  },
  {
    "id": "1496/B",
    "contestId": 1496,
    "index": "B",
    "name": "Max and Mex",
    "rating": 1100,
    "tags": [
      "math"
    ]
  },
  {
    "id": "38/H",
    "contestId": 38,
    "index": "H",
    "name": "The Great Marathon",
    "rating": 2400,
    "tags": [
      "dp"
    ]
  },
  {
    "id": "38/B",
    "contestId": 38,
    "index": "B",
    "name": "Chess",
    "rating": 1200,
    "tags": [
      "brute force",
      "implementation",
      "math"
    ]
  },
  {
    "id": "507/E",
    "contestId": 507,
    "index": "E",
    "name": "Breaking Good",
    "rating": 2100,
    "tags": [
      "dfs and similar",
      "dp",
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "920/B",
    "contestId": 920,
    "index": "B",
    "name": "Tea Queue",
    "rating": 1200,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "15/C",
    "contestId": 15,
    "index": "C",
    "name": "Industrial Nim",
    "rating": 2000,
    "tags": [
      "games"
    ]
  },
  {
    "id": "920/A",
    "contestId": 920,
    "index": "A",
    "name": "Water The Garden",
    "rating": 1000,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "771/A",
    "contestId": 771,
    "index": "A",
    "name": "Bear and Friendship Condition",
    "rating": 1500,
    "tags": [
      "dfs and similar",
      "dsu",
      "graphs"
    ]
  },
  {
    "id": "1861/C",
    "contestId": 1861,
    "index": "C",
    "name": "Queries for the Array",
    "rating": 1600,
    "tags": [
      "data structures",
      "dfs and similar",
      "implementation",
      "strings",
      "trees"
    ]
  },
  {
    "id": "1076/E",
    "contestId": 1076,
    "index": "E",
    "name": "Vasya and a Tree",
    "rating": 1900,
    "tags": [
      "data structures",
      "trees"
    ]
  },
  {
    "id": "1848/F",
    "contestId": 1848,
    "index": "F",
    "name": "Vika and Wiki",
    "rating": 2400,
    "tags": [
      "binary search",
      "bitmasks",
      "combinatorics",
      "divide and conquer",
      "dp",
      "math"
    ]
  },
  {
    "id": "1615/C",
    "contestId": 1615,
    "index": "C",
    "name": "Menorah",
    "rating": 1600,
    "tags": [
      "brute force",
      "graphs",
      "greedy",
      "math"
    ]
  },
  {
    "id": "736/D",
    "contestId": 736,
    "index": "D",
    "name": "Permutations",
    "rating": 2800,
    "tags": [
      "math",
      "matrices"
    ]
  },
  {
    "id": "1740/D",
    "contestId": 1740,
    "index": "D",
    "name": "Knowledge Cards",
    "rating": 1500,
    "tags": [
      "constructive algorithms",
      "data structures"
    ]
  },
  {
    "id": "1548/B",
    "contestId": 1548,
    "index": "B",
    "name": "Integers Have Friends",
    "rating": 1800,
    "tags": [
      "binary search",
      "data structures",
      "divide and conquer",
      "math",
      "number theory",
      "two pointers"
    ]
  },
  {
    "id": "1832/D2",
    "contestId": 1832,
    "index": "D2",
    "name": "Red-Blue Operations (Hard Version)",
    "rating": 2400,
    "tags": [
      "binary search",
      "constructive algorithms",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1832/D1",
    "contestId": 1832,
    "index": "D1",
    "name": "Red-Blue Operations (Easy Version)",
    "rating": 2100,
    "tags": [
      "binary search",
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "707/E",
    "contestId": 707,
    "index": "E",
    "name": "Garlands",
    "rating": 2400,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "1780/B",
    "contestId": 1780,
    "index": "B",
    "name": "GCD Partition",
    "rating": 1100,
    "tags": [
      "brute force",
      "greedy",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1967/C",
    "contestId": 1967,
    "index": "C",
    "name": "Fenwick Tree",
    "rating": 2300,
    "tags": [
      "bitmasks",
      "brute force",
      "combinatorics",
      "data structures",
      "dp",
      "math",
      "trees"
    ]
  },
  {
    "id": "1434/E",
    "contestId": 1434,
    "index": "E",
    "name": "A Convex Game",
    "rating": 3500,
    "tags": [
      "dsu",
      "games"
    ]
  },
  {
    "id": "1112/A",
    "contestId": 1112,
    "index": "A",
    "name": "Technogoblet of Fire",
    "rating": 1100,
    "tags": [
      "implementation"
    ]
  },
  {
    "id": "1798/E",
    "contestId": 1798,
    "index": "E",
    "name": "Multitest Generator",
    "rating": 2300,
    "tags": [
      "brute force",
      "dp"
    ]
  },
  {
    "id": "744/D",
    "contestId": 744,
    "index": "D",
    "name": "Hongcow Draws a Circle",
    "rating": 3200,
    "tags": [
      "geometry"
    ]
  },
  {
    "id": "765/F",
    "contestId": 765,
    "index": "F",
    "name": "Souvenirs",
    "rating": 3100,
    "tags": [
      "data structures"
    ]
  },
  {
    "id": "765/E",
    "contestId": 765,
    "index": "E",
    "name": "Tree Folding",
    "rating": 2200,
    "tags": [
      "dfs and similar",
      "dp",
      "greedy",
      "implementation",
      "trees"
    ]
  },
  {
    "id": "86/C",
    "contestId": 86,
    "index": "C",
    "name": "Genetic engineering",
    "rating": 2500,
    "tags": [
      "dp",
      "string suffix structures",
      "trees"
    ]
  },
  {
    "id": "368/B",
    "contestId": 368,
    "index": "B",
    "name": "Sereja and Suffixes",
    "rating": 1100,
    "tags": [
      "data structures",
      "dp"
    ]
  },
  {
    "id": "283/A",
    "contestId": 283,
    "index": "A",
    "name": "Cows and Sequence",
    "rating": 1600,
    "tags": [
      "constructive algorithms",
      "data structures",
      "implementation"
    ]
  },
  {
    "id": "1349/B",
    "contestId": 1349,
    "index": "B",
    "name": "Orac and Medians",
    "rating": 2000,
    "tags": [
      "constructive algorithms",
      "greedy",
      "math"
    ]
  },
  {
    "id": "1848/C",
    "contestId": 1848,
    "index": "C",
    "name": "Vika and Price Tags",
    "rating": 1800,
    "tags": [
      "math",
      "number theory"
    ]
  },
  {
    "id": "1798/F",
    "contestId": 1798,
    "index": "F",
    "name": "Gifts from Grandfather Ahmed",
    "rating": 2500,
    "tags": [
      "dp",
      "math",
      "number theory"
    ]
  },
  {
    "id": "1615/E",
    "contestId": 1615,
    "index": "E",
    "name": "Purple Crayon",
    "rating": 2400,
    "tags": [
      "data structures",
      "dfs and similar",
      "games",
      "graphs",
      "greedy",
      "math",
      "sortings",
      "trees"
    ]
  },
  {
    "id": "596/C",
    "contestId": 596,
    "index": "C",
    "name": "Wilbur and Points",
    "rating": 1700,
    "tags": [
      "combinatorics",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1933/C",
    "contestId": 1933,
    "index": "C",
    "name": "Turtle Fingers: Count the Values of k",
    "rating": 1100,
    "tags": [
      "brute force",
      "implementation",
      "math",
      "number theory"
    ]
  },
  {
    "id": "229/E",
    "contestId": 229,
    "index": "E",
    "name": "Gifts",
    "rating": 2600,
    "tags": [
      "combinatorics",
      "dp",
      "math",
      "probabilities"
    ]
  },
  {
    "id": "1468/G",
    "contestId": 1468,
    "index": "G",
    "name": "Hobbits",
    "rating": 2500,
    "tags": [
      "binary search",
      "geometry"
    ]
  },
  {
    "id": "241/E",
    "contestId": 241,
    "index": "E",
    "name": "Flights",
    "rating": 2600,
    "tags": [
      "graphs",
      "shortest paths"
    ]
  },
  {
    "id": "1670/A",
    "contestId": 1670,
    "index": "A",
    "name": "Prof. Slim",
    "rating": 800,
    "tags": [
      "greedy",
      "implementation",
      "sortings"
    ]
  },
  {
    "id": "1802/B",
    "contestId": 1802,
    "index": "B",
    "name": "Settlement of Guinea Pigs",
    "rating": 1000,
    "tags": [
      "greedy",
      "implementation",
      "math"
    ]
  },
  {
    "id": "1307/D",
    "contestId": 1307,
    "index": "D",
    "name": "Cow and Fields",
    "rating": 1900,
    "tags": [
      "binary search",
      "data structures",
      "dfs and similar",
      "graphs",
      "greedy",
      "shortest paths",
      "sortings"
    ]
  },
  {
    "id": "509/F",
    "contestId": 509,
    "index": "F",
    "name": "Progress Monitoring",
    "rating": 2300,
    "tags": [
      "dp",
      "trees"
    ]
  },
  {
    "id": "731/D",
    "contestId": 731,
    "index": "D",
    "name": "80-th Level Archeology",
    "rating": 2200,
    "tags": [
      "brute force",
      "data structures",
      "greedy",
      "sortings"
    ]
  },
  {
    "id": "1995/E2",
    "contestId": 1995,
    "index": "E2",
    "name": "Let Me Teach You a Lesson (Hard Version)",
    "rating": 2900,
    "tags": [
      "data structures",
      "dp",
      "matrices",
      "two pointers"
    ]
  },
  {
    "id": "1898/A",
    "contestId": 1898,
    "index": "A",
    "name": "Milica and String",
    "rating": 800,
    "tags": [
      "brute force",
      "implementation",
      "strings"
    ]
  },
  {
    "id": "639/E",
    "contestId": 639,
    "index": "E",
    "name": "Bear and Paradox",
    "rating": 2800,
    "tags": [
      "binary search",
      "greedy",
      "math",
      "sortings"
    ]
  },
  {
    "id": "388/B",
    "contestId": 388,
    "index": "B",
    "name": "Fox and Minimal path",
    "rating": 1900,
    "tags": [
      "bitmasks",
      "constructive algorithms",
      "graphs",
      "implementation",
      "math"
    ]
  }
]